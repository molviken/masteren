
LoRa-node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  000014ca  0000155e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000d7  00800130  00800130  0000158e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000158e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000228  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000027be  00000000  00000000  00001854  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015b5  00000000  00000000  00004012  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000163e  00000000  00000000  000055c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000057c  00000000  00000000  00006c08  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f04  00000000  00000000  00007184  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000012e2  00000000  00000000  00008088  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a8  00000000  00000000  0000936a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__ctors_end>
       4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      10:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      14:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      18:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      1c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      20:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      24:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      28:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      2c:	0c 94 bb 01 	jmp	0x376	; 0x376 <__vector_11>
      30:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      34:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      38:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      3c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      40:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      44:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      48:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      4c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      50:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      54:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      58:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      5c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      60:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      64:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      68:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      6c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      70:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      74:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      78:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      7c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      80:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      84:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      88:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      8c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      90:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      94:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      98:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      9c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      ac:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      bc:	0c 94 94 01 	jmp	0x328	; 0x328 <__vector_47>
      c0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>

000000cc <__trampolines_end>:
      cc:	6e 61       	ori	r22, 0x1E	; 30
      ce:	6e 00       	.word	0x006e	; ????

000000d0 <__c.2332>:
      d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     100:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     110:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     120:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     130:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     140:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     150:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     160:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     170:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     180:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     190:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ce <__ctors_end>:
     1ce:	11 24       	eor	r1, r1
     1d0:	1f be       	out	0x3f, r1	; 63
     1d2:	cf ef       	ldi	r28, 0xFF	; 255
     1d4:	d8 e0       	ldi	r29, 0x08	; 8
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	cd bf       	out	0x3d, r28	; 61

000001da <__do_copy_data>:
     1da:	11 e0       	ldi	r17, 0x01	; 1
     1dc:	a0 e0       	ldi	r26, 0x00	; 0
     1de:	b1 e0       	ldi	r27, 0x01	; 1
     1e0:	ea ec       	ldi	r30, 0xCA	; 202
     1e2:	f4 e1       	ldi	r31, 0x14	; 20
     1e4:	02 c0       	rjmp	.+4      	; 0x1ea <__do_copy_data+0x10>
     1e6:	05 90       	lpm	r0, Z+
     1e8:	0d 92       	st	X+, r0
     1ea:	a0 33       	cpi	r26, 0x30	; 48
     1ec:	b1 07       	cpc	r27, r17
     1ee:	d9 f7       	brne	.-10     	; 0x1e6 <__do_copy_data+0xc>

000001f0 <__do_clear_bss>:
     1f0:	22 e0       	ldi	r18, 0x02	; 2
     1f2:	a0 e3       	ldi	r26, 0x30	; 48
     1f4:	b1 e0       	ldi	r27, 0x01	; 1
     1f6:	01 c0       	rjmp	.+2      	; 0x1fa <.do_clear_bss_start>

000001f8 <.do_clear_bss_loop>:
     1f8:	1d 92       	st	X+, r1

000001fa <.do_clear_bss_start>:
     1fa:	a7 30       	cpi	r26, 0x07	; 7
     1fc:	b2 07       	cpc	r27, r18
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <.do_clear_bss_loop>
     200:	0e 94 06 01 	call	0x20c	; 0x20c <main>
     204:	0c 94 63 0a 	jmp	0x14c6	; 0x14c6 <_exit>

00000208 <__bad_interrupt>:
     208:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020c <main>:
	USART_transmit0(0x55);
	_delay_ms(100);
}


int main(void){
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
     210:	1f 92       	push	r1
     212:	cd b7       	in	r28, 0x3d	; 61
     214:	de b7       	in	r29, 0x3e	; 62
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     216:	2f ef       	ldi	r18, 0xFF	; 255
     218:	83 ec       	ldi	r24, 0xC3	; 195
     21a:	99 e0       	ldi	r25, 0x09	; 9
     21c:	21 50       	subi	r18, 0x01	; 1
     21e:	80 40       	sbci	r24, 0x00	; 0
     220:	90 40       	sbci	r25, 0x00	; 0
     222:	e1 f7       	brne	.-8      	; 0x21c <main+0x10>
     224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x1a>
     226:	00 00       	nop
	//puts("Program ended");
	
	_delay_ms(400);
	
	uint8_t join;
	board_setup(&join);
     228:	ce 01       	movw	r24, r28
     22a:	01 96       	adiw	r24, 0x01	; 1
     22c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <board_setup>
	puts("hei");
     230:	8e e0       	ldi	r24, 0x0E	; 14
     232:	91 e0       	ldi	r25, 0x01	; 1
     234:	0e 94 d5 09 	call	0x13aa	; 0x13aa <puts>
		PORTD |= (1<<PORTD4);
		_delay_us(1);
		vbus = INA219_readBusVoltageReg();
		curr = INA219_readCurrentReg();
		
		printf("vbus: %.2f      curr: %.2f \n", vbus*0.004, curr*0.015);
     238:	0f 2e       	mov	r0, r31
     23a:	f2 e1       	ldi	r31, 0x12	; 18
     23c:	ef 2e       	mov	r14, r31
     23e:	f1 e0       	ldi	r31, 0x01	; 1
     240:	ff 2e       	mov	r15, r31
     242:	f0 2d       	mov	r31, r0
	uint8_t join;
	board_setup(&join);
	puts("hei");
	uint16_t vbus,curr;
	while(1){
		PORTD |= (1<<PORTD4);
     244:	5c 9a       	sbi	0x0b, 4	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     246:	22 e0       	ldi	r18, 0x02	; 2
     248:	2a 95       	dec	r18
     24a:	f1 f7       	brne	.-4      	; 0x248 <main+0x3c>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x42>
		_delay_us(1);
		vbus = INA219_readBusVoltageReg();
     24e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <INA219_readBusVoltageReg>
     252:	8c 01       	movw	r16, r24
		curr = INA219_readCurrentReg();
     254:	0e 94 11 03 	call	0x622	; 0x622 <INA219_readCurrentReg>
		
		printf("vbus: %.2f      curr: %.2f \n", vbus*0.004, curr*0.015);
     258:	bc 01       	movw	r22, r24
     25a:	80 e0       	ldi	r24, 0x00	; 0
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	0e 94 93 07 	call	0xf26	; 0xf26 <__floatunsisf>
     262:	2f e8       	ldi	r18, 0x8F	; 143
     264:	32 ec       	ldi	r19, 0xC2	; 194
     266:	45 e7       	ldi	r20, 0x75	; 117
     268:	5c e3       	ldi	r21, 0x3C	; 60
     26a:	0e 94 21 08 	call	0x1042	; 0x1042 <__mulsf3>
     26e:	9f 93       	push	r25
     270:	8f 93       	push	r24
     272:	7f 93       	push	r23
     274:	6f 93       	push	r22
     276:	b8 01       	movw	r22, r16
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	0e 94 93 07 	call	0xf26	; 0xf26 <__floatunsisf>
     280:	2f e6       	ldi	r18, 0x6F	; 111
     282:	32 e1       	ldi	r19, 0x12	; 18
     284:	43 e8       	ldi	r20, 0x83	; 131
     286:	5b e3       	ldi	r21, 0x3B	; 59
     288:	0e 94 21 08 	call	0x1042	; 0x1042 <__mulsf3>
     28c:	9f 93       	push	r25
     28e:	8f 93       	push	r24
     290:	7f 93       	push	r23
     292:	6f 93       	push	r22
     294:	ff 92       	push	r15
     296:	ef 92       	push	r14
     298:	0e 94 bf 09 	call	0x137e	; 0x137e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     29c:	8f ef       	ldi	r24, 0xFF	; 255
     29e:	9e e9       	ldi	r25, 0x9E	; 158
     2a0:	24 e2       	ldi	r18, 0x24	; 36
     2a2:	81 50       	subi	r24, 0x01	; 1
     2a4:	90 40       	sbci	r25, 0x00	; 0
     2a6:	20 40       	sbci	r18, 0x00	; 0
     2a8:	e1 f7       	brne	.-8      	; 0x2a2 <main+0x96>
     2aa:	00 c0       	rjmp	.+0      	; 0x2ac <main+0xa0>
     2ac:	00 00       	nop
     2ae:	0f b6       	in	r0, 0x3f	; 63
     2b0:	f8 94       	cli
     2b2:	de bf       	out	0x3e, r29	; 62
     2b4:	0f be       	out	0x3f, r0	; 63
     2b6:	cd bf       	out	0x3d, r28	; 61
     2b8:	c5 cf       	rjmp	.-118    	; 0x244 <main+0x38>

000002ba <adc_init>:




void adc_init(){
	ADMUX = 0;
     2ba:	ac e7       	ldi	r26, 0x7C	; 124
     2bc:	b0 e0       	ldi	r27, 0x00	; 0
     2be:	1c 92       	st	X, r1
	ADCSRA = 0;
     2c0:	ea e7       	ldi	r30, 0x7A	; 122
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	10 82       	st	Z, r1
	ADMUX |= ADC_VOLTAGE_REF_AVCC;											// Sets adc voltage reference
     2c6:	8c 91       	ld	r24, X
     2c8:	80 64       	ori	r24, 0x40	; 64
     2ca:	8c 93       	st	X, r24
	ADCSRA |= ADC_PRESCALAR_128;											// ADC prescaler = 128 ---> 8MHz goes to 62.5 kHz
     2cc:	80 81       	ld	r24, Z
     2ce:	86 60       	ori	r24, 0x06	; 6
     2d0:	80 83       	st	Z, r24
	//ADCSRA |= (0 << ADIE);												// Enables ADC interrupt
	ADCSRA |= (1 << ADEN);													// Enabling the ADC
     2d2:	80 81       	ld	r24, Z
     2d4:	80 68       	ori	r24, 0x80	; 128
     2d6:	80 83       	st	Z, r24
     2d8:	08 95       	ret

000002da <board_charge>:
	DDRB |= (1 << PORTB1);
	DDRB |= (1 << PORTB2);
}

void board_charge(int off){
	if (off){
     2da:	89 2b       	or	r24, r25
     2dc:	11 f0       	breq	.+4      	; 0x2e2 <board_charge+0x8>
		set_bit(PORTD, PORTD4);
     2de:	5c 9a       	sbi	0x0b, 4	; 11
     2e0:	08 95       	ret
	}
	else {
		clear_bit(PORTD, PORTD4);
     2e2:	5c 98       	cbi	0x0b, 4	; 11
     2e4:	08 95       	ret

000002e6 <board_setup>:
	}
}

void board_setup(uint8_t *joined_err){
     2e6:	cf 93       	push	r28
     2e8:	df 93       	push	r29
     2ea:	ec 01       	movw	r28, r24
	#ifndef LORA_NODE
	USART_init();
     2ec:	0e 94 3e 03 	call	0x67c	; 0x67c <USART_init>
	#endif
	adc_init();
     2f0:	0e 94 5d 01 	call	0x2ba	; 0x2ba <adc_init>

static void board_dmy_btn_init();
static void board_gpio_init();

void board_dmy_btn_init(void){
	DDRD &= ~(1 << DDD3);     // Clear the PD2 pin
     2f4:	53 98       	cbi	0x0a, 3	; 10
	EICRA |= (1 << ISC11);    // set INT1 to trigger on falling edge
     2f6:	e9 e6       	ldi	r30, 0x69	; 105
     2f8:	f0 e0       	ldi	r31, 0x00	; 0
     2fa:	80 81       	ld	r24, Z
     2fc:	88 60       	ori	r24, 0x08	; 8
     2fe:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);     // Turns on INT1
     300:	e9 9a       	sbi	0x1d, 1	; 29
}

void board_gpio_init(void){
	DDRD |= (1 << DDRD4);	  // Set PD4 as output
     302:	54 9a       	sbi	0x0a, 4	; 10
	DDRB |= (1 << PORTB0);
     304:	20 9a       	sbi	0x04, 0	; 4
	DDRB |= (1 << PORTB1);
     306:	21 9a       	sbi	0x04, 1	; 4
	DDRB |= (1 << PORTB2);
     308:	22 9a       	sbi	0x04, 2	; 4
	USART_init();
	#endif
	adc_init();
	board_dmy_btn_init();
	board_gpio_init();
	board_charge(0);
     30a:	80 e0       	ldi	r24, 0x00	; 0
     30c:	90 e0       	ldi	r25, 0x00	; 0
     30e:	0e 94 6d 01 	call	0x2da	; 0x2da <board_charge>
	#ifdef LORA_NODE
		lora_init(joined_err);
	#else
		*joined_err = 0;
     312:	18 82       	st	Y, r1
	#endif

	i2c_init();
     314:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <i2c_init>
	INA219_init();
     318:	0e 94 36 03 	call	0x66c	; 0x66c <INA219_init>
	timers_init();
     31c:	0e 94 c2 03 	call	0x784	; 0x784 <timers_init>
	sei();
     320:	78 94       	sei
}
     322:	df 91       	pop	r29
     324:	cf 91       	pop	r28
     326:	08 95       	ret

00000328 <__vector_47>:
//{	
	////tx_test_flag = 1;
	//puts("button pressed");
//}

ISR (USART2_RX_vect){
     328:	1f 92       	push	r1
     32a:	0f 92       	push	r0
     32c:	0f b6       	in	r0, 0x3f	; 63
     32e:	0f 92       	push	r0
     330:	11 24       	eor	r1, r1
     332:	2f 93       	push	r18
     334:	3f 93       	push	r19
     336:	4f 93       	push	r20
     338:	5f 93       	push	r21
     33a:	6f 93       	push	r22
     33c:	7f 93       	push	r23
     33e:	8f 93       	push	r24
     340:	9f 93       	push	r25
     342:	af 93       	push	r26
     344:	bf 93       	push	r27
     346:	ef 93       	push	r30
     348:	ff 93       	push	r31
	USART_receiveString2();
     34a:	0e 94 87 03 	call	0x70e	; 0x70e <USART_receiveString2>
	data_receive_flag = 1;
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <data_receive_flag>
}
     354:	ff 91       	pop	r31
     356:	ef 91       	pop	r30
     358:	bf 91       	pop	r27
     35a:	af 91       	pop	r26
     35c:	9f 91       	pop	r25
     35e:	8f 91       	pop	r24
     360:	7f 91       	pop	r23
     362:	6f 91       	pop	r22
     364:	5f 91       	pop	r21
     366:	4f 91       	pop	r20
     368:	3f 91       	pop	r19
     36a:	2f 91       	pop	r18
     36c:	0f 90       	pop	r0
     36e:	0f be       	out	0x3f, r0	; 63
     370:	0f 90       	pop	r0
     372:	1f 90       	pop	r1
     374:	18 95       	reti

00000376 <__vector_11>:


ISR(TIMER2_OVF_vect){
     376:	1f 92       	push	r1
     378:	0f 92       	push	r0
     37a:	0f b6       	in	r0, 0x3f	; 63
     37c:	0f 92       	push	r0
     37e:	11 24       	eor	r1, r1
     380:	8f 93       	push	r24
     382:	9f 93       	push	r25
     384:	af 93       	push	r26
     386:	bf 93       	push	r27
	//puts("s");
	current_time ++;
     388:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <current_time>
     38c:	90 91 95 01 	lds	r25, 0x0195	; 0x800195 <current_time+0x1>
     390:	a0 91 96 01 	lds	r26, 0x0196	; 0x800196 <current_time+0x2>
     394:	b0 91 97 01 	lds	r27, 0x0197	; 0x800197 <current_time+0x3>
     398:	01 96       	adiw	r24, 0x01	; 1
     39a:	a1 1d       	adc	r26, r1
     39c:	b1 1d       	adc	r27, r1
     39e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <current_time>
     3a2:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <current_time+0x1>
     3a6:	a0 93 96 01 	sts	0x0196, r26	; 0x800196 <current_time+0x2>
     3aa:	b0 93 97 01 	sts	0x0197, r27	; 0x800197 <current_time+0x3>
     3ae:	bf 91       	pop	r27
     3b0:	af 91       	pop	r26
     3b2:	9f 91       	pop	r25
     3b4:	8f 91       	pop	r24
     3b6:	0f 90       	pop	r0
     3b8:	0f be       	out	0x3f, r0	; 63
     3ba:	0f 90       	pop	r0
     3bc:	1f 90       	pop	r1
     3be:	18 95       	reti

000003c0 <i2c_init>:
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address){
    return i2c_start( address );

}
     3c0:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
     3c4:	80 e2       	ldi	r24, 0x20	; 32
     3c6:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
     3ca:	08 95       	ret

000003cc <i2c_sync>:
     3cc:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
     3d0:	88 23       	and	r24, r24
     3d2:	bc f0       	brlt	.+46     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
     3d4:	24 e6       	ldi	r18, 0x64	; 100
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	ec ed       	ldi	r30, 0xDC	; 220
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	82 e0       	ldi	r24, 0x02	; 2
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <i2c_sync+0x12>
     3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <i2c_sync+0x18>
     3e4:	21 50       	subi	r18, 0x01	; 1
     3e6:	31 09       	sbc	r19, r1
     3e8:	80 81       	ld	r24, Z
     3ea:	88 23       	and	r24, r24
     3ec:	24 f0       	brlt	.+8      	; 0x3f6 <i2c_sync+0x2a>
     3ee:	21 15       	cp	r18, r1
     3f0:	31 05       	cpc	r19, r1
     3f2:	a1 f7       	brne	.-24     	; 0x3dc <i2c_sync+0x10>
     3f4:	03 c0       	rjmp	.+6      	; 0x3fc <i2c_sync+0x30>
     3f6:	21 15       	cp	r18, r1
     3f8:	31 05       	cpc	r19, r1
     3fa:	29 f4       	brne	.+10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     3fc:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
     400:	02 c0       	rjmp	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     402:	24 e6       	ldi	r18, 0x64	; 100
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	81 e0       	ldi	r24, 0x01	; 1
     408:	23 2b       	or	r18, r19
     40a:	09 f4       	brne	.+2      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
     40c:	80 e0       	ldi	r24, 0x00	; 0
     40e:	08 95       	ret

00000410 <i2c_waitStop>:
     410:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
     414:	84 ff       	sbrs	r24, 4
     416:	17 c0       	rjmp	.+46     	; 0x446 <i2c_waitStop+0x36>
     418:	24 e6       	ldi	r18, 0x64	; 100
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	ec ed       	ldi	r30, 0xDC	; 220
     41e:	f0 e0       	ldi	r31, 0x00	; 0
     420:	82 e0       	ldi	r24, 0x02	; 2
     422:	8a 95       	dec	r24
     424:	f1 f7       	brne	.-4      	; 0x422 <i2c_waitStop+0x12>
     426:	00 c0       	rjmp	.+0      	; 0x428 <i2c_waitStop+0x18>
     428:	21 50       	subi	r18, 0x01	; 1
     42a:	31 09       	sbc	r19, r1
     42c:	80 81       	ld	r24, Z
     42e:	84 ff       	sbrs	r24, 4
     430:	04 c0       	rjmp	.+8      	; 0x43a <i2c_waitStop+0x2a>
     432:	21 15       	cp	r18, r1
     434:	31 05       	cpc	r19, r1
     436:	a1 f7       	brne	.-24     	; 0x420 <i2c_waitStop+0x10>
     438:	03 c0       	rjmp	.+6      	; 0x440 <i2c_waitStop+0x30>
     43a:	21 15       	cp	r18, r1
     43c:	31 05       	cpc	r19, r1
     43e:	29 f4       	brne	.+10     	; 0x44a <i2c_waitStop+0x3a>
     440:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
     444:	02 c0       	rjmp	.+4      	; 0x44a <i2c_waitStop+0x3a>
     446:	24 e6       	ldi	r18, 0x64	; 100
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	81 e0       	ldi	r24, 0x01	; 1
     44c:	23 2b       	or	r18, r19
     44e:	09 f4       	brne	.+2      	; 0x452 <i2c_waitStop+0x42>
     450:	80 e0       	ldi	r24, 0x00	; 0
     452:	08 95       	ret

00000454 <i2c_start>:
     454:	cf 93       	push	r28
     456:	c8 2f       	mov	r28, r24
     458:	84 ea       	ldi	r24, 0xA4	; 164
     45a:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
     45e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_sync>
     462:	88 23       	and	r24, r24
     464:	e9 f0       	breq	.+58     	; 0x4a0 <i2c_start+0x4c>
     466:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
     46a:	88 7f       	andi	r24, 0xF8	; 248
     46c:	88 30       	cpi	r24, 0x08	; 8
     46e:	11 f0       	breq	.+4      	; 0x474 <i2c_start+0x20>
     470:	80 31       	cpi	r24, 0x10	; 16
     472:	99 f4       	brne	.+38     	; 0x49a <i2c_start+0x46>
     474:	c0 93 db 00 	sts	0x00DB, r28	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
     478:	84 e8       	ldi	r24, 0x84	; 132
     47a:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
     47e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_sync>
     482:	88 23       	and	r24, r24
     484:	69 f0       	breq	.+26     	; 0x4a0 <i2c_start+0x4c>
     486:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
     48a:	98 7f       	andi	r25, 0xF8	; 248
     48c:	98 31       	cpi	r25, 0x18	; 24
     48e:	39 f0       	breq	.+14     	; 0x49e <i2c_start+0x4a>
     490:	81 e0       	ldi	r24, 0x01	; 1
     492:	90 34       	cpi	r25, 0x40	; 64
     494:	29 f4       	brne	.+10     	; 0x4a0 <i2c_start+0x4c>
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	03 c0       	rjmp	.+6      	; 0x4a0 <i2c_start+0x4c>
     49a:	81 e0       	ldi	r24, 0x01	; 1
     49c:	01 c0       	rjmp	.+2      	; 0x4a0 <i2c_start+0x4c>
     49e:	80 e0       	ldi	r24, 0x00	; 0
     4a0:	cf 91       	pop	r28
     4a2:	08 95       	ret

000004a4 <i2c_stop>:
/*************************************************************************
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void){
    /* send stop condition */
	TWCR1 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     4a4:	84 e9       	ldi	r24, 0x94	; 148
     4a6:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
	
	// wait until stop condition is executed and bus released
	i2c_waitStop(); 
     4aa:	0e 94 08 02 	call	0x410	; 0x410 <i2c_waitStop>
     4ae:	08 95       	ret

000004b0 <i2c_write>:
*************************************************************************/
unsigned char i2c_write( unsigned char data ){	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR1 = data;
     4b0:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
	TWCR1 = (1<<TWINT) | (1<<TWEN);
     4b4:	84 e8       	ldi	r24, 0x84	; 132
     4b6:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>

	// wait until transmission completed
	i2c_sync();
     4ba:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_sync>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     4be:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
     4c2:	98 7f       	andi	r25, 0xF8	; 248
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	98 32       	cpi	r25, 0x28	; 40
     4c8:	09 f4       	brne	.+2      	; 0x4cc <i2c_write+0x1c>
     4ca:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}
     4cc:	08 95       	ret

000004ce <i2c_readAck>:
 Read one byte from the I2C device, request more data from device 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void){
	TWCR1 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     4ce:	84 ec       	ldi	r24, 0xC4	; 196
     4d0:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
	i2c_sync();    
     4d4:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_sync>
	return TWDR1;
     4d8:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
}
     4dc:	08 95       	ret

000004de <i2c_readNak>:
 Read one byte from the I2C device, read is followed by a stop condition 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void){
	TWCR1 = (1<<TWINT) | (1<<TWEN);
     4de:	84 e8       	ldi	r24, 0x84	; 132
     4e0:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__TEXT_REGION_LENGTH__+0x7e00dc>
	i2c_sync(); 
     4e4:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_sync>
	return TWDR1;
     4e8:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__TEXT_REGION_LENGTH__+0x7e00db>
}
     4ec:	08 95       	ret

000004ee <i2c_read2ByteRegister>:
  
  Input:    device address, register address, buffer for storage
  Return:   0 write successful 
            1 write failed
*************************************************************************/
uint8_t i2c_read2ByteRegister(uint8_t adr, uint8_t regAddr, uint8_t *data){
     4ee:	ff 92       	push	r15
     4f0:	0f 93       	push	r16
     4f2:	1f 93       	push	r17
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	d8 2f       	mov	r29, r24
     4fa:	f6 2e       	mov	r15, r22
     4fc:	8a 01       	movw	r16, r20
	uint8_t error = 0;
	error += i2c_start(adr | I2C_WRITE);
     4fe:	0e 94 2a 02 	call	0x454	; 0x454 <i2c_start>
     502:	c8 2f       	mov	r28, r24
	error += i2c_write(regAddr);
     504:	8f 2d       	mov	r24, r15
     506:	0e 94 58 02 	call	0x4b0	; 0x4b0 <i2c_write>
     50a:	c8 0f       	add	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     50c:	8a e1       	ldi	r24, 0x1A	; 26
     50e:	8a 95       	dec	r24
     510:	f1 f7       	brne	.-4      	; 0x50e <i2c_read2ByteRegister+0x20>
     512:	00 c0       	rjmp	.+0      	; 0x514 <i2c_read2ByteRegister+0x26>
	_delay_us(10);
	//read data
	error += i2c_start(adr | I2C_READ);
     514:	8d 2f       	mov	r24, r29
     516:	81 60       	ori	r24, 0x01	; 1
     518:	0e 94 2a 02 	call	0x454	; 0x454 <i2c_start>
     51c:	c8 0f       	add	r28, r24
	data[1] = i2c_readAck();
     51e:	0e 94 67 02 	call	0x4ce	; 0x4ce <i2c_readAck>
     522:	f8 01       	movw	r30, r16
     524:	81 83       	std	Z+1, r24	; 0x01
	data[0] = i2c_readNak();
     526:	0e 94 6f 02 	call	0x4de	; 0x4de <i2c_readNak>
     52a:	f8 01       	movw	r30, r16
     52c:	80 83       	st	Z, r24
	i2c_stop();
     52e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <i2c_stop>
     532:	81 e0       	ldi	r24, 0x01	; 1
     534:	c1 11       	cpse	r28, r1
     536:	01 c0       	rjmp	.+2      	; 0x53a <i2c_read2ByteRegister+0x4c>
     538:	80 e0       	ldi	r24, 0x00	; 0
	
	if (error) return 1;
	else return 0;
}
     53a:	df 91       	pop	r29
     53c:	cf 91       	pop	r28
     53e:	1f 91       	pop	r17
     540:	0f 91       	pop	r16
     542:	ff 90       	pop	r15
     544:	08 95       	ret

00000546 <i2c_write2ByteRegister>:
  
  Input:    device address, register address, bytes to be transfered 
  Return:   0 write successful
			1 write failed
*************************************************************************/
uint8_t i2c_write2ByteRegister(uint8_t adr, uint8_t regAddr, uint16_t data){
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	06 2f       	mov	r16, r22
     550:	d4 2f       	mov	r29, r20
     552:	15 2f       	mov	r17, r21
	uint8_t error = 0;
	error += i2c_start(adr | I2C_WRITE);
     554:	0e 94 2a 02 	call	0x454	; 0x454 <i2c_start>
     558:	c8 2f       	mov	r28, r24
	error += i2c_write(regAddr);
     55a:	80 2f       	mov	r24, r16
     55c:	0e 94 58 02 	call	0x4b0	; 0x4b0 <i2c_write>
     560:	c8 0f       	add	r28, r24
     562:	8a e1       	ldi	r24, 0x1A	; 26
     564:	8a 95       	dec	r24
     566:	f1 f7       	brne	.-4      	; 0x564 <i2c_write2ByteRegister+0x1e>
     568:	00 c0       	rjmp	.+0      	; 0x56a <i2c_write2ByteRegister+0x24>
	_delay_us(10);
	error += i2c_write((uint8_t)(data >> 8));
     56a:	81 2f       	mov	r24, r17
     56c:	0e 94 58 02 	call	0x4b0	; 0x4b0 <i2c_write>
     570:	c8 0f       	add	r28, r24
	error += i2c_write((uint8_t)(data & 0xFF));
     572:	8d 2f       	mov	r24, r29
     574:	0e 94 58 02 	call	0x4b0	; 0x4b0 <i2c_write>
     578:	c8 0f       	add	r28, r24
	i2c_stop();
     57a:	0e 94 52 02 	call	0x4a4	; 0x4a4 <i2c_stop>
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	c1 11       	cpse	r28, r1
     582:	01 c0       	rjmp	.+2      	; 0x586 <i2c_write2ByteRegister+0x40>
     584:	80 e0       	ldi	r24, 0x00	; 0
	if (error) return 1;
	else return 0;
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	1f 91       	pop	r17
     58c:	0f 91       	pop	r16
     58e:	08 95       	ret

00000590 <INA219_setCalibration_16V_400mA>:

uint16_t INA219_readShuntVoltageReg(){ // Not operational
	uint8_t value[2];
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_SHUNTVOLTAGE, value)) return 1;
	return ((value[1] << 8) | value[0]);
}
     590:	cf 93       	push	r28
     592:	40 e8       	ldi	r20, 0x80	; 128
     594:	5a e6       	ldi	r21, 0x6A	; 106
     596:	65 e0       	ldi	r22, 0x05	; 5
     598:	80 e8       	ldi	r24, 0x80	; 128
     59a:	0e 94 a3 02 	call	0x546	; 0x546 <i2c_write2ByteRegister>
     59e:	c8 2f       	mov	r28, r24
     5a0:	4b e9       	ldi	r20, 0x9B	; 155
     5a2:	51 e0       	ldi	r21, 0x01	; 1
     5a4:	60 e0       	ldi	r22, 0x00	; 0
     5a6:	80 e8       	ldi	r24, 0x80	; 128
     5a8:	0e 94 a3 02 	call	0x546	; 0x546 <i2c_write2ByteRegister>
     5ac:	c8 0f       	add	r28, r24
     5ae:	81 e0       	ldi	r24, 0x01	; 1
     5b0:	09 f4       	brne	.+2      	; 0x5b4 <INA219_setCalibration_16V_400mA+0x24>
     5b2:	80 e0       	ldi	r24, 0x00	; 0
     5b4:	cf 91       	pop	r28
     5b6:	08 95       	ret

000005b8 <INA219_readBusVoltageReg>:
     5b8:	cf 93       	push	r28
     5ba:	df 93       	push	r29
     5bc:	00 d0       	rcall	.+0      	; 0x5be <INA219_readBusVoltageReg+0x6>
     5be:	cd b7       	in	r28, 0x3d	; 61
     5c0:	de b7       	in	r29, 0x3e	; 62
     5c2:	4b e9       	ldi	r20, 0x9B	; 155
     5c4:	51 e0       	ldi	r21, 0x01	; 1
     5c6:	60 e0       	ldi	r22, 0x00	; 0
     5c8:	80 e8       	ldi	r24, 0x80	; 128
     5ca:	0e 94 a3 02 	call	0x546	; 0x546 <i2c_write2ByteRegister>
     5ce:	8f ea       	ldi	r24, 0xAF	; 175
     5d0:	94 e0       	ldi	r25, 0x04	; 4
     5d2:	01 97       	sbiw	r24, 0x01	; 1
     5d4:	f1 f7       	brne	.-4      	; 0x5d2 <INA219_readBusVoltageReg+0x1a>
     5d6:	00 c0       	rjmp	.+0      	; 0x5d8 <INA219_readBusVoltageReg+0x20>
     5d8:	00 00       	nop
     5da:	ae 01       	movw	r20, r28
     5dc:	4f 5f       	subi	r20, 0xFF	; 255
     5de:	5f 4f       	sbci	r21, 0xFF	; 255
     5e0:	62 e0       	ldi	r22, 0x02	; 2
     5e2:	80 e8       	ldi	r24, 0x80	; 128
     5e4:	0e 94 77 02 	call	0x4ee	; 0x4ee <i2c_read2ByteRegister>
     5e8:	81 11       	cpse	r24, r1
     5ea:	11 c0       	rjmp	.+34     	; 0x60e <INA219_readBusVoltageReg+0x56>
     5ec:	8a 81       	ldd	r24, Y+2	; 0x02
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	98 2f       	mov	r25, r24
     5f2:	88 27       	eor	r24, r24
     5f4:	29 81       	ldd	r18, Y+1	; 0x01
     5f6:	82 2b       	or	r24, r18
     5f8:	95 95       	asr	r25
     5fa:	87 95       	ror	r24
     5fc:	95 95       	asr	r25
     5fe:	87 95       	ror	r24
     600:	95 95       	asr	r25
     602:	87 95       	ror	r24
     604:	81 30       	cpi	r24, 0x01	; 1
     606:	20 e1       	ldi	r18, 0x10	; 16
     608:	92 07       	cpc	r25, r18
     60a:	30 f0       	brcs	.+12     	; 0x618 <INA219_readBusVoltageReg+0x60>
     60c:	03 c0       	rjmp	.+6      	; 0x614 <INA219_readBusVoltageReg+0x5c>
     60e:	80 e0       	ldi	r24, 0x00	; 0
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	02 c0       	rjmp	.+4      	; 0x618 <INA219_readBusVoltageReg+0x60>
     614:	80 e0       	ldi	r24, 0x00	; 0
     616:	90 e0       	ldi	r25, 0x00	; 0
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	df 91       	pop	r29
     61e:	cf 91       	pop	r28
     620:	08 95       	ret

00000622 <INA219_readCurrentReg>:
uint16_t INA219_readCurrentReg(){
     622:	cf 93       	push	r28
     624:	df 93       	push	r29
     626:	00 d0       	rcall	.+0      	; 0x628 <INA219_readCurrentReg+0x6>
     628:	cd b7       	in	r28, 0x3d	; 61
     62a:	de b7       	in	r29, 0x3e	; 62
	uint8_t value[2];
	//INA219_trigger_oneshow_conversion();
	//_delay_us(600);
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_CURRENT, value)) return 0;
     62c:	ae 01       	movw	r20, r28
     62e:	4f 5f       	subi	r20, 0xFF	; 255
     630:	5f 4f       	sbci	r21, 0xFF	; 255
     632:	64 e0       	ldi	r22, 0x04	; 4
     634:	80 e8       	ldi	r24, 0x80	; 128
     636:	0e 94 77 02 	call	0x4ee	; 0x4ee <i2c_read2ByteRegister>
     63a:	81 11       	cpse	r24, r1
     63c:	0d c0       	rjmp	.+26     	; 0x658 <INA219_readCurrentReg+0x36>
	uint16_t total = (value[1] << 8) | value[0];
     63e:	2a 81       	ldd	r18, Y+2	; 0x02
     640:	30 e0       	ldi	r19, 0x00	; 0
     642:	32 2f       	mov	r19, r18
     644:	22 27       	eor	r18, r18
     646:	89 81       	ldd	r24, Y+1	; 0x01
     648:	28 2b       	or	r18, r24
	#ifdef INA219_debug
	printf("curr: %.2f mA\n", (float)total*0.015);
	#endif
	if(total>0x8000) return 0x00;  // Remove possibility of corruption with a bug where total is above 0xFFAE with no connected source.
     64a:	21 30       	cpi	r18, 0x01	; 1
     64c:	80 e8       	ldi	r24, 0x80	; 128
     64e:	38 07       	cpc	r19, r24
     650:	30 f4       	brcc	.+12     	; 0x65e <INA219_readCurrentReg+0x3c>
	return total;
     652:	82 2f       	mov	r24, r18
     654:	93 2f       	mov	r25, r19
     656:	05 c0       	rjmp	.+10     	; 0x662 <INA219_readCurrentReg+0x40>
}
uint16_t INA219_readCurrentReg(){
	uint8_t value[2];
	//INA219_trigger_oneshow_conversion();
	//_delay_us(600);
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_CURRENT, value)) return 0;
     658:	80 e0       	ldi	r24, 0x00	; 0
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	02 c0       	rjmp	.+4      	; 0x662 <INA219_readCurrentReg+0x40>
	uint16_t total = (value[1] << 8) | value[0];
	#ifdef INA219_debug
	printf("curr: %.2f mA\n", (float)total*0.015);
	#endif
	if(total>0x8000) return 0x00;  // Remove possibility of corruption with a bug where total is above 0xFFAE with no connected source.
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	90 e0       	ldi	r25, 0x00	; 0
	return total;
}
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	df 91       	pop	r29
     668:	cf 91       	pop	r28
     66a:	08 95       	ret

0000066c <INA219_init>:


uint8_t INA219_init(){
	if (INA219_setCalibration_16V_400mA()) {
     66c:	0e 94 c8 02 	call	0x590	; 0x590 <INA219_setCalibration_16V_400mA>
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	81 11       	cpse	r24, r1
     674:	01 c0       	rjmp	.+2      	; 0x678 <INA219_init+0xc>
     676:	90 e0       	ldi	r25, 0x00	; 0
		INA219_readCalibrationReg();
		INA219_readConfigReg();
		#endif
		return 0;
	}
     678:	89 2f       	mov	r24, r25
     67a:	08 95       	ret

0000067c <USART_init>:
	for(; *string; ++string){
		USART_transmit2(*string);
	}
	//USART_transmit2(0x0D);
	USART_transmit2(0x0A);
}
     67c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     680:	83 e3       	ldi	r24, 0x33	; 51
     682:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     686:	28 e1       	ldi	r18, 0x18	; 24
     688:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     68c:	e2 ec       	ldi	r30, 0xC2	; 194
     68e:	f0 e0       	ldi	r31, 0x00	; 0
     690:	90 81       	ld	r25, Z
     692:	96 60       	ori	r25, 0x06	; 6
     694:	90 83       	st	Z, r25
     696:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     69a:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     69e:	20 93 c9 00 	sts	0x00C9, r18	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7e00c9>
     6a2:	ea ec       	ldi	r30, 0xCA	; 202
     6a4:	f0 e0       	ldi	r31, 0x00	; 0
     6a6:	90 81       	ld	r25, Z
     6a8:	96 60       	ori	r25, 0x06	; 6
     6aa:	90 83       	st	Z, r25
     6ac:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7e00d5>
     6b0:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7e00d4>
     6b4:	88 e9       	ldi	r24, 0x98	; 152
     6b6:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7e00d1>
     6ba:	e2 ed       	ldi	r30, 0xD2	; 210
     6bc:	f0 e0       	ldi	r31, 0x00	; 0
     6be:	80 81       	ld	r24, Z
     6c0:	86 60       	ori	r24, 0x06	; 6
     6c2:	80 83       	st	Z, r24
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	91 e0       	ldi	r25, 0x01	; 1
     6c8:	90 93 04 02 	sts	0x0204, r25	; 0x800204 <__iob+0x3>
     6cc:	80 93 03 02 	sts	0x0203, r24	; 0x800203 <__iob+0x2>
     6d0:	08 95       	ret

000006d2 <USART_transmit2>:
     6d2:	e0 ed       	ldi	r30, 0xD0	; 208
     6d4:	f0 e0       	ldi	r31, 0x00	; 0
     6d6:	90 81       	ld	r25, Z
     6d8:	95 ff       	sbrs	r25, 5
     6da:	fd cf       	rjmp	.-6      	; 0x6d6 <USART_transmit2+0x4>
     6dc:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7e00d6>
     6e0:	08 95       	ret

000006e2 <USART_TRANSMIT_printf>:
     6e2:	cf 93       	push	r28
     6e4:	c8 2f       	mov	r28, r24
     6e6:	8a 30       	cpi	r24, 0x0A	; 10
     6e8:	19 f4       	brne	.+6      	; 0x6f0 <USART_TRANSMIT_printf+0xe>
     6ea:	8d e0       	ldi	r24, 0x0D	; 13
     6ec:	0e 94 69 03 	call	0x6d2	; 0x6d2 <USART_transmit2>
     6f0:	8c 2f       	mov	r24, r28
     6f2:	0e 94 69 03 	call	0x6d2	; 0x6d2 <USART_transmit2>
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	cf 91       	pop	r28
     6fc:	08 95       	ret

000006fe <USART_receive2>:
     6fe:	e0 ed       	ldi	r30, 0xD0	; 208
     700:	f0 e0       	ldi	r31, 0x00	; 0
     702:	80 81       	ld	r24, Z
     704:	88 23       	and	r24, r24
     706:	ec f7       	brge	.-6      	; 0x702 <USART_receive2+0x4>
     708:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7e00d6>
     70c:	08 95       	ret

0000070e <USART_receiveString2>:

void USART_receiveString2(void){
     70e:	ef 92       	push	r14
     710:	ff 92       	push	r15
     712:	0f 93       	push	r16
     714:	1f 93       	push	r17
     716:	cf 93       	push	r28
     718:	df 93       	push	r29
     71a:	cd b7       	in	r28, 0x3d	; 61
     71c:	de b7       	in	r29, 0x3e	; 62
     71e:	ca 5f       	subi	r28, 0xFA	; 250
     720:	d1 09       	sbc	r29, r1
     722:	0f b6       	in	r0, 0x3f	; 63
     724:	f8 94       	cli
     726:	de bf       	out	0x3e, r29	; 62
     728:	0f be       	out	0x3f, r0	; 63
     72a:	cd bf       	out	0x3d, r28	; 61
     72c:	ce 01       	movw	r24, r28
     72e:	01 96       	adiw	r24, 0x01	; 1
     730:	7c 01       	movw	r14, r24
	char rx_buf[250];
	unsigned char rec = 0;
	int i = 0;
     732:	00 e0       	ldi	r16, 0x00	; 0
     734:	10 e0       	ldi	r17, 0x00	; 0
	while (1){
		rec = USART_receive2();
     736:	0e 94 7f 03 	call	0x6fe	; 0x6fe <USART_receive2>
		if (rec == 0x0A){
     73a:	8a 30       	cpi	r24, 0x0A	; 10
     73c:	79 f4       	brne	.+30     	; 0x75c <USART_receiveString2+0x4e>
			rx_buf[i] = '\0';
     73e:	e1 e0       	ldi	r30, 0x01	; 1
     740:	f0 e0       	ldi	r31, 0x00	; 0
     742:	ec 0f       	add	r30, r28
     744:	fd 1f       	adc	r31, r29
     746:	e0 0f       	add	r30, r16
     748:	f1 1f       	adc	r31, r17
     74a:	10 82       	st	Z, r1
		i++;
	}
	#ifdef DEBUG_M
	printf("rx int: %s\n", rx_buf);
	#endif
	strcpy(downlink, rx_buf);
     74c:	be 01       	movw	r22, r28
     74e:	6f 5f       	subi	r22, 0xFF	; 255
     750:	7f 4f       	sbci	r23, 0xFF	; 255
     752:	80 e3       	ldi	r24, 0x30	; 48
     754:	91 e0       	ldi	r25, 0x01	; 1
     756:	0e 94 71 09 	call	0x12e2	; 0x12e2 <strcpy>
}
     75a:	06 c0       	rjmp	.+12     	; 0x768 <USART_receiveString2+0x5a>
		rec = USART_receive2();
		if (rec == 0x0A){
			rx_buf[i] = '\0';
			break;
		}
		rx_buf[i] = rec;
     75c:	f7 01       	movw	r30, r14
     75e:	81 93       	st	Z+, r24
     760:	7f 01       	movw	r14, r30
		i++;
     762:	0f 5f       	subi	r16, 0xFF	; 255
     764:	1f 4f       	sbci	r17, 0xFF	; 255
	}
     766:	e7 cf       	rjmp	.-50     	; 0x736 <USART_receiveString2+0x28>
	#ifdef DEBUG_M
	printf("rx int: %s\n", rx_buf);
	#endif
	strcpy(downlink, rx_buf);
}
     768:	c6 50       	subi	r28, 0x06	; 6
     76a:	df 4f       	sbci	r29, 0xFF	; 255
     76c:	0f b6       	in	r0, 0x3f	; 63
     76e:	f8 94       	cli
     770:	de bf       	out	0x3e, r29	; 62
     772:	0f be       	out	0x3f, r0	; 63
     774:	cd bf       	out	0x3d, r28	; 61
     776:	df 91       	pop	r29
     778:	cf 91       	pop	r28
     77a:	1f 91       	pop	r17
     77c:	0f 91       	pop	r16
     77e:	ff 90       	pop	r15
     780:	ef 90       	pop	r14
     782:	08 95       	ret

00000784 <timers_init>:
		OCR1A = 31250;
		TIMSK1 |= (1 << OCIE1A);
	#endif

	#ifdef TIMER2
		TIMSK2 = 0;
     784:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
		ASSR = 0b00100000;
     788:	80 e2       	ldi	r24, 0x20	; 32
     78a:	80 93 b6 00 	sts	0x00B6, r24	; 0x8000b6 <__TEXT_REGION_LENGTH__+0x7e00b6>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     78e:	2f ef       	ldi	r18, 0xFF	; 255
     790:	89 e6       	ldi	r24, 0x69	; 105
     792:	98 e1       	ldi	r25, 0x18	; 24
     794:	21 50       	subi	r18, 0x01	; 1
     796:	80 40       	sbci	r24, 0x00	; 0
     798:	90 40       	sbci	r25, 0x00	; 0
     79a:	e1 f7       	brne	.-8      	; 0x794 <timers_init+0x10>
     79c:	00 c0       	rjmp	.+0      	; 0x79e <timers_init+0x1a>
     79e:	00 00       	nop
		_delay_ms(1000);
		TCCR2A = 0b00000000;
     7a0:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
		TCCR2B = 0b00000101;
     7a4:	85 e0       	ldi	r24, 0x05	; 5
     7a6:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
		//Synchronize registers
		while (ASSR & ( (1 << TCN2UB) | (1 << TCR2AUB) | (1 << TCR2BUB) )) ;
     7aa:	e6 eb       	ldi	r30, 0xB6	; 182
     7ac:	f0 e0       	ldi	r31, 0x00	; 0
     7ae:	80 81       	ld	r24, Z
     7b0:	83 71       	andi	r24, 0x13	; 19
     7b2:	e9 f7       	brne	.-6      	; 0x7ae <timers_init+0x2a>
		TIFR2 = 0; //Clear interrupt flags
     7b4:	17 ba       	out	0x17, r1	; 23
		TIMSK2 = (1 << TOIE2); //Enable overflow interrupt
     7b6:	81 e0       	ldi	r24, 0x01	; 1
     7b8:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
     7bc:	08 95       	ret

000007be <vfprintf>:
     7be:	a0 e1       	ldi	r26, 0x10	; 16
     7c0:	b0 e0       	ldi	r27, 0x00	; 0
     7c2:	e5 ee       	ldi	r30, 0xE5	; 229
     7c4:	f3 e0       	ldi	r31, 0x03	; 3
     7c6:	0c 94 5c 07 	jmp	0xeb8	; 0xeb8 <__prologue_saves__>
     7ca:	7c 01       	movw	r14, r24
     7cc:	1b 01       	movw	r2, r22
     7ce:	6a 01       	movw	r12, r20
     7d0:	fc 01       	movw	r30, r24
     7d2:	17 82       	std	Z+7, r1	; 0x07
     7d4:	16 82       	std	Z+6, r1	; 0x06
     7d6:	83 81       	ldd	r24, Z+3	; 0x03
     7d8:	81 ff       	sbrs	r24, 1
     7da:	44 c3       	rjmp	.+1672   	; 0xe64 <__stack+0x565>
     7dc:	9e 01       	movw	r18, r28
     7de:	2f 5f       	subi	r18, 0xFF	; 255
     7e0:	3f 4f       	sbci	r19, 0xFF	; 255
     7e2:	39 01       	movw	r6, r18
     7e4:	f7 01       	movw	r30, r14
     7e6:	93 81       	ldd	r25, Z+3	; 0x03
     7e8:	f1 01       	movw	r30, r2
     7ea:	93 fd       	sbrc	r25, 3
     7ec:	85 91       	lpm	r24, Z+
     7ee:	93 ff       	sbrs	r25, 3
     7f0:	81 91       	ld	r24, Z+
     7f2:	1f 01       	movw	r2, r30
     7f4:	88 23       	and	r24, r24
     7f6:	09 f4       	brne	.+2      	; 0x7fa <vfprintf+0x3c>
     7f8:	31 c3       	rjmp	.+1634   	; 0xe5c <__stack+0x55d>
     7fa:	85 32       	cpi	r24, 0x25	; 37
     7fc:	39 f4       	brne	.+14     	; 0x80c <vfprintf+0x4e>
     7fe:	93 fd       	sbrc	r25, 3
     800:	85 91       	lpm	r24, Z+
     802:	93 ff       	sbrs	r25, 3
     804:	81 91       	ld	r24, Z+
     806:	1f 01       	movw	r2, r30
     808:	85 32       	cpi	r24, 0x25	; 37
     80a:	39 f4       	brne	.+14     	; 0x81a <vfprintf+0x5c>
     80c:	b7 01       	movw	r22, r14
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     814:	56 01       	movw	r10, r12
     816:	65 01       	movw	r12, r10
     818:	e5 cf       	rjmp	.-54     	; 0x7e4 <vfprintf+0x26>
     81a:	10 e0       	ldi	r17, 0x00	; 0
     81c:	51 2c       	mov	r5, r1
     81e:	91 2c       	mov	r9, r1
     820:	ff e1       	ldi	r31, 0x1F	; 31
     822:	f9 15       	cp	r31, r9
     824:	d8 f0       	brcs	.+54     	; 0x85c <vfprintf+0x9e>
     826:	8b 32       	cpi	r24, 0x2B	; 43
     828:	79 f0       	breq	.+30     	; 0x848 <vfprintf+0x8a>
     82a:	38 f4       	brcc	.+14     	; 0x83a <vfprintf+0x7c>
     82c:	80 32       	cpi	r24, 0x20	; 32
     82e:	79 f0       	breq	.+30     	; 0x84e <vfprintf+0x90>
     830:	83 32       	cpi	r24, 0x23	; 35
     832:	a1 f4       	brne	.+40     	; 0x85c <vfprintf+0x9e>
     834:	f9 2d       	mov	r31, r9
     836:	f0 61       	ori	r31, 0x10	; 16
     838:	2e c0       	rjmp	.+92     	; 0x896 <vfprintf+0xd8>
     83a:	8d 32       	cpi	r24, 0x2D	; 45
     83c:	61 f0       	breq	.+24     	; 0x856 <vfprintf+0x98>
     83e:	80 33       	cpi	r24, 0x30	; 48
     840:	69 f4       	brne	.+26     	; 0x85c <vfprintf+0x9e>
     842:	29 2d       	mov	r18, r9
     844:	21 60       	ori	r18, 0x01	; 1
     846:	2d c0       	rjmp	.+90     	; 0x8a2 <vfprintf+0xe4>
     848:	39 2d       	mov	r19, r9
     84a:	32 60       	ori	r19, 0x02	; 2
     84c:	93 2e       	mov	r9, r19
     84e:	89 2d       	mov	r24, r9
     850:	84 60       	ori	r24, 0x04	; 4
     852:	98 2e       	mov	r9, r24
     854:	2a c0       	rjmp	.+84     	; 0x8aa <vfprintf+0xec>
     856:	e9 2d       	mov	r30, r9
     858:	e8 60       	ori	r30, 0x08	; 8
     85a:	15 c0       	rjmp	.+42     	; 0x886 <vfprintf+0xc8>
     85c:	97 fc       	sbrc	r9, 7
     85e:	2d c0       	rjmp	.+90     	; 0x8ba <vfprintf+0xfc>
     860:	20 ed       	ldi	r18, 0xD0	; 208
     862:	28 0f       	add	r18, r24
     864:	2a 30       	cpi	r18, 0x0A	; 10
     866:	88 f4       	brcc	.+34     	; 0x88a <vfprintf+0xcc>
     868:	96 fe       	sbrs	r9, 6
     86a:	06 c0       	rjmp	.+12     	; 0x878 <vfprintf+0xba>
     86c:	3a e0       	ldi	r19, 0x0A	; 10
     86e:	13 9f       	mul	r17, r19
     870:	20 0d       	add	r18, r0
     872:	11 24       	eor	r1, r1
     874:	12 2f       	mov	r17, r18
     876:	19 c0       	rjmp	.+50     	; 0x8aa <vfprintf+0xec>
     878:	8a e0       	ldi	r24, 0x0A	; 10
     87a:	58 9e       	mul	r5, r24
     87c:	20 0d       	add	r18, r0
     87e:	11 24       	eor	r1, r1
     880:	52 2e       	mov	r5, r18
     882:	e9 2d       	mov	r30, r9
     884:	e0 62       	ori	r30, 0x20	; 32
     886:	9e 2e       	mov	r9, r30
     888:	10 c0       	rjmp	.+32     	; 0x8aa <vfprintf+0xec>
     88a:	8e 32       	cpi	r24, 0x2E	; 46
     88c:	31 f4       	brne	.+12     	; 0x89a <vfprintf+0xdc>
     88e:	96 fc       	sbrc	r9, 6
     890:	e5 c2       	rjmp	.+1482   	; 0xe5c <__stack+0x55d>
     892:	f9 2d       	mov	r31, r9
     894:	f0 64       	ori	r31, 0x40	; 64
     896:	9f 2e       	mov	r9, r31
     898:	08 c0       	rjmp	.+16     	; 0x8aa <vfprintf+0xec>
     89a:	8c 36       	cpi	r24, 0x6C	; 108
     89c:	21 f4       	brne	.+8      	; 0x8a6 <vfprintf+0xe8>
     89e:	29 2d       	mov	r18, r9
     8a0:	20 68       	ori	r18, 0x80	; 128
     8a2:	92 2e       	mov	r9, r18
     8a4:	02 c0       	rjmp	.+4      	; 0x8aa <vfprintf+0xec>
     8a6:	88 36       	cpi	r24, 0x68	; 104
     8a8:	41 f4       	brne	.+16     	; 0x8ba <vfprintf+0xfc>
     8aa:	f1 01       	movw	r30, r2
     8ac:	93 fd       	sbrc	r25, 3
     8ae:	85 91       	lpm	r24, Z+
     8b0:	93 ff       	sbrs	r25, 3
     8b2:	81 91       	ld	r24, Z+
     8b4:	1f 01       	movw	r2, r30
     8b6:	81 11       	cpse	r24, r1
     8b8:	b3 cf       	rjmp	.-154    	; 0x820 <vfprintf+0x62>
     8ba:	9b eb       	ldi	r25, 0xBB	; 187
     8bc:	98 0f       	add	r25, r24
     8be:	93 30       	cpi	r25, 0x03	; 3
     8c0:	20 f4       	brcc	.+8      	; 0x8ca <vfprintf+0x10c>
     8c2:	99 2d       	mov	r25, r9
     8c4:	90 61       	ori	r25, 0x10	; 16
     8c6:	80 5e       	subi	r24, 0xE0	; 224
     8c8:	07 c0       	rjmp	.+14     	; 0x8d8 <vfprintf+0x11a>
     8ca:	9b e9       	ldi	r25, 0x9B	; 155
     8cc:	98 0f       	add	r25, r24
     8ce:	93 30       	cpi	r25, 0x03	; 3
     8d0:	08 f0       	brcs	.+2      	; 0x8d4 <vfprintf+0x116>
     8d2:	66 c1       	rjmp	.+716    	; 0xba0 <__stack+0x2a1>
     8d4:	99 2d       	mov	r25, r9
     8d6:	9f 7e       	andi	r25, 0xEF	; 239
     8d8:	96 ff       	sbrs	r25, 6
     8da:	16 e0       	ldi	r17, 0x06	; 6
     8dc:	9f 73       	andi	r25, 0x3F	; 63
     8de:	99 2e       	mov	r9, r25
     8e0:	85 36       	cpi	r24, 0x65	; 101
     8e2:	19 f4       	brne	.+6      	; 0x8ea <vfprintf+0x12c>
     8e4:	90 64       	ori	r25, 0x40	; 64
     8e6:	99 2e       	mov	r9, r25
     8e8:	08 c0       	rjmp	.+16     	; 0x8fa <vfprintf+0x13c>
     8ea:	86 36       	cpi	r24, 0x66	; 102
     8ec:	21 f4       	brne	.+8      	; 0x8f6 <vfprintf+0x138>
     8ee:	39 2f       	mov	r19, r25
     8f0:	30 68       	ori	r19, 0x80	; 128
     8f2:	93 2e       	mov	r9, r19
     8f4:	02 c0       	rjmp	.+4      	; 0x8fa <vfprintf+0x13c>
     8f6:	11 11       	cpse	r17, r1
     8f8:	11 50       	subi	r17, 0x01	; 1
     8fa:	97 fe       	sbrs	r9, 7
     8fc:	07 c0       	rjmp	.+14     	; 0x90c <__stack+0xd>
     8fe:	1c 33       	cpi	r17, 0x3C	; 60
     900:	50 f4       	brcc	.+20     	; 0x916 <__stack+0x17>
     902:	44 24       	eor	r4, r4
     904:	43 94       	inc	r4
     906:	41 0e       	add	r4, r17
     908:	27 e0       	ldi	r18, 0x07	; 7
     90a:	0b c0       	rjmp	.+22     	; 0x922 <__stack+0x23>
     90c:	18 30       	cpi	r17, 0x08	; 8
     90e:	38 f0       	brcs	.+14     	; 0x91e <__stack+0x1f>
     910:	27 e0       	ldi	r18, 0x07	; 7
     912:	17 e0       	ldi	r17, 0x07	; 7
     914:	05 c0       	rjmp	.+10     	; 0x920 <__stack+0x21>
     916:	27 e0       	ldi	r18, 0x07	; 7
     918:	9c e3       	ldi	r25, 0x3C	; 60
     91a:	49 2e       	mov	r4, r25
     91c:	02 c0       	rjmp	.+4      	; 0x922 <__stack+0x23>
     91e:	21 2f       	mov	r18, r17
     920:	41 2c       	mov	r4, r1
     922:	56 01       	movw	r10, r12
     924:	84 e0       	ldi	r24, 0x04	; 4
     926:	a8 0e       	add	r10, r24
     928:	b1 1c       	adc	r11, r1
     92a:	f6 01       	movw	r30, r12
     92c:	60 81       	ld	r22, Z
     92e:	71 81       	ldd	r23, Z+1	; 0x01
     930:	82 81       	ldd	r24, Z+2	; 0x02
     932:	93 81       	ldd	r25, Z+3	; 0x03
     934:	04 2d       	mov	r16, r4
     936:	a3 01       	movw	r20, r6
     938:	0e 94 8e 08 	call	0x111c	; 0x111c <__ftoa_engine>
     93c:	6c 01       	movw	r12, r24
     93e:	f9 81       	ldd	r31, Y+1	; 0x01
     940:	fc 87       	std	Y+12, r31	; 0x0c
     942:	f0 ff       	sbrs	r31, 0
     944:	02 c0       	rjmp	.+4      	; 0x94a <__stack+0x4b>
     946:	f3 ff       	sbrs	r31, 3
     948:	06 c0       	rjmp	.+12     	; 0x956 <__stack+0x57>
     94a:	91 fc       	sbrc	r9, 1
     94c:	06 c0       	rjmp	.+12     	; 0x95a <__stack+0x5b>
     94e:	92 fe       	sbrs	r9, 2
     950:	06 c0       	rjmp	.+12     	; 0x95e <__stack+0x5f>
     952:	00 e2       	ldi	r16, 0x20	; 32
     954:	05 c0       	rjmp	.+10     	; 0x960 <__stack+0x61>
     956:	0d e2       	ldi	r16, 0x2D	; 45
     958:	03 c0       	rjmp	.+6      	; 0x960 <__stack+0x61>
     95a:	0b e2       	ldi	r16, 0x2B	; 43
     95c:	01 c0       	rjmp	.+2      	; 0x960 <__stack+0x61>
     95e:	00 e0       	ldi	r16, 0x00	; 0
     960:	8c 85       	ldd	r24, Y+12	; 0x0c
     962:	8c 70       	andi	r24, 0x0C	; 12
     964:	19 f0       	breq	.+6      	; 0x96c <__stack+0x6d>
     966:	01 11       	cpse	r16, r1
     968:	5a c2       	rjmp	.+1204   	; 0xe1e <__stack+0x51f>
     96a:	9b c2       	rjmp	.+1334   	; 0xea2 <__stack+0x5a3>
     96c:	97 fe       	sbrs	r9, 7
     96e:	10 c0       	rjmp	.+32     	; 0x990 <__stack+0x91>
     970:	4c 0c       	add	r4, r12
     972:	fc 85       	ldd	r31, Y+12	; 0x0c
     974:	f4 ff       	sbrs	r31, 4
     976:	04 c0       	rjmp	.+8      	; 0x980 <__stack+0x81>
     978:	8a 81       	ldd	r24, Y+2	; 0x02
     97a:	81 33       	cpi	r24, 0x31	; 49
     97c:	09 f4       	brne	.+2      	; 0x980 <__stack+0x81>
     97e:	4a 94       	dec	r4
     980:	14 14       	cp	r1, r4
     982:	74 f5       	brge	.+92     	; 0x9e0 <__stack+0xe1>
     984:	28 e0       	ldi	r18, 0x08	; 8
     986:	24 15       	cp	r18, r4
     988:	78 f5       	brcc	.+94     	; 0x9e8 <__stack+0xe9>
     98a:	88 e0       	ldi	r24, 0x08	; 8
     98c:	48 2e       	mov	r4, r24
     98e:	2c c0       	rjmp	.+88     	; 0x9e8 <__stack+0xe9>
     990:	96 fc       	sbrc	r9, 6
     992:	2a c0       	rjmp	.+84     	; 0x9e8 <__stack+0xe9>
     994:	81 2f       	mov	r24, r17
     996:	90 e0       	ldi	r25, 0x00	; 0
     998:	8c 15       	cp	r24, r12
     99a:	9d 05       	cpc	r25, r13
     99c:	9c f0       	brlt	.+38     	; 0x9c4 <__stack+0xc5>
     99e:	3c ef       	ldi	r19, 0xFC	; 252
     9a0:	c3 16       	cp	r12, r19
     9a2:	3f ef       	ldi	r19, 0xFF	; 255
     9a4:	d3 06       	cpc	r13, r19
     9a6:	74 f0       	brlt	.+28     	; 0x9c4 <__stack+0xc5>
     9a8:	89 2d       	mov	r24, r9
     9aa:	80 68       	ori	r24, 0x80	; 128
     9ac:	98 2e       	mov	r9, r24
     9ae:	0a c0       	rjmp	.+20     	; 0x9c4 <__stack+0xc5>
     9b0:	e2 e0       	ldi	r30, 0x02	; 2
     9b2:	f0 e0       	ldi	r31, 0x00	; 0
     9b4:	ec 0f       	add	r30, r28
     9b6:	fd 1f       	adc	r31, r29
     9b8:	e1 0f       	add	r30, r17
     9ba:	f1 1d       	adc	r31, r1
     9bc:	80 81       	ld	r24, Z
     9be:	80 33       	cpi	r24, 0x30	; 48
     9c0:	19 f4       	brne	.+6      	; 0x9c8 <__stack+0xc9>
     9c2:	11 50       	subi	r17, 0x01	; 1
     9c4:	11 11       	cpse	r17, r1
     9c6:	f4 cf       	rjmp	.-24     	; 0x9b0 <__stack+0xb1>
     9c8:	97 fe       	sbrs	r9, 7
     9ca:	0e c0       	rjmp	.+28     	; 0x9e8 <__stack+0xe9>
     9cc:	44 24       	eor	r4, r4
     9ce:	43 94       	inc	r4
     9d0:	41 0e       	add	r4, r17
     9d2:	81 2f       	mov	r24, r17
     9d4:	90 e0       	ldi	r25, 0x00	; 0
     9d6:	c8 16       	cp	r12, r24
     9d8:	d9 06       	cpc	r13, r25
     9da:	2c f4       	brge	.+10     	; 0x9e6 <__stack+0xe7>
     9dc:	1c 19       	sub	r17, r12
     9de:	04 c0       	rjmp	.+8      	; 0x9e8 <__stack+0xe9>
     9e0:	44 24       	eor	r4, r4
     9e2:	43 94       	inc	r4
     9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <__stack+0xe9>
     9e6:	10 e0       	ldi	r17, 0x00	; 0
     9e8:	97 fe       	sbrs	r9, 7
     9ea:	06 c0       	rjmp	.+12     	; 0x9f8 <__stack+0xf9>
     9ec:	1c 14       	cp	r1, r12
     9ee:	1d 04       	cpc	r1, r13
     9f0:	34 f4       	brge	.+12     	; 0x9fe <__stack+0xff>
     9f2:	c6 01       	movw	r24, r12
     9f4:	01 96       	adiw	r24, 0x01	; 1
     9f6:	05 c0       	rjmp	.+10     	; 0xa02 <__stack+0x103>
     9f8:	85 e0       	ldi	r24, 0x05	; 5
     9fa:	90 e0       	ldi	r25, 0x00	; 0
     9fc:	02 c0       	rjmp	.+4      	; 0xa02 <__stack+0x103>
     9fe:	81 e0       	ldi	r24, 0x01	; 1
     a00:	90 e0       	ldi	r25, 0x00	; 0
     a02:	01 11       	cpse	r16, r1
     a04:	01 96       	adiw	r24, 0x01	; 1
     a06:	11 23       	and	r17, r17
     a08:	31 f0       	breq	.+12     	; 0xa16 <__stack+0x117>
     a0a:	21 2f       	mov	r18, r17
     a0c:	30 e0       	ldi	r19, 0x00	; 0
     a0e:	2f 5f       	subi	r18, 0xFF	; 255
     a10:	3f 4f       	sbci	r19, 0xFF	; 255
     a12:	82 0f       	add	r24, r18
     a14:	93 1f       	adc	r25, r19
     a16:	25 2d       	mov	r18, r5
     a18:	30 e0       	ldi	r19, 0x00	; 0
     a1a:	82 17       	cp	r24, r18
     a1c:	93 07       	cpc	r25, r19
     a1e:	14 f4       	brge	.+4      	; 0xa24 <__stack+0x125>
     a20:	58 1a       	sub	r5, r24
     a22:	01 c0       	rjmp	.+2      	; 0xa26 <__stack+0x127>
     a24:	51 2c       	mov	r5, r1
     a26:	89 2d       	mov	r24, r9
     a28:	89 70       	andi	r24, 0x09	; 9
     a2a:	49 f4       	brne	.+18     	; 0xa3e <__stack+0x13f>
     a2c:	55 20       	and	r5, r5
     a2e:	39 f0       	breq	.+14     	; 0xa3e <__stack+0x13f>
     a30:	b7 01       	movw	r22, r14
     a32:	80 e2       	ldi	r24, 0x20	; 32
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     a3a:	5a 94       	dec	r5
     a3c:	f7 cf       	rjmp	.-18     	; 0xa2c <__stack+0x12d>
     a3e:	00 23       	and	r16, r16
     a40:	29 f0       	breq	.+10     	; 0xa4c <__stack+0x14d>
     a42:	b7 01       	movw	r22, r14
     a44:	80 2f       	mov	r24, r16
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     a4c:	93 fc       	sbrc	r9, 3
     a4e:	09 c0       	rjmp	.+18     	; 0xa62 <__stack+0x163>
     a50:	55 20       	and	r5, r5
     a52:	39 f0       	breq	.+14     	; 0xa62 <__stack+0x163>
     a54:	b7 01       	movw	r22, r14
     a56:	80 e3       	ldi	r24, 0x30	; 48
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     a5e:	5a 94       	dec	r5
     a60:	f7 cf       	rjmp	.-18     	; 0xa50 <__stack+0x151>
     a62:	97 fe       	sbrs	r9, 7
     a64:	4c c0       	rjmp	.+152    	; 0xafe <__stack+0x1ff>
     a66:	46 01       	movw	r8, r12
     a68:	d7 fe       	sbrs	r13, 7
     a6a:	02 c0       	rjmp	.+4      	; 0xa70 <__stack+0x171>
     a6c:	81 2c       	mov	r8, r1
     a6e:	91 2c       	mov	r9, r1
     a70:	c6 01       	movw	r24, r12
     a72:	88 19       	sub	r24, r8
     a74:	99 09       	sbc	r25, r9
     a76:	f3 01       	movw	r30, r6
     a78:	e8 0f       	add	r30, r24
     a7a:	f9 1f       	adc	r31, r25
     a7c:	fe 87       	std	Y+14, r31	; 0x0e
     a7e:	ed 87       	std	Y+13, r30	; 0x0d
     a80:	96 01       	movw	r18, r12
     a82:	24 19       	sub	r18, r4
     a84:	31 09       	sbc	r19, r1
     a86:	38 8b       	std	Y+16, r19	; 0x10
     a88:	2f 87       	std	Y+15, r18	; 0x0f
     a8a:	01 2f       	mov	r16, r17
     a8c:	10 e0       	ldi	r17, 0x00	; 0
     a8e:	11 95       	neg	r17
     a90:	01 95       	neg	r16
     a92:	11 09       	sbc	r17, r1
     a94:	3f ef       	ldi	r19, 0xFF	; 255
     a96:	83 16       	cp	r8, r19
     a98:	93 06       	cpc	r9, r19
     a9a:	29 f4       	brne	.+10     	; 0xaa6 <__stack+0x1a7>
     a9c:	b7 01       	movw	r22, r14
     a9e:	8e e2       	ldi	r24, 0x2E	; 46
     aa0:	90 e0       	ldi	r25, 0x00	; 0
     aa2:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     aa6:	c8 14       	cp	r12, r8
     aa8:	d9 04       	cpc	r13, r9
     aaa:	4c f0       	brlt	.+18     	; 0xabe <__stack+0x1bf>
     aac:	8f 85       	ldd	r24, Y+15	; 0x0f
     aae:	98 89       	ldd	r25, Y+16	; 0x10
     ab0:	88 15       	cp	r24, r8
     ab2:	99 05       	cpc	r25, r9
     ab4:	24 f4       	brge	.+8      	; 0xabe <__stack+0x1bf>
     ab6:	ed 85       	ldd	r30, Y+13	; 0x0d
     ab8:	fe 85       	ldd	r31, Y+14	; 0x0e
     aba:	81 81       	ldd	r24, Z+1	; 0x01
     abc:	01 c0       	rjmp	.+2      	; 0xac0 <__stack+0x1c1>
     abe:	80 e3       	ldi	r24, 0x30	; 48
     ac0:	f1 e0       	ldi	r31, 0x01	; 1
     ac2:	8f 1a       	sub	r8, r31
     ac4:	91 08       	sbc	r9, r1
     ac6:	2d 85       	ldd	r18, Y+13	; 0x0d
     ac8:	3e 85       	ldd	r19, Y+14	; 0x0e
     aca:	2f 5f       	subi	r18, 0xFF	; 255
     acc:	3f 4f       	sbci	r19, 0xFF	; 255
     ace:	3e 87       	std	Y+14, r19	; 0x0e
     ad0:	2d 87       	std	Y+13, r18	; 0x0d
     ad2:	80 16       	cp	r8, r16
     ad4:	91 06       	cpc	r9, r17
     ad6:	2c f0       	brlt	.+10     	; 0xae2 <__stack+0x1e3>
     ad8:	b7 01       	movw	r22, r14
     ada:	90 e0       	ldi	r25, 0x00	; 0
     adc:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     ae0:	d9 cf       	rjmp	.-78     	; 0xa94 <__stack+0x195>
     ae2:	c8 14       	cp	r12, r8
     ae4:	d9 04       	cpc	r13, r9
     ae6:	41 f4       	brne	.+16     	; 0xaf8 <__stack+0x1f9>
     ae8:	9a 81       	ldd	r25, Y+2	; 0x02
     aea:	96 33       	cpi	r25, 0x36	; 54
     aec:	20 f4       	brcc	.+8      	; 0xaf6 <__stack+0x1f7>
     aee:	95 33       	cpi	r25, 0x35	; 53
     af0:	19 f4       	brne	.+6      	; 0xaf8 <__stack+0x1f9>
     af2:	3c 85       	ldd	r19, Y+12	; 0x0c
     af4:	34 ff       	sbrs	r19, 4
     af6:	81 e3       	ldi	r24, 0x31	; 49
     af8:	b7 01       	movw	r22, r14
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	4e c0       	rjmp	.+156    	; 0xb9a <__stack+0x29b>
     afe:	8a 81       	ldd	r24, Y+2	; 0x02
     b00:	81 33       	cpi	r24, 0x31	; 49
     b02:	19 f0       	breq	.+6      	; 0xb0a <__stack+0x20b>
     b04:	9c 85       	ldd	r25, Y+12	; 0x0c
     b06:	9f 7e       	andi	r25, 0xEF	; 239
     b08:	9c 87       	std	Y+12, r25	; 0x0c
     b0a:	b7 01       	movw	r22, r14
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b12:	11 11       	cpse	r17, r1
     b14:	05 c0       	rjmp	.+10     	; 0xb20 <__stack+0x221>
     b16:	94 fc       	sbrc	r9, 4
     b18:	18 c0       	rjmp	.+48     	; 0xb4a <__stack+0x24b>
     b1a:	85 e6       	ldi	r24, 0x65	; 101
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	17 c0       	rjmp	.+46     	; 0xb4e <__stack+0x24f>
     b20:	b7 01       	movw	r22, r14
     b22:	8e e2       	ldi	r24, 0x2E	; 46
     b24:	90 e0       	ldi	r25, 0x00	; 0
     b26:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b2a:	1e 5f       	subi	r17, 0xFE	; 254
     b2c:	82 e0       	ldi	r24, 0x02	; 2
     b2e:	01 e0       	ldi	r16, 0x01	; 1
     b30:	08 0f       	add	r16, r24
     b32:	f3 01       	movw	r30, r6
     b34:	e8 0f       	add	r30, r24
     b36:	f1 1d       	adc	r31, r1
     b38:	80 81       	ld	r24, Z
     b3a:	b7 01       	movw	r22, r14
     b3c:	90 e0       	ldi	r25, 0x00	; 0
     b3e:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b42:	80 2f       	mov	r24, r16
     b44:	01 13       	cpse	r16, r17
     b46:	f3 cf       	rjmp	.-26     	; 0xb2e <__stack+0x22f>
     b48:	e6 cf       	rjmp	.-52     	; 0xb16 <__stack+0x217>
     b4a:	85 e4       	ldi	r24, 0x45	; 69
     b4c:	90 e0       	ldi	r25, 0x00	; 0
     b4e:	b7 01       	movw	r22, r14
     b50:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b54:	d7 fc       	sbrc	r13, 7
     b56:	06 c0       	rjmp	.+12     	; 0xb64 <__stack+0x265>
     b58:	c1 14       	cp	r12, r1
     b5a:	d1 04       	cpc	r13, r1
     b5c:	41 f4       	brne	.+16     	; 0xb6e <__stack+0x26f>
     b5e:	ec 85       	ldd	r30, Y+12	; 0x0c
     b60:	e4 ff       	sbrs	r30, 4
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <__stack+0x26f>
     b64:	d1 94       	neg	r13
     b66:	c1 94       	neg	r12
     b68:	d1 08       	sbc	r13, r1
     b6a:	8d e2       	ldi	r24, 0x2D	; 45
     b6c:	01 c0       	rjmp	.+2      	; 0xb70 <__stack+0x271>
     b6e:	8b e2       	ldi	r24, 0x2B	; 43
     b70:	b7 01       	movw	r22, r14
     b72:	90 e0       	ldi	r25, 0x00	; 0
     b74:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b78:	80 e3       	ldi	r24, 0x30	; 48
     b7a:	2a e0       	ldi	r18, 0x0A	; 10
     b7c:	c2 16       	cp	r12, r18
     b7e:	d1 04       	cpc	r13, r1
     b80:	2c f0       	brlt	.+10     	; 0xb8c <__stack+0x28d>
     b82:	8f 5f       	subi	r24, 0xFF	; 255
     b84:	fa e0       	ldi	r31, 0x0A	; 10
     b86:	cf 1a       	sub	r12, r31
     b88:	d1 08       	sbc	r13, r1
     b8a:	f7 cf       	rjmp	.-18     	; 0xb7a <__stack+0x27b>
     b8c:	b7 01       	movw	r22, r14
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b94:	b7 01       	movw	r22, r14
     b96:	c6 01       	movw	r24, r12
     b98:	c0 96       	adiw	r24, 0x30	; 48
     b9a:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     b9e:	54 c1       	rjmp	.+680    	; 0xe48 <__stack+0x549>
     ba0:	83 36       	cpi	r24, 0x63	; 99
     ba2:	31 f0       	breq	.+12     	; 0xbb0 <__stack+0x2b1>
     ba4:	83 37       	cpi	r24, 0x73	; 115
     ba6:	79 f0       	breq	.+30     	; 0xbc6 <__stack+0x2c7>
     ba8:	83 35       	cpi	r24, 0x53	; 83
     baa:	09 f0       	breq	.+2      	; 0xbae <__stack+0x2af>
     bac:	56 c0       	rjmp	.+172    	; 0xc5a <__stack+0x35b>
     bae:	20 c0       	rjmp	.+64     	; 0xbf0 <__stack+0x2f1>
     bb0:	56 01       	movw	r10, r12
     bb2:	32 e0       	ldi	r19, 0x02	; 2
     bb4:	a3 0e       	add	r10, r19
     bb6:	b1 1c       	adc	r11, r1
     bb8:	f6 01       	movw	r30, r12
     bba:	80 81       	ld	r24, Z
     bbc:	89 83       	std	Y+1, r24	; 0x01
     bbe:	01 e0       	ldi	r16, 0x01	; 1
     bc0:	10 e0       	ldi	r17, 0x00	; 0
     bc2:	63 01       	movw	r12, r6
     bc4:	12 c0       	rjmp	.+36     	; 0xbea <__stack+0x2eb>
     bc6:	56 01       	movw	r10, r12
     bc8:	f2 e0       	ldi	r31, 0x02	; 2
     bca:	af 0e       	add	r10, r31
     bcc:	b1 1c       	adc	r11, r1
     bce:	f6 01       	movw	r30, r12
     bd0:	c0 80       	ld	r12, Z
     bd2:	d1 80       	ldd	r13, Z+1	; 0x01
     bd4:	96 fe       	sbrs	r9, 6
     bd6:	03 c0       	rjmp	.+6      	; 0xbde <__stack+0x2df>
     bd8:	61 2f       	mov	r22, r17
     bda:	70 e0       	ldi	r23, 0x00	; 0
     bdc:	02 c0       	rjmp	.+4      	; 0xbe2 <__stack+0x2e3>
     bde:	6f ef       	ldi	r22, 0xFF	; 255
     be0:	7f ef       	ldi	r23, 0xFF	; 255
     be2:	c6 01       	movw	r24, r12
     be4:	0e 94 78 09 	call	0x12f0	; 0x12f0 <strnlen>
     be8:	8c 01       	movw	r16, r24
     bea:	f9 2d       	mov	r31, r9
     bec:	ff 77       	andi	r31, 0x7F	; 127
     bee:	14 c0       	rjmp	.+40     	; 0xc18 <__stack+0x319>
     bf0:	56 01       	movw	r10, r12
     bf2:	22 e0       	ldi	r18, 0x02	; 2
     bf4:	a2 0e       	add	r10, r18
     bf6:	b1 1c       	adc	r11, r1
     bf8:	f6 01       	movw	r30, r12
     bfa:	c0 80       	ld	r12, Z
     bfc:	d1 80       	ldd	r13, Z+1	; 0x01
     bfe:	96 fe       	sbrs	r9, 6
     c00:	03 c0       	rjmp	.+6      	; 0xc08 <__stack+0x309>
     c02:	61 2f       	mov	r22, r17
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <__stack+0x30d>
     c08:	6f ef       	ldi	r22, 0xFF	; 255
     c0a:	7f ef       	ldi	r23, 0xFF	; 255
     c0c:	c6 01       	movw	r24, r12
     c0e:	0e 94 66 09 	call	0x12cc	; 0x12cc <strnlen_P>
     c12:	8c 01       	movw	r16, r24
     c14:	f9 2d       	mov	r31, r9
     c16:	f0 68       	ori	r31, 0x80	; 128
     c18:	9f 2e       	mov	r9, r31
     c1a:	f3 fd       	sbrc	r31, 3
     c1c:	1a c0       	rjmp	.+52     	; 0xc52 <__stack+0x353>
     c1e:	85 2d       	mov	r24, r5
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	08 17       	cp	r16, r24
     c24:	19 07       	cpc	r17, r25
     c26:	a8 f4       	brcc	.+42     	; 0xc52 <__stack+0x353>
     c28:	b7 01       	movw	r22, r14
     c2a:	80 e2       	ldi	r24, 0x20	; 32
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     c32:	5a 94       	dec	r5
     c34:	f4 cf       	rjmp	.-24     	; 0xc1e <__stack+0x31f>
     c36:	f6 01       	movw	r30, r12
     c38:	97 fc       	sbrc	r9, 7
     c3a:	85 91       	lpm	r24, Z+
     c3c:	97 fe       	sbrs	r9, 7
     c3e:	81 91       	ld	r24, Z+
     c40:	6f 01       	movw	r12, r30
     c42:	b7 01       	movw	r22, r14
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     c4a:	51 10       	cpse	r5, r1
     c4c:	5a 94       	dec	r5
     c4e:	01 50       	subi	r16, 0x01	; 1
     c50:	11 09       	sbc	r17, r1
     c52:	01 15       	cp	r16, r1
     c54:	11 05       	cpc	r17, r1
     c56:	79 f7       	brne	.-34     	; 0xc36 <__stack+0x337>
     c58:	f7 c0       	rjmp	.+494    	; 0xe48 <__stack+0x549>
     c5a:	84 36       	cpi	r24, 0x64	; 100
     c5c:	11 f0       	breq	.+4      	; 0xc62 <__stack+0x363>
     c5e:	89 36       	cpi	r24, 0x69	; 105
     c60:	61 f5       	brne	.+88     	; 0xcba <__stack+0x3bb>
     c62:	56 01       	movw	r10, r12
     c64:	97 fe       	sbrs	r9, 7
     c66:	09 c0       	rjmp	.+18     	; 0xc7a <__stack+0x37b>
     c68:	24 e0       	ldi	r18, 0x04	; 4
     c6a:	a2 0e       	add	r10, r18
     c6c:	b1 1c       	adc	r11, r1
     c6e:	f6 01       	movw	r30, r12
     c70:	60 81       	ld	r22, Z
     c72:	71 81       	ldd	r23, Z+1	; 0x01
     c74:	82 81       	ldd	r24, Z+2	; 0x02
     c76:	93 81       	ldd	r25, Z+3	; 0x03
     c78:	0a c0       	rjmp	.+20     	; 0xc8e <__stack+0x38f>
     c7a:	f2 e0       	ldi	r31, 0x02	; 2
     c7c:	af 0e       	add	r10, r31
     c7e:	b1 1c       	adc	r11, r1
     c80:	f6 01       	movw	r30, r12
     c82:	60 81       	ld	r22, Z
     c84:	71 81       	ldd	r23, Z+1	; 0x01
     c86:	07 2e       	mov	r0, r23
     c88:	00 0c       	add	r0, r0
     c8a:	88 0b       	sbc	r24, r24
     c8c:	99 0b       	sbc	r25, r25
     c8e:	f9 2d       	mov	r31, r9
     c90:	ff 76       	andi	r31, 0x6F	; 111
     c92:	9f 2e       	mov	r9, r31
     c94:	97 ff       	sbrs	r25, 7
     c96:	09 c0       	rjmp	.+18     	; 0xcaa <__stack+0x3ab>
     c98:	90 95       	com	r25
     c9a:	80 95       	com	r24
     c9c:	70 95       	com	r23
     c9e:	61 95       	neg	r22
     ca0:	7f 4f       	sbci	r23, 0xFF	; 255
     ca2:	8f 4f       	sbci	r24, 0xFF	; 255
     ca4:	9f 4f       	sbci	r25, 0xFF	; 255
     ca6:	f0 68       	ori	r31, 0x80	; 128
     ca8:	9f 2e       	mov	r9, r31
     caa:	2a e0       	ldi	r18, 0x0A	; 10
     cac:	30 e0       	ldi	r19, 0x00	; 0
     cae:	a3 01       	movw	r20, r6
     cb0:	0e 94 05 0a 	call	0x140a	; 0x140a <__ultoa_invert>
     cb4:	c8 2e       	mov	r12, r24
     cb6:	c6 18       	sub	r12, r6
     cb8:	3f c0       	rjmp	.+126    	; 0xd38 <__stack+0x439>
     cba:	09 2d       	mov	r16, r9
     cbc:	85 37       	cpi	r24, 0x75	; 117
     cbe:	21 f4       	brne	.+8      	; 0xcc8 <__stack+0x3c9>
     cc0:	0f 7e       	andi	r16, 0xEF	; 239
     cc2:	2a e0       	ldi	r18, 0x0A	; 10
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	1d c0       	rjmp	.+58     	; 0xd02 <__stack+0x403>
     cc8:	09 7f       	andi	r16, 0xF9	; 249
     cca:	8f 36       	cpi	r24, 0x6F	; 111
     ccc:	91 f0       	breq	.+36     	; 0xcf2 <__stack+0x3f3>
     cce:	18 f4       	brcc	.+6      	; 0xcd6 <__stack+0x3d7>
     cd0:	88 35       	cpi	r24, 0x58	; 88
     cd2:	59 f0       	breq	.+22     	; 0xcea <__stack+0x3eb>
     cd4:	c3 c0       	rjmp	.+390    	; 0xe5c <__stack+0x55d>
     cd6:	80 37       	cpi	r24, 0x70	; 112
     cd8:	19 f0       	breq	.+6      	; 0xce0 <__stack+0x3e1>
     cda:	88 37       	cpi	r24, 0x78	; 120
     cdc:	11 f0       	breq	.+4      	; 0xce2 <__stack+0x3e3>
     cde:	be c0       	rjmp	.+380    	; 0xe5c <__stack+0x55d>
     ce0:	00 61       	ori	r16, 0x10	; 16
     ce2:	04 ff       	sbrs	r16, 4
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <__stack+0x3f9>
     ce6:	04 60       	ori	r16, 0x04	; 4
     ce8:	07 c0       	rjmp	.+14     	; 0xcf8 <__stack+0x3f9>
     cea:	94 fe       	sbrs	r9, 4
     cec:	08 c0       	rjmp	.+16     	; 0xcfe <__stack+0x3ff>
     cee:	06 60       	ori	r16, 0x06	; 6
     cf0:	06 c0       	rjmp	.+12     	; 0xcfe <__stack+0x3ff>
     cf2:	28 e0       	ldi	r18, 0x08	; 8
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	05 c0       	rjmp	.+10     	; 0xd02 <__stack+0x403>
     cf8:	20 e1       	ldi	r18, 0x10	; 16
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <__stack+0x403>
     cfe:	20 e1       	ldi	r18, 0x10	; 16
     d00:	32 e0       	ldi	r19, 0x02	; 2
     d02:	56 01       	movw	r10, r12
     d04:	07 ff       	sbrs	r16, 7
     d06:	09 c0       	rjmp	.+18     	; 0xd1a <__stack+0x41b>
     d08:	84 e0       	ldi	r24, 0x04	; 4
     d0a:	a8 0e       	add	r10, r24
     d0c:	b1 1c       	adc	r11, r1
     d0e:	f6 01       	movw	r30, r12
     d10:	60 81       	ld	r22, Z
     d12:	71 81       	ldd	r23, Z+1	; 0x01
     d14:	82 81       	ldd	r24, Z+2	; 0x02
     d16:	93 81       	ldd	r25, Z+3	; 0x03
     d18:	08 c0       	rjmp	.+16     	; 0xd2a <__stack+0x42b>
     d1a:	f2 e0       	ldi	r31, 0x02	; 2
     d1c:	af 0e       	add	r10, r31
     d1e:	b1 1c       	adc	r11, r1
     d20:	f6 01       	movw	r30, r12
     d22:	60 81       	ld	r22, Z
     d24:	71 81       	ldd	r23, Z+1	; 0x01
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	a3 01       	movw	r20, r6
     d2c:	0e 94 05 0a 	call	0x140a	; 0x140a <__ultoa_invert>
     d30:	c8 2e       	mov	r12, r24
     d32:	c6 18       	sub	r12, r6
     d34:	0f 77       	andi	r16, 0x7F	; 127
     d36:	90 2e       	mov	r9, r16
     d38:	96 fe       	sbrs	r9, 6
     d3a:	0b c0       	rjmp	.+22     	; 0xd52 <__stack+0x453>
     d3c:	09 2d       	mov	r16, r9
     d3e:	0e 7f       	andi	r16, 0xFE	; 254
     d40:	c1 16       	cp	r12, r17
     d42:	50 f4       	brcc	.+20     	; 0xd58 <__stack+0x459>
     d44:	94 fe       	sbrs	r9, 4
     d46:	0a c0       	rjmp	.+20     	; 0xd5c <__stack+0x45d>
     d48:	92 fc       	sbrc	r9, 2
     d4a:	08 c0       	rjmp	.+16     	; 0xd5c <__stack+0x45d>
     d4c:	09 2d       	mov	r16, r9
     d4e:	0e 7e       	andi	r16, 0xEE	; 238
     d50:	05 c0       	rjmp	.+10     	; 0xd5c <__stack+0x45d>
     d52:	dc 2c       	mov	r13, r12
     d54:	09 2d       	mov	r16, r9
     d56:	03 c0       	rjmp	.+6      	; 0xd5e <__stack+0x45f>
     d58:	dc 2c       	mov	r13, r12
     d5a:	01 c0       	rjmp	.+2      	; 0xd5e <__stack+0x45f>
     d5c:	d1 2e       	mov	r13, r17
     d5e:	04 ff       	sbrs	r16, 4
     d60:	0d c0       	rjmp	.+26     	; 0xd7c <__stack+0x47d>
     d62:	fe 01       	movw	r30, r28
     d64:	ec 0d       	add	r30, r12
     d66:	f1 1d       	adc	r31, r1
     d68:	80 81       	ld	r24, Z
     d6a:	80 33       	cpi	r24, 0x30	; 48
     d6c:	11 f4       	brne	.+4      	; 0xd72 <__stack+0x473>
     d6e:	09 7e       	andi	r16, 0xE9	; 233
     d70:	09 c0       	rjmp	.+18     	; 0xd84 <__stack+0x485>
     d72:	02 ff       	sbrs	r16, 2
     d74:	06 c0       	rjmp	.+12     	; 0xd82 <__stack+0x483>
     d76:	d3 94       	inc	r13
     d78:	d3 94       	inc	r13
     d7a:	04 c0       	rjmp	.+8      	; 0xd84 <__stack+0x485>
     d7c:	80 2f       	mov	r24, r16
     d7e:	86 78       	andi	r24, 0x86	; 134
     d80:	09 f0       	breq	.+2      	; 0xd84 <__stack+0x485>
     d82:	d3 94       	inc	r13
     d84:	03 fd       	sbrc	r16, 3
     d86:	11 c0       	rjmp	.+34     	; 0xdaa <__stack+0x4ab>
     d88:	00 ff       	sbrs	r16, 0
     d8a:	06 c0       	rjmp	.+12     	; 0xd98 <__stack+0x499>
     d8c:	1c 2d       	mov	r17, r12
     d8e:	d5 14       	cp	r13, r5
     d90:	80 f4       	brcc	.+32     	; 0xdb2 <__stack+0x4b3>
     d92:	15 0d       	add	r17, r5
     d94:	1d 19       	sub	r17, r13
     d96:	0d c0       	rjmp	.+26     	; 0xdb2 <__stack+0x4b3>
     d98:	d5 14       	cp	r13, r5
     d9a:	58 f4       	brcc	.+22     	; 0xdb2 <__stack+0x4b3>
     d9c:	b7 01       	movw	r22, r14
     d9e:	80 e2       	ldi	r24, 0x20	; 32
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     da6:	d3 94       	inc	r13
     da8:	f7 cf       	rjmp	.-18     	; 0xd98 <__stack+0x499>
     daa:	d5 14       	cp	r13, r5
     dac:	10 f4       	brcc	.+4      	; 0xdb2 <__stack+0x4b3>
     dae:	5d 18       	sub	r5, r13
     db0:	01 c0       	rjmp	.+2      	; 0xdb4 <__stack+0x4b5>
     db2:	51 2c       	mov	r5, r1
     db4:	04 ff       	sbrs	r16, 4
     db6:	10 c0       	rjmp	.+32     	; 0xdd8 <__stack+0x4d9>
     db8:	b7 01       	movw	r22, r14
     dba:	80 e3       	ldi	r24, 0x30	; 48
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     dc2:	02 ff       	sbrs	r16, 2
     dc4:	17 c0       	rjmp	.+46     	; 0xdf4 <__stack+0x4f5>
     dc6:	01 fd       	sbrc	r16, 1
     dc8:	03 c0       	rjmp	.+6      	; 0xdd0 <__stack+0x4d1>
     dca:	88 e7       	ldi	r24, 0x78	; 120
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	02 c0       	rjmp	.+4      	; 0xdd4 <__stack+0x4d5>
     dd0:	88 e5       	ldi	r24, 0x58	; 88
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	b7 01       	movw	r22, r14
     dd6:	0c c0       	rjmp	.+24     	; 0xdf0 <__stack+0x4f1>
     dd8:	80 2f       	mov	r24, r16
     dda:	86 78       	andi	r24, 0x86	; 134
     ddc:	59 f0       	breq	.+22     	; 0xdf4 <__stack+0x4f5>
     dde:	01 ff       	sbrs	r16, 1
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <__stack+0x4e7>
     de2:	8b e2       	ldi	r24, 0x2B	; 43
     de4:	01 c0       	rjmp	.+2      	; 0xde8 <__stack+0x4e9>
     de6:	80 e2       	ldi	r24, 0x20	; 32
     de8:	07 fd       	sbrc	r16, 7
     dea:	8d e2       	ldi	r24, 0x2D	; 45
     dec:	b7 01       	movw	r22, r14
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     df4:	c1 16       	cp	r12, r17
     df6:	38 f4       	brcc	.+14     	; 0xe06 <__stack+0x507>
     df8:	b7 01       	movw	r22, r14
     dfa:	80 e3       	ldi	r24, 0x30	; 48
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     e02:	11 50       	subi	r17, 0x01	; 1
     e04:	f7 cf       	rjmp	.-18     	; 0xdf4 <__stack+0x4f5>
     e06:	ca 94       	dec	r12
     e08:	f3 01       	movw	r30, r6
     e0a:	ec 0d       	add	r30, r12
     e0c:	f1 1d       	adc	r31, r1
     e0e:	80 81       	ld	r24, Z
     e10:	b7 01       	movw	r22, r14
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     e18:	c1 10       	cpse	r12, r1
     e1a:	f5 cf       	rjmp	.-22     	; 0xe06 <__stack+0x507>
     e1c:	15 c0       	rjmp	.+42     	; 0xe48 <__stack+0x549>
     e1e:	f4 e0       	ldi	r31, 0x04	; 4
     e20:	f5 15       	cp	r31, r5
     e22:	60 f5       	brcc	.+88     	; 0xe7c <__stack+0x57d>
     e24:	84 e0       	ldi	r24, 0x04	; 4
     e26:	58 1a       	sub	r5, r24
     e28:	93 fe       	sbrs	r9, 3
     e2a:	1f c0       	rjmp	.+62     	; 0xe6a <__stack+0x56b>
     e2c:	01 11       	cpse	r16, r1
     e2e:	27 c0       	rjmp	.+78     	; 0xe7e <__stack+0x57f>
     e30:	2c 85       	ldd	r18, Y+12	; 0x0c
     e32:	23 ff       	sbrs	r18, 3
     e34:	2a c0       	rjmp	.+84     	; 0xe8a <__stack+0x58b>
     e36:	0c ec       	ldi	r16, 0xCC	; 204
     e38:	10 e0       	ldi	r17, 0x00	; 0
     e3a:	39 2d       	mov	r19, r9
     e3c:	30 71       	andi	r19, 0x10	; 16
     e3e:	93 2e       	mov	r9, r19
     e40:	f8 01       	movw	r30, r16
     e42:	84 91       	lpm	r24, Z
     e44:	81 11       	cpse	r24, r1
     e46:	24 c0       	rjmp	.+72     	; 0xe90 <__stack+0x591>
     e48:	55 20       	and	r5, r5
     e4a:	09 f4       	brne	.+2      	; 0xe4e <__stack+0x54f>
     e4c:	e4 cc       	rjmp	.-1592   	; 0x816 <vfprintf+0x58>
     e4e:	b7 01       	movw	r22, r14
     e50:	80 e2       	ldi	r24, 0x20	; 32
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     e58:	5a 94       	dec	r5
     e5a:	f6 cf       	rjmp	.-20     	; 0xe48 <__stack+0x549>
     e5c:	f7 01       	movw	r30, r14
     e5e:	86 81       	ldd	r24, Z+6	; 0x06
     e60:	97 81       	ldd	r25, Z+7	; 0x07
     e62:	26 c0       	rjmp	.+76     	; 0xeb0 <__stack+0x5b1>
     e64:	8f ef       	ldi	r24, 0xFF	; 255
     e66:	9f ef       	ldi	r25, 0xFF	; 255
     e68:	23 c0       	rjmp	.+70     	; 0xeb0 <__stack+0x5b1>
     e6a:	b7 01       	movw	r22, r14
     e6c:	80 e2       	ldi	r24, 0x20	; 32
     e6e:	90 e0       	ldi	r25, 0x00	; 0
     e70:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     e74:	5a 94       	dec	r5
     e76:	51 10       	cpse	r5, r1
     e78:	f8 cf       	rjmp	.-16     	; 0xe6a <__stack+0x56b>
     e7a:	d8 cf       	rjmp	.-80     	; 0xe2c <__stack+0x52d>
     e7c:	51 2c       	mov	r5, r1
     e7e:	b7 01       	movw	r22, r14
     e80:	80 2f       	mov	r24, r16
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     e88:	d3 cf       	rjmp	.-90     	; 0xe30 <__stack+0x531>
     e8a:	00 ed       	ldi	r16, 0xD0	; 208
     e8c:	10 e0       	ldi	r17, 0x00	; 0
     e8e:	d5 cf       	rjmp	.-86     	; 0xe3a <__stack+0x53b>
     e90:	91 10       	cpse	r9, r1
     e92:	80 52       	subi	r24, 0x20	; 32
     e94:	b7 01       	movw	r22, r14
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 83 09 	call	0x1306	; 0x1306 <fputc>
     e9c:	0f 5f       	subi	r16, 0xFF	; 255
     e9e:	1f 4f       	sbci	r17, 0xFF	; 255
     ea0:	cf cf       	rjmp	.-98     	; 0xe40 <__stack+0x541>
     ea2:	23 e0       	ldi	r18, 0x03	; 3
     ea4:	25 15       	cp	r18, r5
     ea6:	10 f4       	brcc	.+4      	; 0xeac <__stack+0x5ad>
     ea8:	83 e0       	ldi	r24, 0x03	; 3
     eaa:	bd cf       	rjmp	.-134    	; 0xe26 <__stack+0x527>
     eac:	51 2c       	mov	r5, r1
     eae:	c0 cf       	rjmp	.-128    	; 0xe30 <__stack+0x531>
     eb0:	60 96       	adiw	r28, 0x10	; 16
     eb2:	e2 e1       	ldi	r30, 0x12	; 18
     eb4:	0c 94 78 07 	jmp	0xef0	; 0xef0 <__epilogue_restores__>

00000eb8 <__prologue_saves__>:
     eb8:	2f 92       	push	r2
     eba:	3f 92       	push	r3
     ebc:	4f 92       	push	r4
     ebe:	5f 92       	push	r5
     ec0:	6f 92       	push	r6
     ec2:	7f 92       	push	r7
     ec4:	8f 92       	push	r8
     ec6:	9f 92       	push	r9
     ec8:	af 92       	push	r10
     eca:	bf 92       	push	r11
     ecc:	cf 92       	push	r12
     ece:	df 92       	push	r13
     ed0:	ef 92       	push	r14
     ed2:	ff 92       	push	r15
     ed4:	0f 93       	push	r16
     ed6:	1f 93       	push	r17
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	cd b7       	in	r28, 0x3d	; 61
     ede:	de b7       	in	r29, 0x3e	; 62
     ee0:	ca 1b       	sub	r28, r26
     ee2:	db 0b       	sbc	r29, r27
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	f8 94       	cli
     ee8:	de bf       	out	0x3e, r29	; 62
     eea:	0f be       	out	0x3f, r0	; 63
     eec:	cd bf       	out	0x3d, r28	; 61
     eee:	09 94       	ijmp

00000ef0 <__epilogue_restores__>:
     ef0:	2a 88       	ldd	r2, Y+18	; 0x12
     ef2:	39 88       	ldd	r3, Y+17	; 0x11
     ef4:	48 88       	ldd	r4, Y+16	; 0x10
     ef6:	5f 84       	ldd	r5, Y+15	; 0x0f
     ef8:	6e 84       	ldd	r6, Y+14	; 0x0e
     efa:	7d 84       	ldd	r7, Y+13	; 0x0d
     efc:	8c 84       	ldd	r8, Y+12	; 0x0c
     efe:	9b 84       	ldd	r9, Y+11	; 0x0b
     f00:	aa 84       	ldd	r10, Y+10	; 0x0a
     f02:	b9 84       	ldd	r11, Y+9	; 0x09
     f04:	c8 84       	ldd	r12, Y+8	; 0x08
     f06:	df 80       	ldd	r13, Y+7	; 0x07
     f08:	ee 80       	ldd	r14, Y+6	; 0x06
     f0a:	fd 80       	ldd	r15, Y+5	; 0x05
     f0c:	0c 81       	ldd	r16, Y+4	; 0x04
     f0e:	1b 81       	ldd	r17, Y+3	; 0x03
     f10:	aa 81       	ldd	r26, Y+2	; 0x02
     f12:	b9 81       	ldd	r27, Y+1	; 0x01
     f14:	ce 0f       	add	r28, r30
     f16:	d1 1d       	adc	r29, r1
     f18:	0f b6       	in	r0, 0x3f	; 63
     f1a:	f8 94       	cli
     f1c:	de bf       	out	0x3e, r29	; 62
     f1e:	0f be       	out	0x3f, r0	; 63
     f20:	cd bf       	out	0x3d, r28	; 61
     f22:	ed 01       	movw	r28, r26
     f24:	08 95       	ret

00000f26 <__floatunsisf>:
     f26:	e8 94       	clt
     f28:	09 c0       	rjmp	.+18     	; 0xf3c <__floatsisf+0x12>

00000f2a <__floatsisf>:
     f2a:	97 fb       	bst	r25, 7
     f2c:	3e f4       	brtc	.+14     	; 0xf3c <__floatsisf+0x12>
     f2e:	90 95       	com	r25
     f30:	80 95       	com	r24
     f32:	70 95       	com	r23
     f34:	61 95       	neg	r22
     f36:	7f 4f       	sbci	r23, 0xFF	; 255
     f38:	8f 4f       	sbci	r24, 0xFF	; 255
     f3a:	9f 4f       	sbci	r25, 0xFF	; 255
     f3c:	99 23       	and	r25, r25
     f3e:	a9 f0       	breq	.+42     	; 0xf6a <__floatsisf+0x40>
     f40:	f9 2f       	mov	r31, r25
     f42:	96 e9       	ldi	r25, 0x96	; 150
     f44:	bb 27       	eor	r27, r27
     f46:	93 95       	inc	r25
     f48:	f6 95       	lsr	r31
     f4a:	87 95       	ror	r24
     f4c:	77 95       	ror	r23
     f4e:	67 95       	ror	r22
     f50:	b7 95       	ror	r27
     f52:	f1 11       	cpse	r31, r1
     f54:	f8 cf       	rjmp	.-16     	; 0xf46 <__floatsisf+0x1c>
     f56:	fa f4       	brpl	.+62     	; 0xf96 <__floatsisf+0x6c>
     f58:	bb 0f       	add	r27, r27
     f5a:	11 f4       	brne	.+4      	; 0xf60 <__floatsisf+0x36>
     f5c:	60 ff       	sbrs	r22, 0
     f5e:	1b c0       	rjmp	.+54     	; 0xf96 <__floatsisf+0x6c>
     f60:	6f 5f       	subi	r22, 0xFF	; 255
     f62:	7f 4f       	sbci	r23, 0xFF	; 255
     f64:	8f 4f       	sbci	r24, 0xFF	; 255
     f66:	9f 4f       	sbci	r25, 0xFF	; 255
     f68:	16 c0       	rjmp	.+44     	; 0xf96 <__floatsisf+0x6c>
     f6a:	88 23       	and	r24, r24
     f6c:	11 f0       	breq	.+4      	; 0xf72 <__floatsisf+0x48>
     f6e:	96 e9       	ldi	r25, 0x96	; 150
     f70:	11 c0       	rjmp	.+34     	; 0xf94 <__floatsisf+0x6a>
     f72:	77 23       	and	r23, r23
     f74:	21 f0       	breq	.+8      	; 0xf7e <__floatsisf+0x54>
     f76:	9e e8       	ldi	r25, 0x8E	; 142
     f78:	87 2f       	mov	r24, r23
     f7a:	76 2f       	mov	r23, r22
     f7c:	05 c0       	rjmp	.+10     	; 0xf88 <__floatsisf+0x5e>
     f7e:	66 23       	and	r22, r22
     f80:	71 f0       	breq	.+28     	; 0xf9e <__floatsisf+0x74>
     f82:	96 e8       	ldi	r25, 0x86	; 134
     f84:	86 2f       	mov	r24, r22
     f86:	70 e0       	ldi	r23, 0x00	; 0
     f88:	60 e0       	ldi	r22, 0x00	; 0
     f8a:	2a f0       	brmi	.+10     	; 0xf96 <__floatsisf+0x6c>
     f8c:	9a 95       	dec	r25
     f8e:	66 0f       	add	r22, r22
     f90:	77 1f       	adc	r23, r23
     f92:	88 1f       	adc	r24, r24
     f94:	da f7       	brpl	.-10     	; 0xf8c <__floatsisf+0x62>
     f96:	88 0f       	add	r24, r24
     f98:	96 95       	lsr	r25
     f9a:	87 95       	ror	r24
     f9c:	97 f9       	bld	r25, 7
     f9e:	08 95       	ret

00000fa0 <__fp_inf>:
     fa0:	97 f9       	bld	r25, 7
     fa2:	9f 67       	ori	r25, 0x7F	; 127
     fa4:	80 e8       	ldi	r24, 0x80	; 128
     fa6:	70 e0       	ldi	r23, 0x00	; 0
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	08 95       	ret

00000fac <__fp_nan>:
     fac:	9f ef       	ldi	r25, 0xFF	; 255
     fae:	80 ec       	ldi	r24, 0xC0	; 192
     fb0:	08 95       	ret

00000fb2 <__fp_pscA>:
     fb2:	00 24       	eor	r0, r0
     fb4:	0a 94       	dec	r0
     fb6:	16 16       	cp	r1, r22
     fb8:	17 06       	cpc	r1, r23
     fba:	18 06       	cpc	r1, r24
     fbc:	09 06       	cpc	r0, r25
     fbe:	08 95       	ret

00000fc0 <__fp_pscB>:
     fc0:	00 24       	eor	r0, r0
     fc2:	0a 94       	dec	r0
     fc4:	12 16       	cp	r1, r18
     fc6:	13 06       	cpc	r1, r19
     fc8:	14 06       	cpc	r1, r20
     fca:	05 06       	cpc	r0, r21
     fcc:	08 95       	ret

00000fce <__fp_round>:
     fce:	09 2e       	mov	r0, r25
     fd0:	03 94       	inc	r0
     fd2:	00 0c       	add	r0, r0
     fd4:	11 f4       	brne	.+4      	; 0xfda <__fp_round+0xc>
     fd6:	88 23       	and	r24, r24
     fd8:	52 f0       	brmi	.+20     	; 0xfee <__fp_round+0x20>
     fda:	bb 0f       	add	r27, r27
     fdc:	40 f4       	brcc	.+16     	; 0xfee <__fp_round+0x20>
     fde:	bf 2b       	or	r27, r31
     fe0:	11 f4       	brne	.+4      	; 0xfe6 <__fp_round+0x18>
     fe2:	60 ff       	sbrs	r22, 0
     fe4:	04 c0       	rjmp	.+8      	; 0xfee <__fp_round+0x20>
     fe6:	6f 5f       	subi	r22, 0xFF	; 255
     fe8:	7f 4f       	sbci	r23, 0xFF	; 255
     fea:	8f 4f       	sbci	r24, 0xFF	; 255
     fec:	9f 4f       	sbci	r25, 0xFF	; 255
     fee:	08 95       	ret

00000ff0 <__fp_split3>:
     ff0:	57 fd       	sbrc	r21, 7
     ff2:	90 58       	subi	r25, 0x80	; 128
     ff4:	44 0f       	add	r20, r20
     ff6:	55 1f       	adc	r21, r21
     ff8:	59 f0       	breq	.+22     	; 0x1010 <__fp_splitA+0x10>
     ffa:	5f 3f       	cpi	r21, 0xFF	; 255
     ffc:	71 f0       	breq	.+28     	; 0x101a <__fp_splitA+0x1a>
     ffe:	47 95       	ror	r20

00001000 <__fp_splitA>:
    1000:	88 0f       	add	r24, r24
    1002:	97 fb       	bst	r25, 7
    1004:	99 1f       	adc	r25, r25
    1006:	61 f0       	breq	.+24     	; 0x1020 <__fp_splitA+0x20>
    1008:	9f 3f       	cpi	r25, 0xFF	; 255
    100a:	79 f0       	breq	.+30     	; 0x102a <__fp_splitA+0x2a>
    100c:	87 95       	ror	r24
    100e:	08 95       	ret
    1010:	12 16       	cp	r1, r18
    1012:	13 06       	cpc	r1, r19
    1014:	14 06       	cpc	r1, r20
    1016:	55 1f       	adc	r21, r21
    1018:	f2 cf       	rjmp	.-28     	; 0xffe <__fp_split3+0xe>
    101a:	46 95       	lsr	r20
    101c:	f1 df       	rcall	.-30     	; 0x1000 <__fp_splitA>
    101e:	08 c0       	rjmp	.+16     	; 0x1030 <__fp_splitA+0x30>
    1020:	16 16       	cp	r1, r22
    1022:	17 06       	cpc	r1, r23
    1024:	18 06       	cpc	r1, r24
    1026:	99 1f       	adc	r25, r25
    1028:	f1 cf       	rjmp	.-30     	; 0x100c <__fp_splitA+0xc>
    102a:	86 95       	lsr	r24
    102c:	71 05       	cpc	r23, r1
    102e:	61 05       	cpc	r22, r1
    1030:	08 94       	sec
    1032:	08 95       	ret

00001034 <__fp_zero>:
    1034:	e8 94       	clt

00001036 <__fp_szero>:
    1036:	bb 27       	eor	r27, r27
    1038:	66 27       	eor	r22, r22
    103a:	77 27       	eor	r23, r23
    103c:	cb 01       	movw	r24, r22
    103e:	97 f9       	bld	r25, 7
    1040:	08 95       	ret

00001042 <__mulsf3>:
    1042:	0e 94 34 08 	call	0x1068	; 0x1068 <__mulsf3x>
    1046:	0c 94 e7 07 	jmp	0xfce	; 0xfce <__fp_round>
    104a:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <__fp_pscA>
    104e:	38 f0       	brcs	.+14     	; 0x105e <__mulsf3+0x1c>
    1050:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fp_pscB>
    1054:	20 f0       	brcs	.+8      	; 0x105e <__mulsf3+0x1c>
    1056:	95 23       	and	r25, r21
    1058:	11 f0       	breq	.+4      	; 0x105e <__mulsf3+0x1c>
    105a:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_inf>
    105e:	0c 94 d6 07 	jmp	0xfac	; 0xfac <__fp_nan>
    1062:	11 24       	eor	r1, r1
    1064:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__fp_szero>

00001068 <__mulsf3x>:
    1068:	0e 94 f8 07 	call	0xff0	; 0xff0 <__fp_split3>
    106c:	70 f3       	brcs	.-36     	; 0x104a <__mulsf3+0x8>

0000106e <__mulsf3_pse>:
    106e:	95 9f       	mul	r25, r21
    1070:	c1 f3       	breq	.-16     	; 0x1062 <__mulsf3+0x20>
    1072:	95 0f       	add	r25, r21
    1074:	50 e0       	ldi	r21, 0x00	; 0
    1076:	55 1f       	adc	r21, r21
    1078:	62 9f       	mul	r22, r18
    107a:	f0 01       	movw	r30, r0
    107c:	72 9f       	mul	r23, r18
    107e:	bb 27       	eor	r27, r27
    1080:	f0 0d       	add	r31, r0
    1082:	b1 1d       	adc	r27, r1
    1084:	63 9f       	mul	r22, r19
    1086:	aa 27       	eor	r26, r26
    1088:	f0 0d       	add	r31, r0
    108a:	b1 1d       	adc	r27, r1
    108c:	aa 1f       	adc	r26, r26
    108e:	64 9f       	mul	r22, r20
    1090:	66 27       	eor	r22, r22
    1092:	b0 0d       	add	r27, r0
    1094:	a1 1d       	adc	r26, r1
    1096:	66 1f       	adc	r22, r22
    1098:	82 9f       	mul	r24, r18
    109a:	22 27       	eor	r18, r18
    109c:	b0 0d       	add	r27, r0
    109e:	a1 1d       	adc	r26, r1
    10a0:	62 1f       	adc	r22, r18
    10a2:	73 9f       	mul	r23, r19
    10a4:	b0 0d       	add	r27, r0
    10a6:	a1 1d       	adc	r26, r1
    10a8:	62 1f       	adc	r22, r18
    10aa:	83 9f       	mul	r24, r19
    10ac:	a0 0d       	add	r26, r0
    10ae:	61 1d       	adc	r22, r1
    10b0:	22 1f       	adc	r18, r18
    10b2:	74 9f       	mul	r23, r20
    10b4:	33 27       	eor	r19, r19
    10b6:	a0 0d       	add	r26, r0
    10b8:	61 1d       	adc	r22, r1
    10ba:	23 1f       	adc	r18, r19
    10bc:	84 9f       	mul	r24, r20
    10be:	60 0d       	add	r22, r0
    10c0:	21 1d       	adc	r18, r1
    10c2:	82 2f       	mov	r24, r18
    10c4:	76 2f       	mov	r23, r22
    10c6:	6a 2f       	mov	r22, r26
    10c8:	11 24       	eor	r1, r1
    10ca:	9f 57       	subi	r25, 0x7F	; 127
    10cc:	50 40       	sbci	r21, 0x00	; 0
    10ce:	9a f0       	brmi	.+38     	; 0x10f6 <__mulsf3_pse+0x88>
    10d0:	f1 f0       	breq	.+60     	; 0x110e <__mulsf3_pse+0xa0>
    10d2:	88 23       	and	r24, r24
    10d4:	4a f0       	brmi	.+18     	; 0x10e8 <__mulsf3_pse+0x7a>
    10d6:	ee 0f       	add	r30, r30
    10d8:	ff 1f       	adc	r31, r31
    10da:	bb 1f       	adc	r27, r27
    10dc:	66 1f       	adc	r22, r22
    10de:	77 1f       	adc	r23, r23
    10e0:	88 1f       	adc	r24, r24
    10e2:	91 50       	subi	r25, 0x01	; 1
    10e4:	50 40       	sbci	r21, 0x00	; 0
    10e6:	a9 f7       	brne	.-22     	; 0x10d2 <__mulsf3_pse+0x64>
    10e8:	9e 3f       	cpi	r25, 0xFE	; 254
    10ea:	51 05       	cpc	r21, r1
    10ec:	80 f0       	brcs	.+32     	; 0x110e <__mulsf3_pse+0xa0>
    10ee:	0c 94 d0 07 	jmp	0xfa0	; 0xfa0 <__fp_inf>
    10f2:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__fp_szero>
    10f6:	5f 3f       	cpi	r21, 0xFF	; 255
    10f8:	e4 f3       	brlt	.-8      	; 0x10f2 <__mulsf3_pse+0x84>
    10fa:	98 3e       	cpi	r25, 0xE8	; 232
    10fc:	d4 f3       	brlt	.-12     	; 0x10f2 <__mulsf3_pse+0x84>
    10fe:	86 95       	lsr	r24
    1100:	77 95       	ror	r23
    1102:	67 95       	ror	r22
    1104:	b7 95       	ror	r27
    1106:	f7 95       	ror	r31
    1108:	e7 95       	ror	r30
    110a:	9f 5f       	subi	r25, 0xFF	; 255
    110c:	c1 f7       	brne	.-16     	; 0x10fe <__mulsf3_pse+0x90>
    110e:	fe 2b       	or	r31, r30
    1110:	88 0f       	add	r24, r24
    1112:	91 1d       	adc	r25, r1
    1114:	96 95       	lsr	r25
    1116:	87 95       	ror	r24
    1118:	97 f9       	bld	r25, 7
    111a:	08 95       	ret

0000111c <__ftoa_engine>:
    111c:	28 30       	cpi	r18, 0x08	; 8
    111e:	08 f0       	brcs	.+2      	; 0x1122 <__ftoa_engine+0x6>
    1120:	27 e0       	ldi	r18, 0x07	; 7
    1122:	33 27       	eor	r19, r19
    1124:	da 01       	movw	r26, r20
    1126:	99 0f       	add	r25, r25
    1128:	31 1d       	adc	r19, r1
    112a:	87 fd       	sbrc	r24, 7
    112c:	91 60       	ori	r25, 0x01	; 1
    112e:	00 96       	adiw	r24, 0x00	; 0
    1130:	61 05       	cpc	r22, r1
    1132:	71 05       	cpc	r23, r1
    1134:	39 f4       	brne	.+14     	; 0x1144 <__ftoa_engine+0x28>
    1136:	32 60       	ori	r19, 0x02	; 2
    1138:	2e 5f       	subi	r18, 0xFE	; 254
    113a:	3d 93       	st	X+, r19
    113c:	30 e3       	ldi	r19, 0x30	; 48
    113e:	2a 95       	dec	r18
    1140:	e1 f7       	brne	.-8      	; 0x113a <__ftoa_engine+0x1e>
    1142:	08 95       	ret
    1144:	9f 3f       	cpi	r25, 0xFF	; 255
    1146:	30 f0       	brcs	.+12     	; 0x1154 <__ftoa_engine+0x38>
    1148:	80 38       	cpi	r24, 0x80	; 128
    114a:	71 05       	cpc	r23, r1
    114c:	61 05       	cpc	r22, r1
    114e:	09 f0       	breq	.+2      	; 0x1152 <__ftoa_engine+0x36>
    1150:	3c 5f       	subi	r19, 0xFC	; 252
    1152:	3c 5f       	subi	r19, 0xFC	; 252
    1154:	3d 93       	st	X+, r19
    1156:	91 30       	cpi	r25, 0x01	; 1
    1158:	08 f0       	brcs	.+2      	; 0x115c <__ftoa_engine+0x40>
    115a:	80 68       	ori	r24, 0x80	; 128
    115c:	91 1d       	adc	r25, r1
    115e:	df 93       	push	r29
    1160:	cf 93       	push	r28
    1162:	1f 93       	push	r17
    1164:	0f 93       	push	r16
    1166:	ff 92       	push	r15
    1168:	ef 92       	push	r14
    116a:	19 2f       	mov	r17, r25
    116c:	98 7f       	andi	r25, 0xF8	; 248
    116e:	96 95       	lsr	r25
    1170:	e9 2f       	mov	r30, r25
    1172:	96 95       	lsr	r25
    1174:	96 95       	lsr	r25
    1176:	e9 0f       	add	r30, r25
    1178:	ff 27       	eor	r31, r31
    117a:	e2 5d       	subi	r30, 0xD2	; 210
    117c:	fe 4f       	sbci	r31, 0xFE	; 254
    117e:	99 27       	eor	r25, r25
    1180:	33 27       	eor	r19, r19
    1182:	ee 24       	eor	r14, r14
    1184:	ff 24       	eor	r15, r15
    1186:	a7 01       	movw	r20, r14
    1188:	e7 01       	movw	r28, r14
    118a:	05 90       	lpm	r0, Z+
    118c:	08 94       	sec
    118e:	07 94       	ror	r0
    1190:	28 f4       	brcc	.+10     	; 0x119c <__ftoa_engine+0x80>
    1192:	36 0f       	add	r19, r22
    1194:	e7 1e       	adc	r14, r23
    1196:	f8 1e       	adc	r15, r24
    1198:	49 1f       	adc	r20, r25
    119a:	51 1d       	adc	r21, r1
    119c:	66 0f       	add	r22, r22
    119e:	77 1f       	adc	r23, r23
    11a0:	88 1f       	adc	r24, r24
    11a2:	99 1f       	adc	r25, r25
    11a4:	06 94       	lsr	r0
    11a6:	a1 f7       	brne	.-24     	; 0x1190 <__ftoa_engine+0x74>
    11a8:	05 90       	lpm	r0, Z+
    11aa:	07 94       	ror	r0
    11ac:	28 f4       	brcc	.+10     	; 0x11b8 <__ftoa_engine+0x9c>
    11ae:	e7 0e       	add	r14, r23
    11b0:	f8 1e       	adc	r15, r24
    11b2:	49 1f       	adc	r20, r25
    11b4:	56 1f       	adc	r21, r22
    11b6:	c1 1d       	adc	r28, r1
    11b8:	77 0f       	add	r23, r23
    11ba:	88 1f       	adc	r24, r24
    11bc:	99 1f       	adc	r25, r25
    11be:	66 1f       	adc	r22, r22
    11c0:	06 94       	lsr	r0
    11c2:	a1 f7       	brne	.-24     	; 0x11ac <__ftoa_engine+0x90>
    11c4:	05 90       	lpm	r0, Z+
    11c6:	07 94       	ror	r0
    11c8:	28 f4       	brcc	.+10     	; 0x11d4 <__ftoa_engine+0xb8>
    11ca:	f8 0e       	add	r15, r24
    11cc:	49 1f       	adc	r20, r25
    11ce:	56 1f       	adc	r21, r22
    11d0:	c7 1f       	adc	r28, r23
    11d2:	d1 1d       	adc	r29, r1
    11d4:	88 0f       	add	r24, r24
    11d6:	99 1f       	adc	r25, r25
    11d8:	66 1f       	adc	r22, r22
    11da:	77 1f       	adc	r23, r23
    11dc:	06 94       	lsr	r0
    11de:	a1 f7       	brne	.-24     	; 0x11c8 <__ftoa_engine+0xac>
    11e0:	05 90       	lpm	r0, Z+
    11e2:	07 94       	ror	r0
    11e4:	20 f4       	brcc	.+8      	; 0x11ee <__ftoa_engine+0xd2>
    11e6:	49 0f       	add	r20, r25
    11e8:	56 1f       	adc	r21, r22
    11ea:	c7 1f       	adc	r28, r23
    11ec:	d8 1f       	adc	r29, r24
    11ee:	99 0f       	add	r25, r25
    11f0:	66 1f       	adc	r22, r22
    11f2:	77 1f       	adc	r23, r23
    11f4:	88 1f       	adc	r24, r24
    11f6:	06 94       	lsr	r0
    11f8:	a9 f7       	brne	.-22     	; 0x11e4 <__ftoa_engine+0xc8>
    11fa:	84 91       	lpm	r24, Z
    11fc:	10 95       	com	r17
    11fe:	17 70       	andi	r17, 0x07	; 7
    1200:	41 f0       	breq	.+16     	; 0x1212 <__ftoa_engine+0xf6>
    1202:	d6 95       	lsr	r29
    1204:	c7 95       	ror	r28
    1206:	57 95       	ror	r21
    1208:	47 95       	ror	r20
    120a:	f7 94       	ror	r15
    120c:	e7 94       	ror	r14
    120e:	1a 95       	dec	r17
    1210:	c1 f7       	brne	.-16     	; 0x1202 <__ftoa_engine+0xe6>
    1212:	e4 ed       	ldi	r30, 0xD4	; 212
    1214:	f0 e0       	ldi	r31, 0x00	; 0
    1216:	68 94       	set
    1218:	15 90       	lpm	r1, Z+
    121a:	15 91       	lpm	r17, Z+
    121c:	35 91       	lpm	r19, Z+
    121e:	65 91       	lpm	r22, Z+
    1220:	95 91       	lpm	r25, Z+
    1222:	05 90       	lpm	r0, Z+
    1224:	7f e2       	ldi	r23, 0x2F	; 47
    1226:	73 95       	inc	r23
    1228:	e1 18       	sub	r14, r1
    122a:	f1 0a       	sbc	r15, r17
    122c:	43 0b       	sbc	r20, r19
    122e:	56 0b       	sbc	r21, r22
    1230:	c9 0b       	sbc	r28, r25
    1232:	d0 09       	sbc	r29, r0
    1234:	c0 f7       	brcc	.-16     	; 0x1226 <__ftoa_engine+0x10a>
    1236:	e1 0c       	add	r14, r1
    1238:	f1 1e       	adc	r15, r17
    123a:	43 1f       	adc	r20, r19
    123c:	56 1f       	adc	r21, r22
    123e:	c9 1f       	adc	r28, r25
    1240:	d0 1d       	adc	r29, r0
    1242:	7e f4       	brtc	.+30     	; 0x1262 <__ftoa_engine+0x146>
    1244:	70 33       	cpi	r23, 0x30	; 48
    1246:	11 f4       	brne	.+4      	; 0x124c <__ftoa_engine+0x130>
    1248:	8a 95       	dec	r24
    124a:	e6 cf       	rjmp	.-52     	; 0x1218 <__ftoa_engine+0xfc>
    124c:	e8 94       	clt
    124e:	01 50       	subi	r16, 0x01	; 1
    1250:	30 f0       	brcs	.+12     	; 0x125e <__ftoa_engine+0x142>
    1252:	08 0f       	add	r16, r24
    1254:	0a f4       	brpl	.+2      	; 0x1258 <__ftoa_engine+0x13c>
    1256:	00 27       	eor	r16, r16
    1258:	02 17       	cp	r16, r18
    125a:	08 f4       	brcc	.+2      	; 0x125e <__ftoa_engine+0x142>
    125c:	20 2f       	mov	r18, r16
    125e:	23 95       	inc	r18
    1260:	02 2f       	mov	r16, r18
    1262:	7a 33       	cpi	r23, 0x3A	; 58
    1264:	28 f0       	brcs	.+10     	; 0x1270 <__ftoa_engine+0x154>
    1266:	79 e3       	ldi	r23, 0x39	; 57
    1268:	7d 93       	st	X+, r23
    126a:	2a 95       	dec	r18
    126c:	e9 f7       	brne	.-6      	; 0x1268 <__ftoa_engine+0x14c>
    126e:	10 c0       	rjmp	.+32     	; 0x1290 <__ftoa_engine+0x174>
    1270:	7d 93       	st	X+, r23
    1272:	2a 95       	dec	r18
    1274:	89 f6       	brne	.-94     	; 0x1218 <__ftoa_engine+0xfc>
    1276:	06 94       	lsr	r0
    1278:	97 95       	ror	r25
    127a:	67 95       	ror	r22
    127c:	37 95       	ror	r19
    127e:	17 95       	ror	r17
    1280:	17 94       	ror	r1
    1282:	e1 18       	sub	r14, r1
    1284:	f1 0a       	sbc	r15, r17
    1286:	43 0b       	sbc	r20, r19
    1288:	56 0b       	sbc	r21, r22
    128a:	c9 0b       	sbc	r28, r25
    128c:	d0 09       	sbc	r29, r0
    128e:	98 f0       	brcs	.+38     	; 0x12b6 <__ftoa_engine+0x19a>
    1290:	23 95       	inc	r18
    1292:	7e 91       	ld	r23, -X
    1294:	73 95       	inc	r23
    1296:	7a 33       	cpi	r23, 0x3A	; 58
    1298:	08 f0       	brcs	.+2      	; 0x129c <__ftoa_engine+0x180>
    129a:	70 e3       	ldi	r23, 0x30	; 48
    129c:	7c 93       	st	X, r23
    129e:	20 13       	cpse	r18, r16
    12a0:	b8 f7       	brcc	.-18     	; 0x1290 <__ftoa_engine+0x174>
    12a2:	7e 91       	ld	r23, -X
    12a4:	70 61       	ori	r23, 0x10	; 16
    12a6:	7d 93       	st	X+, r23
    12a8:	30 f0       	brcs	.+12     	; 0x12b6 <__ftoa_engine+0x19a>
    12aa:	83 95       	inc	r24
    12ac:	71 e3       	ldi	r23, 0x31	; 49
    12ae:	7d 93       	st	X+, r23
    12b0:	70 e3       	ldi	r23, 0x30	; 48
    12b2:	2a 95       	dec	r18
    12b4:	e1 f7       	brne	.-8      	; 0x12ae <__ftoa_engine+0x192>
    12b6:	11 24       	eor	r1, r1
    12b8:	ef 90       	pop	r14
    12ba:	ff 90       	pop	r15
    12bc:	0f 91       	pop	r16
    12be:	1f 91       	pop	r17
    12c0:	cf 91       	pop	r28
    12c2:	df 91       	pop	r29
    12c4:	99 27       	eor	r25, r25
    12c6:	87 fd       	sbrc	r24, 7
    12c8:	90 95       	com	r25
    12ca:	08 95       	ret

000012cc <strnlen_P>:
    12cc:	fc 01       	movw	r30, r24
    12ce:	05 90       	lpm	r0, Z+
    12d0:	61 50       	subi	r22, 0x01	; 1
    12d2:	70 40       	sbci	r23, 0x00	; 0
    12d4:	01 10       	cpse	r0, r1
    12d6:	d8 f7       	brcc	.-10     	; 0x12ce <strnlen_P+0x2>
    12d8:	80 95       	com	r24
    12da:	90 95       	com	r25
    12dc:	8e 0f       	add	r24, r30
    12de:	9f 1f       	adc	r25, r31
    12e0:	08 95       	ret

000012e2 <strcpy>:
    12e2:	fb 01       	movw	r30, r22
    12e4:	dc 01       	movw	r26, r24
    12e6:	01 90       	ld	r0, Z+
    12e8:	0d 92       	st	X+, r0
    12ea:	00 20       	and	r0, r0
    12ec:	e1 f7       	brne	.-8      	; 0x12e6 <strcpy+0x4>
    12ee:	08 95       	ret

000012f0 <strnlen>:
    12f0:	fc 01       	movw	r30, r24
    12f2:	61 50       	subi	r22, 0x01	; 1
    12f4:	70 40       	sbci	r23, 0x00	; 0
    12f6:	01 90       	ld	r0, Z+
    12f8:	01 10       	cpse	r0, r1
    12fa:	d8 f7       	brcc	.-10     	; 0x12f2 <strnlen+0x2>
    12fc:	80 95       	com	r24
    12fe:	90 95       	com	r25
    1300:	8e 0f       	add	r24, r30
    1302:	9f 1f       	adc	r25, r31
    1304:	08 95       	ret

00001306 <fputc>:
    1306:	0f 93       	push	r16
    1308:	1f 93       	push	r17
    130a:	cf 93       	push	r28
    130c:	df 93       	push	r29
    130e:	fb 01       	movw	r30, r22
    1310:	23 81       	ldd	r18, Z+3	; 0x03
    1312:	21 fd       	sbrc	r18, 1
    1314:	03 c0       	rjmp	.+6      	; 0x131c <fputc+0x16>
    1316:	8f ef       	ldi	r24, 0xFF	; 255
    1318:	9f ef       	ldi	r25, 0xFF	; 255
    131a:	2c c0       	rjmp	.+88     	; 0x1374 <fputc+0x6e>
    131c:	22 ff       	sbrs	r18, 2
    131e:	16 c0       	rjmp	.+44     	; 0x134c <fputc+0x46>
    1320:	46 81       	ldd	r20, Z+6	; 0x06
    1322:	57 81       	ldd	r21, Z+7	; 0x07
    1324:	24 81       	ldd	r18, Z+4	; 0x04
    1326:	35 81       	ldd	r19, Z+5	; 0x05
    1328:	42 17       	cp	r20, r18
    132a:	53 07       	cpc	r21, r19
    132c:	44 f4       	brge	.+16     	; 0x133e <fputc+0x38>
    132e:	a0 81       	ld	r26, Z
    1330:	b1 81       	ldd	r27, Z+1	; 0x01
    1332:	9d 01       	movw	r18, r26
    1334:	2f 5f       	subi	r18, 0xFF	; 255
    1336:	3f 4f       	sbci	r19, 0xFF	; 255
    1338:	31 83       	std	Z+1, r19	; 0x01
    133a:	20 83       	st	Z, r18
    133c:	8c 93       	st	X, r24
    133e:	26 81       	ldd	r18, Z+6	; 0x06
    1340:	37 81       	ldd	r19, Z+7	; 0x07
    1342:	2f 5f       	subi	r18, 0xFF	; 255
    1344:	3f 4f       	sbci	r19, 0xFF	; 255
    1346:	37 83       	std	Z+7, r19	; 0x07
    1348:	26 83       	std	Z+6, r18	; 0x06
    134a:	14 c0       	rjmp	.+40     	; 0x1374 <fputc+0x6e>
    134c:	8b 01       	movw	r16, r22
    134e:	ec 01       	movw	r28, r24
    1350:	fb 01       	movw	r30, r22
    1352:	00 84       	ldd	r0, Z+8	; 0x08
    1354:	f1 85       	ldd	r31, Z+9	; 0x09
    1356:	e0 2d       	mov	r30, r0
    1358:	09 95       	icall
    135a:	89 2b       	or	r24, r25
    135c:	e1 f6       	brne	.-72     	; 0x1316 <fputc+0x10>
    135e:	d8 01       	movw	r26, r16
    1360:	16 96       	adiw	r26, 0x06	; 6
    1362:	8d 91       	ld	r24, X+
    1364:	9c 91       	ld	r25, X
    1366:	17 97       	sbiw	r26, 0x07	; 7
    1368:	01 96       	adiw	r24, 0x01	; 1
    136a:	17 96       	adiw	r26, 0x07	; 7
    136c:	9c 93       	st	X, r25
    136e:	8e 93       	st	-X, r24
    1370:	16 97       	sbiw	r26, 0x06	; 6
    1372:	ce 01       	movw	r24, r28
    1374:	df 91       	pop	r29
    1376:	cf 91       	pop	r28
    1378:	1f 91       	pop	r17
    137a:	0f 91       	pop	r16
    137c:	08 95       	ret

0000137e <printf>:
    137e:	a0 e0       	ldi	r26, 0x00	; 0
    1380:	b0 e0       	ldi	r27, 0x00	; 0
    1382:	e5 ec       	ldi	r30, 0xC5	; 197
    1384:	f9 e0       	ldi	r31, 0x09	; 9
    1386:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__prologue_saves__+0x20>
    138a:	ae 01       	movw	r20, r28
    138c:	4b 5f       	subi	r20, 0xFB	; 251
    138e:	5f 4f       	sbci	r21, 0xFF	; 255
    1390:	fa 01       	movw	r30, r20
    1392:	61 91       	ld	r22, Z+
    1394:	71 91       	ld	r23, Z+
    1396:	af 01       	movw	r20, r30
    1398:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <__iob+0x2>
    139c:	90 91 04 02 	lds	r25, 0x0204	; 0x800204 <__iob+0x3>
    13a0:	0e 94 df 03 	call	0x7be	; 0x7be <vfprintf>
    13a4:	e2 e0       	ldi	r30, 0x02	; 2
    13a6:	0c 94 88 07 	jmp	0xf10	; 0xf10 <__epilogue_restores__+0x20>

000013aa <puts>:
    13aa:	0f 93       	push	r16
    13ac:	1f 93       	push	r17
    13ae:	cf 93       	push	r28
    13b0:	df 93       	push	r29
    13b2:	e0 91 03 02 	lds	r30, 0x0203	; 0x800203 <__iob+0x2>
    13b6:	f0 91 04 02 	lds	r31, 0x0204	; 0x800204 <__iob+0x3>
    13ba:	23 81       	ldd	r18, Z+3	; 0x03
    13bc:	21 ff       	sbrs	r18, 1
    13be:	1b c0       	rjmp	.+54     	; 0x13f6 <puts+0x4c>
    13c0:	8c 01       	movw	r16, r24
    13c2:	d0 e0       	ldi	r29, 0x00	; 0
    13c4:	c0 e0       	ldi	r28, 0x00	; 0
    13c6:	f8 01       	movw	r30, r16
    13c8:	81 91       	ld	r24, Z+
    13ca:	8f 01       	movw	r16, r30
    13cc:	60 91 03 02 	lds	r22, 0x0203	; 0x800203 <__iob+0x2>
    13d0:	70 91 04 02 	lds	r23, 0x0204	; 0x800204 <__iob+0x3>
    13d4:	db 01       	movw	r26, r22
    13d6:	18 96       	adiw	r26, 0x08	; 8
    13d8:	ed 91       	ld	r30, X+
    13da:	fc 91       	ld	r31, X
    13dc:	19 97       	sbiw	r26, 0x09	; 9
    13de:	88 23       	and	r24, r24
    13e0:	31 f0       	breq	.+12     	; 0x13ee <puts+0x44>
    13e2:	09 95       	icall
    13e4:	89 2b       	or	r24, r25
    13e6:	79 f3       	breq	.-34     	; 0x13c6 <puts+0x1c>
    13e8:	df ef       	ldi	r29, 0xFF	; 255
    13ea:	cf ef       	ldi	r28, 0xFF	; 255
    13ec:	ec cf       	rjmp	.-40     	; 0x13c6 <puts+0x1c>
    13ee:	8a e0       	ldi	r24, 0x0A	; 10
    13f0:	09 95       	icall
    13f2:	89 2b       	or	r24, r25
    13f4:	19 f0       	breq	.+6      	; 0x13fc <puts+0x52>
    13f6:	8f ef       	ldi	r24, 0xFF	; 255
    13f8:	9f ef       	ldi	r25, 0xFF	; 255
    13fa:	02 c0       	rjmp	.+4      	; 0x1400 <puts+0x56>
    13fc:	8d 2f       	mov	r24, r29
    13fe:	9c 2f       	mov	r25, r28
    1400:	df 91       	pop	r29
    1402:	cf 91       	pop	r28
    1404:	1f 91       	pop	r17
    1406:	0f 91       	pop	r16
    1408:	08 95       	ret

0000140a <__ultoa_invert>:
    140a:	fa 01       	movw	r30, r20
    140c:	aa 27       	eor	r26, r26
    140e:	28 30       	cpi	r18, 0x08	; 8
    1410:	51 f1       	breq	.+84     	; 0x1466 <__ultoa_invert+0x5c>
    1412:	20 31       	cpi	r18, 0x10	; 16
    1414:	81 f1       	breq	.+96     	; 0x1476 <__ultoa_invert+0x6c>
    1416:	e8 94       	clt
    1418:	6f 93       	push	r22
    141a:	6e 7f       	andi	r22, 0xFE	; 254
    141c:	6e 5f       	subi	r22, 0xFE	; 254
    141e:	7f 4f       	sbci	r23, 0xFF	; 255
    1420:	8f 4f       	sbci	r24, 0xFF	; 255
    1422:	9f 4f       	sbci	r25, 0xFF	; 255
    1424:	af 4f       	sbci	r26, 0xFF	; 255
    1426:	b1 e0       	ldi	r27, 0x01	; 1
    1428:	3e d0       	rcall	.+124    	; 0x14a6 <__ultoa_invert+0x9c>
    142a:	b4 e0       	ldi	r27, 0x04	; 4
    142c:	3c d0       	rcall	.+120    	; 0x14a6 <__ultoa_invert+0x9c>
    142e:	67 0f       	add	r22, r23
    1430:	78 1f       	adc	r23, r24
    1432:	89 1f       	adc	r24, r25
    1434:	9a 1f       	adc	r25, r26
    1436:	a1 1d       	adc	r26, r1
    1438:	68 0f       	add	r22, r24
    143a:	79 1f       	adc	r23, r25
    143c:	8a 1f       	adc	r24, r26
    143e:	91 1d       	adc	r25, r1
    1440:	a1 1d       	adc	r26, r1
    1442:	6a 0f       	add	r22, r26
    1444:	71 1d       	adc	r23, r1
    1446:	81 1d       	adc	r24, r1
    1448:	91 1d       	adc	r25, r1
    144a:	a1 1d       	adc	r26, r1
    144c:	20 d0       	rcall	.+64     	; 0x148e <__ultoa_invert+0x84>
    144e:	09 f4       	brne	.+2      	; 0x1452 <__ultoa_invert+0x48>
    1450:	68 94       	set
    1452:	3f 91       	pop	r19
    1454:	2a e0       	ldi	r18, 0x0A	; 10
    1456:	26 9f       	mul	r18, r22
    1458:	11 24       	eor	r1, r1
    145a:	30 19       	sub	r19, r0
    145c:	30 5d       	subi	r19, 0xD0	; 208
    145e:	31 93       	st	Z+, r19
    1460:	de f6       	brtc	.-74     	; 0x1418 <__ultoa_invert+0xe>
    1462:	cf 01       	movw	r24, r30
    1464:	08 95       	ret
    1466:	46 2f       	mov	r20, r22
    1468:	47 70       	andi	r20, 0x07	; 7
    146a:	40 5d       	subi	r20, 0xD0	; 208
    146c:	41 93       	st	Z+, r20
    146e:	b3 e0       	ldi	r27, 0x03	; 3
    1470:	0f d0       	rcall	.+30     	; 0x1490 <__ultoa_invert+0x86>
    1472:	c9 f7       	brne	.-14     	; 0x1466 <__ultoa_invert+0x5c>
    1474:	f6 cf       	rjmp	.-20     	; 0x1462 <__ultoa_invert+0x58>
    1476:	46 2f       	mov	r20, r22
    1478:	4f 70       	andi	r20, 0x0F	; 15
    147a:	40 5d       	subi	r20, 0xD0	; 208
    147c:	4a 33       	cpi	r20, 0x3A	; 58
    147e:	18 f0       	brcs	.+6      	; 0x1486 <__ultoa_invert+0x7c>
    1480:	49 5d       	subi	r20, 0xD9	; 217
    1482:	31 fd       	sbrc	r19, 1
    1484:	40 52       	subi	r20, 0x20	; 32
    1486:	41 93       	st	Z+, r20
    1488:	02 d0       	rcall	.+4      	; 0x148e <__ultoa_invert+0x84>
    148a:	a9 f7       	brne	.-22     	; 0x1476 <__ultoa_invert+0x6c>
    148c:	ea cf       	rjmp	.-44     	; 0x1462 <__ultoa_invert+0x58>
    148e:	b4 e0       	ldi	r27, 0x04	; 4
    1490:	a6 95       	lsr	r26
    1492:	97 95       	ror	r25
    1494:	87 95       	ror	r24
    1496:	77 95       	ror	r23
    1498:	67 95       	ror	r22
    149a:	ba 95       	dec	r27
    149c:	c9 f7       	brne	.-14     	; 0x1490 <__ultoa_invert+0x86>
    149e:	00 97       	sbiw	r24, 0x00	; 0
    14a0:	61 05       	cpc	r22, r1
    14a2:	71 05       	cpc	r23, r1
    14a4:	08 95       	ret
    14a6:	9b 01       	movw	r18, r22
    14a8:	ac 01       	movw	r20, r24
    14aa:	0a 2e       	mov	r0, r26
    14ac:	06 94       	lsr	r0
    14ae:	57 95       	ror	r21
    14b0:	47 95       	ror	r20
    14b2:	37 95       	ror	r19
    14b4:	27 95       	ror	r18
    14b6:	ba 95       	dec	r27
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <__ultoa_invert+0xa2>
    14ba:	62 0f       	add	r22, r18
    14bc:	73 1f       	adc	r23, r19
    14be:	84 1f       	adc	r24, r20
    14c0:	95 1f       	adc	r25, r21
    14c2:	a0 1d       	adc	r26, r0
    14c4:	08 95       	ret

000014c6 <_exit>:
    14c6:	f8 94       	cli

000014c8 <__stop_program>:
    14c8:	ff cf       	rjmp	.-2      	; 0x14c8 <__stop_program>
