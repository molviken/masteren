
LoRa-node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002fe  00800100  00001ac6  00001b5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ac6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000129  008003fe  008003fe  00001e58  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001e58  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001eb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00001ef4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003134  00000000  00000000  0000219c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000018f4  00000000  00000000  000052d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000018b8  00000000  00000000  00006bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000754  00000000  00000000  0000847c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f7e  00000000  00000000  00008bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000186f  00000000  00000000  00009b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000b3bd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__ctors_end>
       4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       8:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <__vector_2>
       c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      10:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      14:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      18:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      1c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      20:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      24:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      28:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      2c:	0c 94 a9 02 	jmp	0x552	; 0x552 <__vector_11>
      30:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      34:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      38:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      3c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      40:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      44:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      48:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      4c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      50:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      54:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      58:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      5c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      60:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      64:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      68:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      6c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      70:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      74:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      78:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      7c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      80:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      84:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      88:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      8c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      90:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      94:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      98:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      9c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      ac:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      bc:	0c 94 85 02 	jmp	0x50a	; 0x50a <__vector_47>
      c0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>

000000cc <__trampolines_end>:
      cc:	6e 61       	ori	r22, 0x1E	; 30
      ce:	6e 00       	.word	0x006e	; ????

000000d0 <__c.2332>:
      d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     100:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     110:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     120:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     130:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     140:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     150:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     160:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     170:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     180:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     190:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ce <__ctors_end>:
     1ce:	11 24       	eor	r1, r1
     1d0:	1f be       	out	0x3f, r1	; 63
     1d2:	cf ef       	ldi	r28, 0xFF	; 255
     1d4:	d8 e0       	ldi	r29, 0x08	; 8
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	cd bf       	out	0x3d, r28	; 61

000001da <__do_copy_data>:
     1da:	13 e0       	ldi	r17, 0x03	; 3
     1dc:	a0 e0       	ldi	r26, 0x00	; 0
     1de:	b1 e0       	ldi	r27, 0x01	; 1
     1e0:	e6 ec       	ldi	r30, 0xC6	; 198
     1e2:	fa e1       	ldi	r31, 0x1A	; 26
     1e4:	02 c0       	rjmp	.+4      	; 0x1ea <__do_copy_data+0x10>
     1e6:	05 90       	lpm	r0, Z+
     1e8:	0d 92       	st	X+, r0
     1ea:	ae 3f       	cpi	r26, 0xFE	; 254
     1ec:	b1 07       	cpc	r27, r17
     1ee:	d9 f7       	brne	.-10     	; 0x1e6 <__do_copy_data+0xc>

000001f0 <__do_clear_bss>:
     1f0:	25 e0       	ldi	r18, 0x05	; 5
     1f2:	ae ef       	ldi	r26, 0xFE	; 254
     1f4:	b3 e0       	ldi	r27, 0x03	; 3
     1f6:	01 c0       	rjmp	.+2      	; 0x1fa <.do_clear_bss_start>

000001f8 <.do_clear_bss_loop>:
     1f8:	1d 92       	st	X+, r1

000001fa <.do_clear_bss_start>:
     1fa:	a7 32       	cpi	r26, 0x27	; 39
     1fc:	b2 07       	cpc	r27, r18
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <.do_clear_bss_loop>
     200:	0e 94 06 01 	call	0x20c	; 0x20c <main>
     204:	0c 94 61 0d 	jmp	0x1ac2	; 0x1ac2 <_exit>

00000208 <__bad_interrupt>:
     208:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020c <main>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     20c:	2f ef       	ldi	r18, 0xFF	; 255
     20e:	80 e7       	ldi	r24, 0x70	; 112
     210:	92 e0       	ldi	r25, 0x02	; 2
     212:	21 50       	subi	r18, 0x01	; 1
     214:	80 40       	sbci	r24, 0x00	; 0
     216:	90 40       	sbci	r25, 0x00	; 0
     218:	e1 f7       	brne	.-8      	; 0x212 <main+0x6>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x10>
     21c:	00 00       	nop


int main(void){
	_delay_ms(100); // Start-up time after pressing reset button
	
	FSM_run();
     21e:	0e 94 96 01 	call	0x32c	; 0x32c <FSM_run>
	puts("ended");
     222:	82 e7       	ldi	r24, 0x72	; 114
     224:	91 e0       	ldi	r25, 0x01	; 1
     226:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
	return 0;
}
     22a:	80 e0       	ldi	r24, 0x00	; 0
     22c:	90 e0       	ldi	r25, 0x00	; 0
     22e:	08 95       	ret

00000230 <adc_init>:




void adc_init(){
	ADMUX = 0;
     230:	ac e7       	ldi	r26, 0x7C	; 124
     232:	b0 e0       	ldi	r27, 0x00	; 0
     234:	1c 92       	st	X, r1
	ADCSRA = 0;
     236:	ea e7       	ldi	r30, 0x7A	; 122
     238:	f0 e0       	ldi	r31, 0x00	; 0
     23a:	10 82       	st	Z, r1
	ADMUX |= ADC_VOLTAGE_REF_AVCC;											// Sets adc voltage reference
     23c:	8c 91       	ld	r24, X
     23e:	80 64       	ori	r24, 0x40	; 64
     240:	8c 93       	st	X, r24
	ADCSRA |= ADC_PRESCALAR_128;											// ADC prescaler = 128 ---> 8MHz goes to 62.5 kHz
     242:	80 81       	ld	r24, Z
     244:	86 60       	ori	r24, 0x06	; 6
     246:	80 83       	st	Z, r24
	//ADCSRA |= (0 << ADIE);												// Enables ADC interrupt
	ADCSRA |= (1 << ADEN);													// Enabling the ADC
     248:	80 81       	ld	r24, Z
     24a:	80 68       	ori	r24, 0x80	; 128
     24c:	80 83       	st	Z, r24
     24e:	08 95       	ret

00000250 <adc_read>:
}


uint16_t adc_read(){
	uint16_t val;					
	ADCSRA |= (1 << ADSC);													// Starts single conversion
     250:	ea e7       	ldi	r30, 0x7A	; 122
     252:	f0 e0       	ldi	r31, 0x00	; 0
     254:	80 81       	ld	r24, Z
     256:	80 64       	ori	r24, 0x40	; 64
     258:	80 83       	st	Z, r24
	while(!(ADCSRA & (1<<ADIF)));
     25a:	80 81       	ld	r24, Z
     25c:	84 ff       	sbrs	r24, 4
     25e:	fd cf       	rjmp	.-6      	; 0x25a <adc_read+0xa>
	val = ADCW;
     260:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     264:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
	if ((int)val > 1000){val = 1000;}
     268:	89 3e       	cpi	r24, 0xE9	; 233
     26a:	23 e0       	ldi	r18, 0x03	; 3
     26c:	92 07       	cpc	r25, r18
     26e:	14 f0       	brlt	.+4      	; 0x274 <adc_read+0x24>
     270:	88 ee       	ldi	r24, 0xE8	; 232
     272:	93 e0       	ldi	r25, 0x03	; 3
	return val;
}
     274:	08 95       	ret

00000276 <adc_change_channel>:

void adc_change_channel(uint8_t channel){
	ADMUX |= channel;														// Setting adc channel to be read
     276:	ec e7       	ldi	r30, 0x7C	; 124
     278:	f0 e0       	ldi	r31, 0x00	; 0
     27a:	90 81       	ld	r25, Z
     27c:	89 2b       	or	r24, r25
     27e:	80 83       	st	Z, r24
	adc_read();																// Discard first measurement after channel change
     280:	0e 94 28 01 	call	0x250	; 0x250 <adc_read>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     284:	8a e1       	ldi	r24, 0x1A	; 26
     286:	8a 95       	dec	r24
     288:	f1 f7       	brne	.-4      	; 0x286 <adc_change_channel+0x10>
     28a:	00 c0       	rjmp	.+0      	; 0x28c <adc_change_channel+0x16>
     28c:	08 95       	ret

0000028e <board_charge>:
	DDRD |= (1 << DDRD4);	  // Set PD4 as output
	
}

void board_charge(int on){
	if (on) clear_bit(PORTD, PORTD4);
     28e:	89 2b       	or	r24, r25
     290:	11 f0       	breq	.+4      	; 0x296 <board_charge+0x8>
     292:	5c 98       	cbi	0x0b, 4	; 11
     294:	08 95       	ret
	else set_bit(PORTD, PORTD4);
     296:	5c 9a       	sbi	0x0b, 4	; 11
     298:	08 95       	ret

0000029a <board_setup>:
}

void board_setup(void){
	#ifndef LORA_NODE
	USART_init();
     29a:	0e 94 2a 05 	call	0xa54	; 0xa54 <USART_init>
	#endif
	adc_init();
     29e:	0e 94 18 01 	call	0x230	; 0x230 <adc_init>

static void board_dmy_btn_init();
static void board_gpio_init();

void board_dmy_btn_init(void){
	DDRD &= ~(1 << DDD3);     // Clear the PD2 pin
     2a2:	53 98       	cbi	0x0a, 3	; 10
	EICRA |= (1 << ISC11);    // set INT1 to trigger on falling edge
     2a4:	e9 e6       	ldi	r30, 0x69	; 105
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	80 81       	ld	r24, Z
     2aa:	88 60       	ori	r24, 0x08	; 8
     2ac:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);     // Turns on INT1
     2ae:	e9 9a       	sbi	0x1d, 1	; 29
}

void board_gpio_init(void){
	DDRD |= (1 << DDRD4);	  // Set PD4 as output
     2b0:	54 9a       	sbi	0x0a, 4	; 10
	USART_init();
	#endif
	adc_init();
	board_dmy_btn_init();
	board_gpio_init();
	board_charge(0);
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 47 01 	call	0x28e	; 0x28e <board_charge>
	
	#ifdef LORA_NODE
	lora_init();
	#endif

	i2c_init();
     2ba:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <i2c_init>
	timers_init();
     2be:	0e 94 90 05 	call	0xb20	; 0xb20 <timers_init>
	sei();
     2c2:	78 94       	sei
     2c4:	08 95       	ret

000002c6 <board_get_battery_level>:
	
	r1 = 174;
	r2 = 255;
	battery_max = 4.2;
	
	adc_change_channel(VBAT);
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	0e 94 3b 01 	call	0x276	; 0x276 <adc_change_channel>
	val = adc_read();
     2cc:	0e 94 28 01 	call	0x250	; 0x250 <adc_read>
	
	v_div_tick = (((r2)/(r1+r2))*battery_max) / 1024;
	vbat = v_div_tick*val*(r1+r2)/r2;
	bat_percentage = vbat*100/battery_max;
	
	return bat_percentage;
     2d0:	bc 01       	movw	r22, r24
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <__floatunsisf>
     2da:	26 eb       	ldi	r18, 0xB6	; 182
     2dc:	36 ec       	ldi	r19, 0xC6	; 198
     2de:	4f e1       	ldi	r20, 0x1F	; 31
     2e0:	5b e3       	ldi	r21, 0x3B	; 59
     2e2:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__mulsf3>
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	30 e8       	ldi	r19, 0x80	; 128
     2ea:	46 ed       	ldi	r20, 0xD6	; 214
     2ec:	53 e4       	ldi	r21, 0x43	; 67
     2ee:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__mulsf3>
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 e0       	ldi	r19, 0x00	; 0
     2f6:	4f e7       	ldi	r20, 0x7F	; 127
     2f8:	53 e4       	ldi	r21, 0x43	; 67
     2fa:	0e 94 b5 09 	call	0x136a	; 0x136a <__divsf3>
     2fe:	20 e0       	ldi	r18, 0x00	; 0
     300:	30 e0       	ldi	r19, 0x00	; 0
     302:	48 ec       	ldi	r20, 0xC8	; 200
     304:	52 e4       	ldi	r21, 0x42	; 66
     306:	0e 94 eb 0a 	call	0x15d6	; 0x15d6 <__mulsf3>
     30a:	26 e6       	ldi	r18, 0x66	; 102
     30c:	36 e6       	ldi	r19, 0x66	; 102
     30e:	46 e8       	ldi	r20, 0x86	; 134
     310:	50 e4       	ldi	r21, 0x40	; 64
     312:	0e 94 b5 09 	call	0x136a	; 0x136a <__divsf3>
     316:	0e 94 27 0a 	call	0x144e	; 0x144e <__fixsfsi>
     31a:	86 2f       	mov	r24, r22
     31c:	08 95       	ret

0000031e <FSM_system_init>:
static volatile int rec_flag = 0;
//static void FSM_system_init(void);

void FSM_system_init(void){
	
	board_setup();
     31e:	0e 94 4d 01 	call	0x29a	; 0x29a <board_setup>
	puts("hi");
     322:	88 e7       	ldi	r24, 0x78	; 120
     324:	91 e0       	ldi	r25, 0x01	; 1
     326:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
     32a:	08 95       	ret

0000032c <FSM_run>:
	#endif
}



void FSM_run(void){
     32c:	cf 93       	push	r28
     32e:	df 93       	push	r29
     330:	cd b7       	in	r28, 0x3d	; 61
     332:	de b7       	in	r29, 0x3e	; 62
     334:	65 97       	sbiw	r28, 0x15	; 21
     336:	0f b6       	in	r0, 0x3f	; 63
     338:	f8 94       	cli
     33a:	de bf       	out	0x3e, r29	; 62
     33c:	0f be       	out	0x3f, r0	; 63
     33e:	cd bf       	out	0x3d, r28	; 61
	
	board_t board1 = {DEV_ID, 0, 0, 100, {0, 0, 0, 0}};
     340:	fe 01       	movw	r30, r28
     342:	31 96       	adiw	r30, 0x01	; 1
     344:	85 e1       	ldi	r24, 0x15	; 21
     346:	df 01       	movw	r26, r30
     348:	1d 92       	st	X+, r1
     34a:	8a 95       	dec	r24
     34c:	e9 f7       	brne	.-6      	; 0x348 <FSM_run+0x1c>
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	89 83       	std	Y+1, r24	; 0x01
     352:	84 e6       	ldi	r24, 0x64	; 100
     354:	8f 83       	std	Y+7, r24	; 0x07
     356:	81 2c       	mov	r8, r1
     358:	91 2c       	mov	r9, r1
     35a:	54 01       	movw	r10, r8
     35c:	c1 2c       	mov	r12, r1
     35e:	d1 2c       	mov	r13, r1
     360:	76 01       	movw	r14, r12
				enter_powerSave();
				puts("Awake");
				#ifndef TIMER2
				//_delay_ms(1000);
				#endif
				currentState = ST_ACTIVE;
     362:	12 e0       	ldi	r17, 0x02	; 2
						#endif
						board1.ina219.bus_voltage_avg = 0;
						board1.ina219.current_avg = 0;
					}
				}
				currentState = ST_SLEEP;
     364:	01 e0       	ldi	r16, 0x01	; 1
				if (wake_up_flag){
					wake_up_flag = 0;
					board1.ina219.bus_voltage_avg	+= INA219_readBusVoltageReg();
					board1.ina219.current_avg		+= INA219_readCurrentReg();
					board1.batteryLevel = board_get_battery_level();
					if(!(current_time%SAMPLE_SIZE)){
     366:	0f 2e       	mov	r0, r31
     368:	fc e3       	ldi	r31, 0x3C	; 60
     36a:	4f 2e       	mov	r4, r31
     36c:	51 2c       	mov	r5, r1
     36e:	61 2c       	mov	r6, r1
     370:	71 2c       	mov	r7, r1
     372:	f0 2d       	mov	r31, r0

void FSM_run(void){
	
	board_t board1 = {DEV_ID, 0, 0, 100, {0, 0, 0, 0}};
	while (1){
		switch (currentState){
     374:	80 91 04 04 	lds	r24, 0x0404	; 0x800404 <currentState>
     378:	81 30       	cpi	r24, 0x01	; 1
     37a:	09 f4       	brne	.+2      	; 0x37e <FSM_run+0x52>
     37c:	89 c0       	rjmp	.+274    	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
     37e:	18 f0       	brcs	.+6      	; 0x386 <FSM_run+0x5a>
     380:	82 30       	cpi	r24, 0x02	; 2
     382:	31 f0       	breq	.+12     	; 0x390 <FSM_run+0x64>
     384:	f9 cf       	rjmp	.-14     	; 0x378 <FSM_run+0x4c>
			case ST_INIT:
				FSM_system_init();
     386:	0e 94 8f 01 	call	0x31e	; 0x31e <FSM_system_init>
				currentState = ST_ACTIVE;
     38a:	10 93 04 04 	sts	0x0404, r17	; 0x800404 <currentState>
				break;
     38e:	f2 cf       	rjmp	.-28     	; 0x374 <FSM_run+0x48>
			case ST_ACTIVE:
				#ifdef LORA_NODE
				//if (!lora_joined_flag){wake_up_flag = 0; _delay_ms(180000); lora_join_OTAA();}
				#endif
				//puts("Active");
				if (wake_up_flag){
     390:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <wake_up_flag>
     394:	88 23       	and	r24, r24
     396:	09 f4       	brne	.+2      	; 0x39a <FSM_run+0x6e>
     398:	78 c0       	rjmp	.+240    	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
					wake_up_flag = 0;
     39a:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <wake_up_flag>
					board1.ina219.bus_voltage_avg	+= INA219_readBusVoltageReg();
     39e:	0e 94 94 03 	call	0x728	; 0x728 <INA219_readBusVoltageReg>
     3a2:	09 2e       	mov	r0, r25
     3a4:	00 0c       	add	r0, r0
     3a6:	aa 0b       	sbc	r26, r26
     3a8:	bb 0b       	sbc	r27, r27
     3aa:	c8 0e       	add	r12, r24
     3ac:	d9 1e       	adc	r13, r25
     3ae:	ea 1e       	adc	r14, r26
     3b0:	fb 1e       	adc	r15, r27
					board1.ina219.current_avg		+= INA219_readCurrentReg();
     3b2:	0e 94 b6 03 	call	0x76c	; 0x76c <INA219_readCurrentReg>
     3b6:	88 0e       	add	r8, r24
     3b8:	99 1e       	adc	r9, r25
     3ba:	a1 1c       	adc	r10, r1
     3bc:	b1 1c       	adc	r11, r1
					board1.batteryLevel = board_get_battery_level();
     3be:	0e 94 63 01 	call	0x2c6	; 0x2c6 <board_get_battery_level>
     3c2:	8f 83       	std	Y+7, r24	; 0x07
					if(!(current_time%SAMPLE_SIZE)){
     3c4:	60 91 ff 03 	lds	r22, 0x03FF	; 0x8003ff <current_time>
     3c8:	70 91 00 04 	lds	r23, 0x0400	; 0x800400 <current_time+0x1>
     3cc:	80 91 01 04 	lds	r24, 0x0401	; 0x800401 <current_time+0x2>
     3d0:	90 91 02 04 	lds	r25, 0x0402	; 0x800402 <current_time+0x3>
     3d4:	a3 01       	movw	r20, r6
     3d6:	92 01       	movw	r18, r4
     3d8:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__udivmodsi4>
     3dc:	67 2b       	or	r22, r23
     3de:	68 2b       	or	r22, r24
     3e0:	69 2b       	or	r22, r25
     3e2:	09 f0       	breq	.+2      	; 0x3e6 <FSM_run+0xba>
     3e4:	52 c0       	rjmp	.+164    	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
						if (frame_counter == 0xFF) frame_counter = 0;
     3e6:	80 91 fe 03 	lds	r24, 0x03FE	; 0x8003fe <__data_end>
     3ea:	8f 3f       	cpi	r24, 0xFF	; 255
     3ec:	11 f4       	brne	.+4      	; 0x3f2 <FSM_run+0xc6>
     3ee:	10 92 fe 03 	sts	0x03FE, r1	; 0x8003fe <__data_end>
						board1.frame_counter = frame_counter++;
     3f2:	80 91 fe 03 	lds	r24, 0x03FE	; 0x8003fe <__data_end>
     3f6:	91 e0       	ldi	r25, 0x01	; 1
     3f8:	98 0f       	add	r25, r24
     3fa:	90 93 fe 03 	sts	0x03FE, r25	; 0x8003fe <__data_end>
     3fe:	8a 83       	std	Y+2, r24	; 0x02
						board1.ina219.bus_voltage	= board1.ina219.bus_voltage_avg / SAMPLE_SIZE;
     400:	c7 01       	movw	r24, r14
     402:	b6 01       	movw	r22, r12
     404:	a3 01       	movw	r20, r6
     406:	92 01       	movw	r18, r4
     408:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__udivmodsi4>
     40c:	39 87       	std	Y+9, r19	; 0x09
     40e:	28 87       	std	Y+8, r18	; 0x08
						board1.ina219.current		= board1.ina219.current_avg / SAMPLE_SIZE;
     410:	c5 01       	movw	r24, r10
     412:	b4 01       	movw	r22, r8
     414:	a3 01       	movw	r20, r6
     416:	92 01       	movw	r18, r4
     418:	0e 94 5c 09 	call	0x12b8	; 0x12b8 <__udivmodsi4>
     41c:	3b 87       	std	Y+11, r19	; 0x0b
     41e:	2a 87       	std	Y+10, r18	; 0x0a
						board1.time_stamp = current_time;
     420:	80 91 ff 03 	lds	r24, 0x03FF	; 0x8003ff <current_time>
     424:	90 91 00 04 	lds	r25, 0x0400	; 0x800400 <current_time+0x1>
     428:	a0 91 01 04 	lds	r26, 0x0401	; 0x800401 <current_time+0x2>
     42c:	b0 91 02 04 	lds	r27, 0x0402	; 0x800402 <current_time+0x3>
     430:	8b 83       	std	Y+3, r24	; 0x03
     432:	9c 83       	std	Y+4, r25	; 0x04
     434:	ad 83       	std	Y+5, r26	; 0x05
     436:	be 83       	std	Y+6, r27	; 0x06
						board1.msg = hex_encode(board1);
     438:	cc 86       	std	Y+12, r12	; 0x0c
     43a:	dd 86       	std	Y+13, r13	; 0x0d
     43c:	ee 86       	std	Y+14, r14	; 0x0e
     43e:	ff 86       	std	Y+15, r15	; 0x0f
     440:	88 8a       	std	Y+16, r8	; 0x10
     442:	99 8a       	std	Y+17, r9	; 0x11
     444:	aa 8a       	std	Y+18, r10	; 0x12
     446:	bb 8a       	std	Y+19, r11	; 0x13
     448:	8d b7       	in	r24, 0x3d	; 61
     44a:	9e b7       	in	r25, 0x3e	; 62
     44c:	45 97       	sbiw	r24, 0x15	; 21
     44e:	0f b6       	in	r0, 0x3f	; 63
     450:	f8 94       	cli
     452:	9e bf       	out	0x3e, r25	; 62
     454:	0f be       	out	0x3f, r0	; 63
     456:	8d bf       	out	0x3d, r24	; 61
     458:	ad b7       	in	r26, 0x3d	; 61
     45a:	be b7       	in	r27, 0x3e	; 62
     45c:	11 96       	adiw	r26, 0x01	; 1
     45e:	85 e1       	ldi	r24, 0x15	; 21
     460:	fe 01       	movw	r30, r28
     462:	31 96       	adiw	r30, 0x01	; 1
     464:	01 90       	ld	r0, Z+
     466:	0d 92       	st	X+, r0
     468:	8a 95       	dec	r24
     46a:	e1 f7       	brne	.-8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     46c:	0e 94 ae 05 	call	0xb5c	; 0xb5c <hex_encode>
     470:	9d 8b       	std	Y+21, r25	; 0x15
     472:	8c 8b       	std	Y+20, r24	; 0x14
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
							//puts(board1.msg);
						#else 
							lora_transmit(board1.msg);
						#endif
						board1.ina219.bus_voltage_avg = 0;
						board1.ina219.current_avg = 0;
     47e:	81 2c       	mov	r8, r1
     480:	91 2c       	mov	r9, r1
     482:	54 01       	movw	r10, r8
							//USART_putstring2("500000FF5411");
							//puts(board1.msg);
						#else 
							lora_transmit(board1.msg);
						#endif
						board1.ina219.bus_voltage_avg = 0;
     484:	c1 2c       	mov	r12, r1
     486:	d1 2c       	mov	r13, r1
     488:	76 01       	movw	r14, r12
						board1.ina219.current_avg = 0;
					}
				}
				currentState = ST_SLEEP;
     48a:	00 93 04 04 	sts	0x0404, r16	; 0x800404 <currentState>
				break;
     48e:	72 cf       	rjmp	.-284    	; 0x374 <FSM_run+0x48>
			
			case ST_SLEEP:
				puts("Going to sleep");
     490:	8b e7       	ldi	r24, 0x7B	; 123
     492:	91 e0       	ldi	r25, 0x01	; 1
     494:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     498:	8f e9       	ldi	r24, 0x9F	; 159
     49a:	9f e0       	ldi	r25, 0x0F	; 15
     49c:	01 97       	sbiw	r24, 0x01	; 1
     49e:	f1 f7       	brne	.-4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     4a2:	00 00       	nop
				_delay_ms(2); // Delay to allow a print to be written over serial before sleep
				enter_powerSave();
     4a4:	0e 94 91 05 	call	0xb22	; 0xb22 <enter_powerSave>
				puts("Awake");
     4a8:	8a e8       	ldi	r24, 0x8A	; 138
     4aa:	91 e0       	ldi	r25, 0x01	; 1
     4ac:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
				#ifndef TIMER2
				//_delay_ms(1000);
				#endif
				currentState = ST_ACTIVE;
     4b0:	10 93 04 04 	sts	0x0404, r17	; 0x800404 <currentState>
				break;
     4b4:	5f cf       	rjmp	.-322    	; 0x374 <FSM_run+0x48>

000004b6 <__vector_2>:
	}
}


ISR (INT1_vect)          //External interrupt_zero ISR
{
     4b6:	1f 92       	push	r1
     4b8:	0f 92       	push	r0
     4ba:	0f b6       	in	r0, 0x3f	; 63
     4bc:	0f 92       	push	r0
     4be:	11 24       	eor	r1, r1
     4c0:	2f 93       	push	r18
     4c2:	3f 93       	push	r19
     4c4:	4f 93       	push	r20
     4c6:	5f 93       	push	r21
     4c8:	6f 93       	push	r22
     4ca:	7f 93       	push	r23
     4cc:	8f 93       	push	r24
     4ce:	9f 93       	push	r25
     4d0:	af 93       	push	r26
     4d2:	bf 93       	push	r27
     4d4:	ef 93       	push	r30
     4d6:	ff 93       	push	r31
	puts("btn press");
     4d8:	80 e9       	ldi	r24, 0x90	; 144
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
	lora_transmit("11FF");
     4e0:	8a e9       	ldi	r24, 0x9A	; 154
     4e2:	91 e0       	ldi	r25, 0x01	; 1
     4e4:	0e 94 cf 04 	call	0x99e	; 0x99e <lora_transmit>
}
     4e8:	ff 91       	pop	r31
     4ea:	ef 91       	pop	r30
     4ec:	bf 91       	pop	r27
     4ee:	af 91       	pop	r26
     4f0:	9f 91       	pop	r25
     4f2:	8f 91       	pop	r24
     4f4:	7f 91       	pop	r23
     4f6:	6f 91       	pop	r22
     4f8:	5f 91       	pop	r21
     4fa:	4f 91       	pop	r20
     4fc:	3f 91       	pop	r19
     4fe:	2f 91       	pop	r18
     500:	0f 90       	pop	r0
     502:	0f be       	out	0x3f, r0	; 63
     504:	0f 90       	pop	r0
     506:	1f 90       	pop	r1
     508:	18 95       	reti

0000050a <__vector_47>:

ISR (USART2_RX_vect){
     50a:	1f 92       	push	r1
     50c:	0f 92       	push	r0
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	0f 92       	push	r0
     512:	11 24       	eor	r1, r1
     514:	2f 93       	push	r18
     516:	3f 93       	push	r19
     518:	4f 93       	push	r20
     51a:	5f 93       	push	r21
     51c:	6f 93       	push	r22
     51e:	7f 93       	push	r23
     520:	8f 93       	push	r24
     522:	9f 93       	push	r25
     524:	af 93       	push	r26
     526:	bf 93       	push	r27
     528:	ef 93       	push	r30
     52a:	ff 93       	push	r31
	USART_receiveString2();
     52c:	0e 94 71 05 	call	0xae2	; 0xae2 <USART_receiveString2>
}
     530:	ff 91       	pop	r31
     532:	ef 91       	pop	r30
     534:	bf 91       	pop	r27
     536:	af 91       	pop	r26
     538:	9f 91       	pop	r25
     53a:	8f 91       	pop	r24
     53c:	7f 91       	pop	r23
     53e:	6f 91       	pop	r22
     540:	5f 91       	pop	r21
     542:	4f 91       	pop	r20
     544:	3f 91       	pop	r19
     546:	2f 91       	pop	r18
     548:	0f 90       	pop	r0
     54a:	0f be       	out	0x3f, r0	; 63
     54c:	0f 90       	pop	r0
     54e:	1f 90       	pop	r1
     550:	18 95       	reti

00000552 <__vector_11>:

ISR(TIMER2_OVF_vect){
     552:	1f 92       	push	r1
     554:	0f 92       	push	r0
     556:	0f b6       	in	r0, 0x3f	; 63
     558:	0f 92       	push	r0
     55a:	11 24       	eor	r1, r1
     55c:	8f 93       	push	r24
     55e:	9f 93       	push	r25
     560:	af 93       	push	r26
     562:	bf 93       	push	r27
	current_time ++;
     564:	80 91 ff 03 	lds	r24, 0x03FF	; 0x8003ff <current_time>
     568:	90 91 00 04 	lds	r25, 0x0400	; 0x800400 <current_time+0x1>
     56c:	a0 91 01 04 	lds	r26, 0x0401	; 0x800401 <current_time+0x2>
     570:	b0 91 02 04 	lds	r27, 0x0402	; 0x800402 <current_time+0x3>
     574:	01 96       	adiw	r24, 0x01	; 1
     576:	a1 1d       	adc	r26, r1
     578:	b1 1d       	adc	r27, r1
     57a:	80 93 ff 03 	sts	0x03FF, r24	; 0x8003ff <current_time>
     57e:	90 93 00 04 	sts	0x0400, r25	; 0x800400 <current_time+0x1>
     582:	a0 93 01 04 	sts	0x0401, r26	; 0x800401 <current_time+0x2>
     586:	b0 93 02 04 	sts	0x0402, r27	; 0x800402 <current_time+0x3>
	wake_up_flag = 1;
     58a:	81 e0       	ldi	r24, 0x01	; 1
     58c:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <wake_up_flag>
     590:	bf 91       	pop	r27
     592:	af 91       	pop	r26
     594:	9f 91       	pop	r25
     596:	8f 91       	pop	r24
     598:	0f 90       	pop	r0
     59a:	0f be       	out	0x3f, r0	; 63
     59c:	0f 90       	pop	r0
     59e:	1f 90       	pop	r1
     5a0:	18 95       	reti

000005a2 <i2c_init>:
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address){
    return i2c_start( address );

}
     5a2:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     5a6:	80 e2       	ldi	r24, 0x20	; 32
     5a8:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__DATA_REGION_ORIGIN__+0x78>
     5ac:	08 95       	ret

000005ae <i2c_sync>:
     5ae:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     5b2:	88 23       	and	r24, r24
     5b4:	bc f0       	brlt	.+46     	; 0x5e4 <i2c_sync+0x36>
     5b6:	24 e6       	ldi	r18, 0x64	; 100
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	ec ed       	ldi	r30, 0xDC	; 220
     5bc:	f0 e0       	ldi	r31, 0x00	; 0
     5be:	82 e0       	ldi	r24, 0x02	; 2
     5c0:	8a 95       	dec	r24
     5c2:	f1 f7       	brne	.-4      	; 0x5c0 <i2c_sync+0x12>
     5c4:	00 c0       	rjmp	.+0      	; 0x5c6 <i2c_sync+0x18>
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	31 09       	sbc	r19, r1
     5ca:	80 81       	ld	r24, Z
     5cc:	88 23       	and	r24, r24
     5ce:	24 f0       	brlt	.+8      	; 0x5d8 <i2c_sync+0x2a>
     5d0:	21 15       	cp	r18, r1
     5d2:	31 05       	cpc	r19, r1
     5d4:	a1 f7       	brne	.-24     	; 0x5be <i2c_sync+0x10>
     5d6:	03 c0       	rjmp	.+6      	; 0x5de <i2c_sync+0x30>
     5d8:	21 15       	cp	r18, r1
     5da:	31 05       	cpc	r19, r1
     5dc:	29 f4       	brne	.+10     	; 0x5e8 <i2c_sync+0x3a>
     5de:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <i2c_sync+0x3a>
     5e4:	24 e6       	ldi	r18, 0x64	; 100
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	23 2b       	or	r18, r19
     5ec:	09 f4       	brne	.+2      	; 0x5f0 <i2c_sync+0x42>
     5ee:	80 e0       	ldi	r24, 0x00	; 0
     5f0:	08 95       	ret

000005f2 <i2c_waitStop>:
     5f2:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     5f6:	84 ff       	sbrs	r24, 4
     5f8:	17 c0       	rjmp	.+46     	; 0x628 <i2c_waitStop+0x36>
     5fa:	24 e6       	ldi	r18, 0x64	; 100
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	ec ed       	ldi	r30, 0xDC	; 220
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	82 e0       	ldi	r24, 0x02	; 2
     604:	8a 95       	dec	r24
     606:	f1 f7       	brne	.-4      	; 0x604 <i2c_waitStop+0x12>
     608:	00 c0       	rjmp	.+0      	; 0x60a <i2c_waitStop+0x18>
     60a:	21 50       	subi	r18, 0x01	; 1
     60c:	31 09       	sbc	r19, r1
     60e:	80 81       	ld	r24, Z
     610:	84 ff       	sbrs	r24, 4
     612:	04 c0       	rjmp	.+8      	; 0x61c <i2c_waitStop+0x2a>
     614:	21 15       	cp	r18, r1
     616:	31 05       	cpc	r19, r1
     618:	a1 f7       	brne	.-24     	; 0x602 <i2c_waitStop+0x10>
     61a:	03 c0       	rjmp	.+6      	; 0x622 <i2c_waitStop+0x30>
     61c:	21 15       	cp	r18, r1
     61e:	31 05       	cpc	r19, r1
     620:	29 f4       	brne	.+10     	; 0x62c <i2c_waitStop+0x3a>
     622:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     626:	02 c0       	rjmp	.+4      	; 0x62c <i2c_waitStop+0x3a>
     628:	24 e6       	ldi	r18, 0x64	; 100
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	81 e0       	ldi	r24, 0x01	; 1
     62e:	23 2b       	or	r18, r19
     630:	09 f4       	brne	.+2      	; 0x634 <i2c_waitStop+0x42>
     632:	80 e0       	ldi	r24, 0x00	; 0
     634:	08 95       	ret

00000636 <i2c_start>:
     636:	cf 93       	push	r28
     638:	c8 2f       	mov	r28, r24
     63a:	84 ea       	ldi	r24, 0xA4	; 164
     63c:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     640:	0e 94 d7 02 	call	0x5ae	; 0x5ae <i2c_sync>
     644:	88 23       	and	r24, r24
     646:	e9 f0       	breq	.+58     	; 0x682 <i2c_start+0x4c>
     648:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     64c:	88 7f       	andi	r24, 0xF8	; 248
     64e:	88 30       	cpi	r24, 0x08	; 8
     650:	11 f0       	breq	.+4      	; 0x656 <i2c_start+0x20>
     652:	80 31       	cpi	r24, 0x10	; 16
     654:	99 f4       	brne	.+38     	; 0x67c <i2c_start+0x46>
     656:	c0 93 db 00 	sts	0x00DB, r28	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
     65a:	84 e8       	ldi	r24, 0x84	; 132
     65c:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     660:	0e 94 d7 02 	call	0x5ae	; 0x5ae <i2c_sync>
     664:	88 23       	and	r24, r24
     666:	69 f0       	breq	.+26     	; 0x682 <i2c_start+0x4c>
     668:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     66c:	98 7f       	andi	r25, 0xF8	; 248
     66e:	98 31       	cpi	r25, 0x18	; 24
     670:	39 f0       	breq	.+14     	; 0x680 <i2c_start+0x4a>
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	90 34       	cpi	r25, 0x40	; 64
     676:	29 f4       	brne	.+10     	; 0x682 <i2c_start+0x4c>
     678:	80 e0       	ldi	r24, 0x00	; 0
     67a:	03 c0       	rjmp	.+6      	; 0x682 <i2c_start+0x4c>
     67c:	81 e0       	ldi	r24, 0x01	; 1
     67e:	01 c0       	rjmp	.+2      	; 0x682 <i2c_start+0x4c>
     680:	80 e0       	ldi	r24, 0x00	; 0
     682:	cf 91       	pop	r28
     684:	08 95       	ret

00000686 <i2c_stop>:
/*************************************************************************
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void){
    /* send stop condition */
	TWCR1 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     686:	84 e9       	ldi	r24, 0x94	; 148
     688:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
	
	// wait until stop condition is executed and bus released
	i2c_waitStop(); 
     68c:	0e 94 f9 02 	call	0x5f2	; 0x5f2 <i2c_waitStop>
     690:	08 95       	ret

00000692 <i2c_write>:
*************************************************************************/
unsigned char i2c_write( unsigned char data ){	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR1 = data;
     692:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
	TWCR1 = (1<<TWINT) | (1<<TWEN);
     696:	84 e8       	ldi	r24, 0x84	; 132
     698:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>

	// wait until transmission completed
	i2c_sync();
     69c:	0e 94 d7 02 	call	0x5ae	; 0x5ae <i2c_sync>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     6a0:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     6a4:	98 7f       	andi	r25, 0xF8	; 248
     6a6:	81 e0       	ldi	r24, 0x01	; 1
     6a8:	98 32       	cpi	r25, 0x28	; 40
     6aa:	09 f4       	brne	.+2      	; 0x6ae <i2c_write+0x1c>
     6ac:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}
     6ae:	08 95       	ret

000006b0 <i2c_readAck>:
 Read one byte from the I2C device, request more data from device 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void){
	TWCR1 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     6b0:	84 ec       	ldi	r24, 0xC4	; 196
     6b2:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
	i2c_sync();    
     6b6:	0e 94 d7 02 	call	0x5ae	; 0x5ae <i2c_sync>
	return TWDR1;
     6ba:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
}
     6be:	08 95       	ret

000006c0 <i2c_readNak>:
 Read one byte from the I2C device, read is followed by a stop condition 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void){
	TWCR1 = (1<<TWINT) | (1<<TWEN);
     6c0:	84 e8       	ldi	r24, 0x84	; 132
     6c2:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
	i2c_sync(); 
     6c6:	0e 94 d7 02 	call	0x5ae	; 0x5ae <i2c_sync>
	return TWDR1;
     6ca:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
}
     6ce:	08 95       	ret

000006d0 <i2c_read2ByteRegister>:
  
  Input:    device address, register address, buffer for storage
  Return:   0 write successful 
            1 write failed
*************************************************************************/
uint8_t i2c_read2ByteRegister(uint8_t adr, uint8_t regAddr, uint8_t *data){
     6d0:	ff 92       	push	r15
     6d2:	0f 93       	push	r16
     6d4:	1f 93       	push	r17
     6d6:	cf 93       	push	r28
     6d8:	df 93       	push	r29
     6da:	d8 2f       	mov	r29, r24
     6dc:	f6 2e       	mov	r15, r22
     6de:	8a 01       	movw	r16, r20
	uint8_t error = 0;
	error += i2c_start(adr | I2C_WRITE);
     6e0:	0e 94 1b 03 	call	0x636	; 0x636 <i2c_start>
     6e4:	c8 2f       	mov	r28, r24
	error += i2c_write(regAddr);
     6e6:	8f 2d       	mov	r24, r15
     6e8:	0e 94 49 03 	call	0x692	; 0x692 <i2c_write>
     6ec:	c8 0f       	add	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     6ee:	8a e1       	ldi	r24, 0x1A	; 26
     6f0:	8a 95       	dec	r24
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <i2c_read2ByteRegister+0x20>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <i2c_read2ByteRegister+0x26>
	_delay_us(10);
	//read data
	error += i2c_start(adr | I2C_READ);
     6f6:	8d 2f       	mov	r24, r29
     6f8:	81 60       	ori	r24, 0x01	; 1
     6fa:	0e 94 1b 03 	call	0x636	; 0x636 <i2c_start>
     6fe:	c8 0f       	add	r28, r24
	data[1] = i2c_readAck();
     700:	0e 94 58 03 	call	0x6b0	; 0x6b0 <i2c_readAck>
     704:	f8 01       	movw	r30, r16
     706:	81 83       	std	Z+1, r24	; 0x01
	data[0] = i2c_readNak();
     708:	0e 94 60 03 	call	0x6c0	; 0x6c0 <i2c_readNak>
     70c:	f8 01       	movw	r30, r16
     70e:	80 83       	st	Z, r24
	i2c_stop();
     710:	0e 94 43 03 	call	0x686	; 0x686 <i2c_stop>
     714:	81 e0       	ldi	r24, 0x01	; 1
     716:	c1 11       	cpse	r28, r1
     718:	01 c0       	rjmp	.+2      	; 0x71c <i2c_read2ByteRegister+0x4c>
     71a:	80 e0       	ldi	r24, 0x00	; 0
	
	if (error) return 1;
	else return 0;
}
     71c:	df 91       	pop	r29
     71e:	cf 91       	pop	r28
     720:	1f 91       	pop	r17
     722:	0f 91       	pop	r16
     724:	ff 90       	pop	r15
     726:	08 95       	ret

00000728 <INA219_readBusVoltageReg>:

uint16_t INA219_readShuntVoltageReg(){ // Not operational
	uint8_t value[2];
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_SHUNTVOLTAGE, value)) return 1;
	return ((value[1] << 8) | value[0]);
}
     728:	cf 93       	push	r28
     72a:	df 93       	push	r29
     72c:	00 d0       	rcall	.+0      	; 0x72e <INA219_readBusVoltageReg+0x6>
     72e:	cd b7       	in	r28, 0x3d	; 61
     730:	de b7       	in	r29, 0x3e	; 62
     732:	ae 01       	movw	r20, r28
     734:	4f 5f       	subi	r20, 0xFF	; 255
     736:	5f 4f       	sbci	r21, 0xFF	; 255
     738:	62 e0       	ldi	r22, 0x02	; 2
     73a:	80 e8       	ldi	r24, 0x80	; 128
     73c:	0e 94 68 03 	call	0x6d0	; 0x6d0 <i2c_read2ByteRegister>
     740:	81 11       	cpse	r24, r1
     742:	0d c0       	rjmp	.+26     	; 0x75e <INA219_readBusVoltageReg+0x36>
     744:	8a 81       	ldd	r24, Y+2	; 0x02
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	98 2f       	mov	r25, r24
     74a:	88 27       	eor	r24, r24
     74c:	29 81       	ldd	r18, Y+1	; 0x01
     74e:	82 2b       	or	r24, r18
     750:	95 95       	asr	r25
     752:	87 95       	ror	r24
     754:	95 95       	asr	r25
     756:	87 95       	ror	r24
     758:	95 95       	asr	r25
     75a:	87 95       	ror	r24
     75c:	02 c0       	rjmp	.+4      	; 0x762 <INA219_readBusVoltageReg+0x3a>
     75e:	8f ef       	ldi	r24, 0xFF	; 255
     760:	9f ef       	ldi	r25, 0xFF	; 255
     762:	0f 90       	pop	r0
     764:	0f 90       	pop	r0
     766:	df 91       	pop	r29
     768:	cf 91       	pop	r28
     76a:	08 95       	ret

0000076c <INA219_readCurrentReg>:
uint16_t INA219_readCurrentReg(){
     76c:	cf 93       	push	r28
     76e:	df 93       	push	r29
     770:	00 d0       	rcall	.+0      	; 0x772 <INA219_readCurrentReg+0x6>
     772:	cd b7       	in	r28, 0x3d	; 61
     774:	de b7       	in	r29, 0x3e	; 62
	uint8_t value[2];
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_CURRENT, value)) return -1;
     776:	ae 01       	movw	r20, r28
     778:	4f 5f       	subi	r20, 0xFF	; 255
     77a:	5f 4f       	sbci	r21, 0xFF	; 255
     77c:	64 e0       	ldi	r22, 0x04	; 4
     77e:	80 e8       	ldi	r24, 0x80	; 128
     780:	0e 94 68 03 	call	0x6d0	; 0x6d0 <i2c_read2ByteRegister>
     784:	81 11       	cpse	r24, r1
     786:	0d c0       	rjmp	.+26     	; 0x7a2 <INA219_readCurrentReg+0x36>
	uint16_t total = (value[1] << 8) | value[0];
     788:	2a 81       	ldd	r18, Y+2	; 0x02
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	32 2f       	mov	r19, r18
     78e:	22 27       	eor	r18, r18
     790:	89 81       	ldd	r24, Y+1	; 0x01
     792:	28 2b       	or	r18, r24
	if(total>0xAFC8) return 0x00;  // Remove possibility of corruption with a bug where total is above 0xFFAE with no connected source.	
     794:	29 3c       	cpi	r18, 0xC9	; 201
     796:	8f ea       	ldi	r24, 0xAF	; 175
     798:	38 07       	cpc	r19, r24
     79a:	30 f4       	brcc	.+12     	; 0x7a8 <INA219_readCurrentReg+0x3c>
	return total;
     79c:	82 2f       	mov	r24, r18
     79e:	93 2f       	mov	r25, r19
     7a0:	05 c0       	rjmp	.+10     	; 0x7ac <INA219_readCurrentReg+0x40>
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_SHUNTVOLTAGE, value)) return 1;
	return ((value[1] << 8) | value[0]);
}
uint16_t INA219_readCurrentReg(){
	uint8_t value[2];
	if (i2c_read2ByteRegister(INA219_ADDRESS, INA219_REG_CURRENT, value)) return -1;
     7a2:	8f ef       	ldi	r24, 0xFF	; 255
     7a4:	9f ef       	ldi	r25, 0xFF	; 255
     7a6:	02 c0       	rjmp	.+4      	; 0x7ac <INA219_readCurrentReg+0x40>
	uint16_t total = (value[1] << 8) | value[0];
	if(total>0xAFC8) return 0x00;  // Remove possibility of corruption with a bug where total is above 0xFFAE with no connected source.	
     7a8:	80 e0       	ldi	r24, 0x00	; 0
     7aa:	90 e0       	ldi	r25, 0x00	; 0
	return total;
}
     7ac:	0f 90       	pop	r0
     7ae:	0f 90       	pop	r0
     7b0:	df 91       	pop	r29
     7b2:	cf 91       	pop	r28
     7b4:	08 95       	ret

000007b6 <lora_send_command>:
		#endif	
	#endif
	
	return 0;
	puts("Init success");
}
     7b6:	0e 94 5a 05 	call	0xab4	; 0xab4 <USART_putstring0>
     7ba:	8d e0       	ldi	r24, 0x0D	; 13
     7bc:	0e 94 52 05 	call	0xaa4	; 0xaa4 <USART_transmit0>
     7c0:	8a e0       	ldi	r24, 0x0A	; 10
     7c2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <USART_transmit0>
     7c6:	08 95       	ret

000007c8 <lora_assert_response>:
     7c8:	cf 93       	push	r28
     7ca:	df 93       	push	r29
     7cc:	ec 01       	movw	r28, r24
     7ce:	42 e0       	ldi	r20, 0x02	; 2
     7d0:	50 e0       	ldi	r21, 0x00	; 0
     7d2:	6f ea       	ldi	r22, 0xAF	; 175
     7d4:	71 e0       	ldi	r23, 0x01	; 1
     7d6:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     7da:	89 2b       	or	r24, r25
     7dc:	09 f4       	brne	.+2      	; 0x7e0 <lora_assert_response+0x18>
     7de:	87 c0       	rjmp	.+270    	; 0x8ee <lora_assert_response+0x126>
     7e0:	48 e0       	ldi	r20, 0x08	; 8
     7e2:	50 e0       	ldi	r21, 0x00	; 0
     7e4:	6f e9       	ldi	r22, 0x9F	; 159
     7e6:	71 e0       	ldi	r23, 0x01	; 1
     7e8:	ce 01       	movw	r24, r28
     7ea:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     7ee:	89 2b       	or	r24, r25
     7f0:	09 f4       	brne	.+2      	; 0x7f4 <lora_assert_response+0x2c>
     7f2:	7f c0       	rjmp	.+254    	; 0x8f2 <lora_assert_response+0x12a>
     7f4:	49 e0       	ldi	r20, 0x09	; 9
     7f6:	50 e0       	ldi	r21, 0x00	; 0
     7f8:	68 ea       	ldi	r22, 0xA8	; 168
     7fa:	71 e0       	ldi	r23, 0x01	; 1
     7fc:	ce 01       	movw	r24, r28
     7fe:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     802:	89 2b       	or	r24, r25
     804:	09 f4       	brne	.+2      	; 0x808 <lora_assert_response+0x40>
     806:	77 c0       	rjmp	.+238    	; 0x8f6 <lora_assert_response+0x12e>
     808:	46 e0       	ldi	r20, 0x06	; 6
     80a:	50 e0       	ldi	r21, 0x00	; 0
     80c:	62 eb       	ldi	r22, 0xB2	; 178
     80e:	71 e0       	ldi	r23, 0x01	; 1
     810:	ce 01       	movw	r24, r28
     812:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     816:	89 2b       	or	r24, r25
     818:	09 f4       	brne	.+2      	; 0x81c <lora_assert_response+0x54>
     81a:	6f c0       	rjmp	.+222    	; 0x8fa <lora_assert_response+0x132>
     81c:	4d e0       	ldi	r20, 0x0D	; 13
     81e:	50 e0       	ldi	r21, 0x00	; 0
     820:	69 eb       	ldi	r22, 0xB9	; 185
     822:	71 e0       	ldi	r23, 0x01	; 1
     824:	ce 01       	movw	r24, r28
     826:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     82a:	89 2b       	or	r24, r25
     82c:	09 f4       	brne	.+2      	; 0x830 <lora_assert_response+0x68>
     82e:	67 c0       	rjmp	.+206    	; 0x8fe <lora_assert_response+0x136>
     830:	4c e0       	ldi	r20, 0x0C	; 12
     832:	50 e0       	ldi	r21, 0x00	; 0
     834:	67 ec       	ldi	r22, 0xC7	; 199
     836:	71 e0       	ldi	r23, 0x01	; 1
     838:	ce 01       	movw	r24, r28
     83a:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     83e:	89 2b       	or	r24, r25
     840:	09 f4       	brne	.+2      	; 0x844 <lora_assert_response+0x7c>
     842:	5f c0       	rjmp	.+190    	; 0x902 <__stack+0x3>
     844:	46 e0       	ldi	r20, 0x06	; 6
     846:	50 e0       	ldi	r21, 0x00	; 0
     848:	64 ed       	ldi	r22, 0xD4	; 212
     84a:	71 e0       	ldi	r23, 0x01	; 1
     84c:	ce 01       	movw	r24, r28
     84e:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     852:	89 2b       	or	r24, r25
     854:	09 f4       	brne	.+2      	; 0x858 <lora_assert_response+0x90>
     856:	57 c0       	rjmp	.+174    	; 0x906 <__stack+0x7>
     858:	44 e0       	ldi	r20, 0x04	; 4
     85a:	50 e0       	ldi	r21, 0x00	; 0
     85c:	6b ed       	ldi	r22, 0xDB	; 219
     85e:	71 e0       	ldi	r23, 0x01	; 1
     860:	ce 01       	movw	r24, r28
     862:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     866:	89 2b       	or	r24, r25
     868:	09 f4       	brne	.+2      	; 0x86c <lora_assert_response+0xa4>
     86a:	4f c0       	rjmp	.+158    	; 0x90a <__stack+0xb>
     86c:	4a e0       	ldi	r20, 0x0A	; 10
     86e:	50 e0       	ldi	r21, 0x00	; 0
     870:	60 ee       	ldi	r22, 0xE0	; 224
     872:	71 e0       	ldi	r23, 0x01	; 1
     874:	ce 01       	movw	r24, r28
     876:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     87a:	89 2b       	or	r24, r25
     87c:	09 f4       	brne	.+2      	; 0x880 <lora_assert_response+0xb8>
     87e:	47 c0       	rjmp	.+142    	; 0x90e <__stack+0xf>
     880:	4d e0       	ldi	r20, 0x0D	; 13
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	6b ee       	ldi	r22, 0xEB	; 235
     886:	71 e0       	ldi	r23, 0x01	; 1
     888:	ce 01       	movw	r24, r28
     88a:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     88e:	89 2b       	or	r24, r25
     890:	09 f4       	brne	.+2      	; 0x894 <lora_assert_response+0xcc>
     892:	3f c0       	rjmp	.+126    	; 0x912 <__stack+0x13>
     894:	4a e0       	ldi	r20, 0x0A	; 10
     896:	50 e0       	ldi	r21, 0x00	; 0
     898:	69 ef       	ldi	r22, 0xF9	; 249
     89a:	71 e0       	ldi	r23, 0x01	; 1
     89c:	ce 01       	movw	r24, r28
     89e:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     8a2:	89 2b       	or	r24, r25
     8a4:	c1 f1       	breq	.+112    	; 0x916 <__stack+0x17>
     8a6:	4f e1       	ldi	r20, 0x1F	; 31
     8a8:	50 e0       	ldi	r21, 0x00	; 0
     8aa:	64 e0       	ldi	r22, 0x04	; 4
     8ac:	72 e0       	ldi	r23, 0x02	; 2
     8ae:	ce 01       	movw	r24, r28
     8b0:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     8b4:	89 2b       	or	r24, r25
     8b6:	89 f1       	breq	.+98     	; 0x91a <__stack+0x1b>
     8b8:	40 e1       	ldi	r20, 0x10	; 16
     8ba:	50 e0       	ldi	r21, 0x00	; 0
     8bc:	64 e2       	ldi	r22, 0x24	; 36
     8be:	72 e0       	ldi	r23, 0x02	; 2
     8c0:	ce 01       	movw	r24, r28
     8c2:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     8c6:	89 2b       	or	r24, r25
     8c8:	51 f1       	breq	.+84     	; 0x91e <__stack+0x1f>
     8ca:	47 e0       	ldi	r20, 0x07	; 7
     8cc:	50 e0       	ldi	r21, 0x00	; 0
     8ce:	65 e3       	ldi	r22, 0x35	; 53
     8d0:	72 e0       	ldi	r23, 0x02	; 2
     8d2:	ce 01       	movw	r24, r28
     8d4:	0e 94 46 0c 	call	0x188c	; 0x188c <strncmp>
     8d8:	89 2b       	or	r24, r25
     8da:	19 f1       	breq	.+70     	; 0x922 <__stack+0x23>
     8dc:	ce 01       	movw	r24, r28
     8de:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
     8e2:	d0 93 24 04 	sts	0x0424, r29	; 0x800424 <hweui+0x1>
     8e6:	c0 93 23 04 	sts	0x0423, r28	; 0x800423 <hweui>
     8ea:	8f ef       	ldi	r24, 0xFF	; 255
     8ec:	1b c0       	rjmp	.+54     	; 0x924 <__stack+0x25>
     8ee:	80 e0       	ldi	r24, 0x00	; 0
     8f0:	19 c0       	rjmp	.+50     	; 0x924 <__stack+0x25>
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	17 c0       	rjmp	.+46     	; 0x924 <__stack+0x25>
     8f6:	80 e1       	ldi	r24, 0x10	; 16
     8f8:	15 c0       	rjmp	.+42     	; 0x924 <__stack+0x25>
     8fa:	8a e0       	ldi	r24, 0x0A	; 10
     8fc:	13 c0       	rjmp	.+38     	; 0x924 <__stack+0x25>
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	11 c0       	rjmp	.+34     	; 0x924 <__stack+0x25>
     902:	82 e0       	ldi	r24, 0x02	; 2
     904:	0f c0       	rjmp	.+30     	; 0x924 <__stack+0x25>
     906:	83 e0       	ldi	r24, 0x03	; 3
     908:	0d c0       	rjmp	.+26     	; 0x924 <__stack+0x25>
     90a:	84 e0       	ldi	r24, 0x04	; 4
     90c:	0b c0       	rjmp	.+22     	; 0x924 <__stack+0x25>
     90e:	85 e0       	ldi	r24, 0x05	; 5
     910:	09 c0       	rjmp	.+18     	; 0x924 <__stack+0x25>
     912:	86 e0       	ldi	r24, 0x06	; 6
     914:	07 c0       	rjmp	.+14     	; 0x924 <__stack+0x25>
     916:	87 e0       	ldi	r24, 0x07	; 7
     918:	05 c0       	rjmp	.+10     	; 0x924 <__stack+0x25>
     91a:	88 e0       	ldi	r24, 0x08	; 8
     91c:	03 c0       	rjmp	.+6      	; 0x924 <__stack+0x25>
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	01 c0       	rjmp	.+2      	; 0x924 <__stack+0x25>
     922:	8d e0       	ldi	r24, 0x0D	; 13
     924:	df 91       	pop	r29
     926:	cf 91       	pop	r28
     928:	08 95       	ret

0000092a <lora_receive_response>:
     92a:	ef 92       	push	r14
     92c:	ff 92       	push	r15
     92e:	0f 93       	push	r16
     930:	1f 93       	push	r17
     932:	cf 93       	push	r28
     934:	df 93       	push	r29
     936:	cd b7       	in	r28, 0x3d	; 61
     938:	de b7       	in	r29, 0x3e	; 62
     93a:	ca 5f       	subi	r28, 0xFA	; 250
     93c:	d1 09       	sbc	r29, r1
     93e:	0f b6       	in	r0, 0x3f	; 63
     940:	f8 94       	cli
     942:	de bf       	out	0x3e, r29	; 62
     944:	0f be       	out	0x3f, r0	; 63
     946:	cd bf       	out	0x3d, r28	; 61
     948:	ce 01       	movw	r24, r28
     94a:	01 96       	adiw	r24, 0x01	; 1
     94c:	7c 01       	movw	r14, r24
     94e:	00 e0       	ldi	r16, 0x00	; 0
     950:	10 e0       	ldi	r17, 0x00	; 0
     952:	0e 94 4a 05 	call	0xa94	; 0xa94 <USART_receive0>
     956:	8d 30       	cpi	r24, 0x0D	; 13
     958:	71 f4       	brne	.+28     	; 0x976 <lora_receive_response+0x4c>
     95a:	0e 94 4a 05 	call	0xa94	; 0xa94 <USART_receive0>
     95e:	e1 e0       	ldi	r30, 0x01	; 1
     960:	f0 e0       	ldi	r31, 0x00	; 0
     962:	ec 0f       	add	r30, r28
     964:	fd 1f       	adc	r31, r29
     966:	e0 0f       	add	r30, r16
     968:	f1 1f       	adc	r31, r17
     96a:	10 82       	st	Z, r1
     96c:	ce 01       	movw	r24, r28
     96e:	01 96       	adiw	r24, 0x01	; 1
     970:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <lora_assert_response>
     974:	06 c0       	rjmp	.+12     	; 0x982 <lora_receive_response+0x58>
     976:	f7 01       	movw	r30, r14
     978:	81 93       	st	Z+, r24
     97a:	7f 01       	movw	r14, r30
     97c:	0f 5f       	subi	r16, 0xFF	; 255
     97e:	1f 4f       	sbci	r17, 0xFF	; 255
     980:	e8 cf       	rjmp	.-48     	; 0x952 <lora_receive_response+0x28>
     982:	c6 50       	subi	r28, 0x06	; 6
     984:	df 4f       	sbci	r29, 0xFF	; 255
     986:	0f b6       	in	r0, 0x3f	; 63
     988:	f8 94       	cli
     98a:	de bf       	out	0x3e, r29	; 62
     98c:	0f be       	out	0x3f, r0	; 63
     98e:	cd bf       	out	0x3d, r28	; 61
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	1f 91       	pop	r17
     996:	0f 91       	pop	r16
     998:	ff 90       	pop	r15
     99a:	ef 90       	pop	r14
     99c:	08 95       	ret

0000099e <lora_transmit>:
uint8_t lora_transmit(const char *payload){
     99e:	cf 93       	push	r28
     9a0:	df 93       	push	r29
     9a2:	cd b7       	in	r28, 0x3d	; 61
     9a4:	de b7       	in	r29, 0x3e	; 62
     9a6:	c4 56       	subi	r28, 0x64	; 100
     9a8:	d1 09       	sbc	r29, r1
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	bc 01       	movw	r22, r24
	uint8_t err;
	char buf[100] = "mac tx uncnf 3 ";
     9b6:	90 e1       	ldi	r25, 0x10	; 16
     9b8:	ee e0       	ldi	r30, 0x0E	; 14
     9ba:	f1 e0       	ldi	r31, 0x01	; 1
     9bc:	de 01       	movw	r26, r28
     9be:	11 96       	adiw	r26, 0x01	; 1
     9c0:	01 90       	ld	r0, Z+
     9c2:	0d 92       	st	X+, r0
     9c4:	9a 95       	dec	r25
     9c6:	e1 f7       	brne	.-8      	; 0x9c0 <lora_transmit+0x22>
     9c8:	fe 01       	movw	r30, r28
     9ca:	71 96       	adiw	r30, 0x11	; 17
     9cc:	84 e5       	ldi	r24, 0x54	; 84
     9ce:	df 01       	movw	r26, r30
     9d0:	1d 92       	st	X+, r1
     9d2:	8a 95       	dec	r24
     9d4:	e9 f7       	brne	.-6      	; 0x9d0 <lora_transmit+0x32>
	strcat(buf, payload);
     9d6:	ce 01       	movw	r24, r28
     9d8:	01 96       	adiw	r24, 0x01	; 1
     9da:	0e 94 3b 0c 	call	0x1876	; 0x1876 <strcat>
	puts(buf);
     9de:	ce 01       	movw	r24, r28
     9e0:	01 96       	adiw	r24, 0x01	; 1
     9e2:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
	lora_send_command(buf);
     9e6:	ce 01       	movw	r24, r28
     9e8:	01 96       	adiw	r24, 0x01	; 1
     9ea:	0e 94 db 03 	call	0x7b6	; 0x7b6 <lora_send_command>
	err = lora_receive_response();
     9ee:	0e 94 95 04 	call	0x92a	; 0x92a <lora_receive_response>
	if (!err){
     9f2:	81 11       	cpse	r24, r1
     9f4:	0e c0       	rjmp	.+28     	; 0xa12 <lora_transmit+0x74>
		err = lora_receive_response();
     9f6:	0e 94 95 04 	call	0x92a	; 0x92a <lora_receive_response>
		printf("Transmit with code: %02x\n", err);
     9fa:	1f 92       	push	r1
     9fc:	8f 93       	push	r24
     9fe:	8d ef       	ldi	r24, 0xFD	; 253
     a00:	92 e0       	ldi	r25, 0x02	; 2
     a02:	9f 93       	push	r25
     a04:	8f 93       	push	r24
     a06:	0e 94 9b 0c 	call	0x1936	; 0x1936 <printf>
     a0a:	0f 90       	pop	r0
     a0c:	0f 90       	pop	r0
     a0e:	0f 90       	pop	r0
     a10:	0f 90       	pop	r0
	}
	return 0;
}
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	cc 59       	subi	r28, 0x9C	; 156
     a16:	df 4f       	sbci	r29, 0xFF	; 255
     a18:	0f b6       	in	r0, 0x3f	; 63
     a1a:	f8 94       	cli
     a1c:	de bf       	out	0x3e, r29	; 62
     a1e:	0f be       	out	0x3f, r0	; 63
     a20:	cd bf       	out	0x3d, r28	; 61
     a22:	df 91       	pop	r29
     a24:	cf 91       	pop	r28
     a26:	08 95       	ret

00000a28 <USART_transmit2>:
	for(; *string; ++string){
		USART_transmit2(*string);
	}
	//USART_transmit2(0x0D);
	USART_transmit2(0x0A);
}
     a28:	e0 ed       	ldi	r30, 0xD0	; 208
     a2a:	f0 e0       	ldi	r31, 0x00	; 0
     a2c:	90 81       	ld	r25, Z
     a2e:	95 ff       	sbrs	r25, 5
     a30:	fd cf       	rjmp	.-6      	; 0xa2c <USART_transmit2+0x4>
     a32:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__DATA_REGION_ORIGIN__+0x76>
     a36:	08 95       	ret

00000a38 <USART_TRANSMIT_printf>:
     a38:	cf 93       	push	r28
     a3a:	c8 2f       	mov	r28, r24
     a3c:	8a 30       	cpi	r24, 0x0A	; 10
     a3e:	19 f4       	brne	.+6      	; 0xa46 <USART_TRANSMIT_printf+0xe>
     a40:	8d e0       	ldi	r24, 0x0D	; 13
     a42:	0e 94 14 05 	call	0xa28	; 0xa28 <USART_transmit2>
     a46:	8c 2f       	mov	r24, r28
     a48:	0e 94 14 05 	call	0xa28	; 0xa28 <USART_transmit2>
     a4c:	80 e0       	ldi	r24, 0x00	; 0
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	cf 91       	pop	r28
     a52:	08 95       	ret

00000a54 <USART_init>:
     a54:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     a58:	93 e3       	ldi	r25, 0x33	; 51
     a5a:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     a5e:	88 e1       	ldi	r24, 0x18	; 24
     a60:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     a64:	e2 ec       	ldi	r30, 0xC2	; 194
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	80 81       	ld	r24, Z
     a6a:	86 60       	ori	r24, 0x06	; 6
     a6c:	80 83       	st	Z, r24
     a6e:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <__DATA_REGION_ORIGIN__+0x75>
     a72:	90 93 d4 00 	sts	0x00D4, r25	; 0x8000d4 <__DATA_REGION_ORIGIN__+0x74>
     a76:	88 e9       	ldi	r24, 0x98	; 152
     a78:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__DATA_REGION_ORIGIN__+0x71>
     a7c:	e2 ed       	ldi	r30, 0xD2	; 210
     a7e:	f0 e0       	ldi	r31, 0x00	; 0
     a80:	80 81       	ld	r24, Z
     a82:	86 60       	ori	r24, 0x06	; 6
     a84:	80 83       	st	Z, r24
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	91 e0       	ldi	r25, 0x01	; 1
     a8a:	90 93 24 05 	sts	0x0524, r25	; 0x800524 <__iob+0x3>
     a8e:	80 93 23 05 	sts	0x0523, r24	; 0x800523 <__iob+0x2>
     a92:	08 95       	ret

00000a94 <USART_receive0>:
     a94:	e0 ec       	ldi	r30, 0xC0	; 192
     a96:	f0 e0       	ldi	r31, 0x00	; 0
     a98:	80 81       	ld	r24, Z
     a9a:	88 23       	and	r24, r24
     a9c:	ec f7       	brge	.-6      	; 0xa98 <USART_receive0+0x4>
     a9e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     aa2:	08 95       	ret

00000aa4 <USART_transmit0>:
     aa4:	e0 ec       	ldi	r30, 0xC0	; 192
     aa6:	f0 e0       	ldi	r31, 0x00	; 0
     aa8:	90 81       	ld	r25, Z
     aaa:	95 ff       	sbrs	r25, 5
     aac:	fd cf       	rjmp	.-6      	; 0xaa8 <USART_transmit0+0x4>
     aae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     ab2:	08 95       	ret

00000ab4 <USART_putstring0>:
     ab4:	cf 93       	push	r28
     ab6:	df 93       	push	r29
     ab8:	ec 01       	movw	r28, r24
     aba:	88 81       	ld	r24, Y
     abc:	88 23       	and	r24, r24
     abe:	31 f0       	breq	.+12     	; 0xacc <USART_putstring0+0x18>
     ac0:	21 96       	adiw	r28, 0x01	; 1
     ac2:	0e 94 52 05 	call	0xaa4	; 0xaa4 <USART_transmit0>
     ac6:	89 91       	ld	r24, Y+
     ac8:	81 11       	cpse	r24, r1
     aca:	fb cf       	rjmp	.-10     	; 0xac2 <USART_putstring0+0xe>
     acc:	df 91       	pop	r29
     ace:	cf 91       	pop	r28
     ad0:	08 95       	ret

00000ad2 <USART_receive2>:
     ad2:	e0 ed       	ldi	r30, 0xD0	; 208
     ad4:	f0 e0       	ldi	r31, 0x00	; 0
     ad6:	80 81       	ld	r24, Z
     ad8:	88 23       	and	r24, r24
     ada:	ec f7       	brge	.-6      	; 0xad6 <USART_receive2+0x4>
     adc:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__DATA_REGION_ORIGIN__+0x76>
     ae0:	08 95       	ret

00000ae2 <USART_receiveString2>:

char * USART_receiveString2(void){
     ae2:	0f 93       	push	r16
     ae4:	1f 93       	push	r17
     ae6:	cf 93       	push	r28
     ae8:	df 93       	push	r29
     aea:	05 e0       	ldi	r16, 0x05	; 5
     aec:	14 e0       	ldi	r17, 0x04	; 4
	//char rx_buf[250];
	unsigned char rec = 0;
	int i = 0;
     aee:	c0 e0       	ldi	r28, 0x00	; 0
     af0:	d0 e0       	ldi	r29, 0x00	; 0
	while (1){
		rec = USART_receive2();
     af2:	0e 94 69 05 	call	0xad2	; 0xad2 <USART_receive2>
		if (rec == 0x0A){
     af6:	8a 30       	cpi	r24, 0x0A	; 10
     af8:	29 f0       	breq	.+10     	; 0xb04 <USART_receiveString2+0x22>
			rx_buf[i] = '\0';
			break;
		}
		rx_buf[i] = rec;
     afa:	f8 01       	movw	r30, r16
     afc:	81 93       	st	Z+, r24
     afe:	8f 01       	movw	r16, r30
		i++;
     b00:	21 96       	adiw	r28, 0x01	; 1
	}
     b02:	f7 cf       	rjmp	.-18     	; 0xaf2 <USART_receiveString2+0x10>
	unsigned char rec = 0;
	int i = 0;
	while (1){
		rec = USART_receive2();
		if (rec == 0x0A){
			rx_buf[i] = '\0';
     b04:	cb 5f       	subi	r28, 0xFB	; 251
     b06:	db 4f       	sbci	r29, 0xFB	; 251
     b08:	18 82       	st	Y, r1
			break;
		}
		rx_buf[i] = rec;
		i++;
	}
	puts(rx_buf);
     b0a:	85 e0       	ldi	r24, 0x05	; 5
     b0c:	94 e0       	ldi	r25, 0x04	; 4
     b0e:	0e 94 b1 0c 	call	0x1962	; 0x1962 <puts>
	return &rx_buf[0];
}
     b12:	85 e0       	ldi	r24, 0x05	; 5
     b14:	94 e0       	ldi	r25, 0x04	; 4
     b16:	df 91       	pop	r29
     b18:	cf 91       	pop	r28
     b1a:	1f 91       	pop	r17
     b1c:	0f 91       	pop	r16
     b1e:	08 95       	ret

00000b20 <timers_init>:
#include <util/delay.h>
#include <config.h>
#include "timers.h"


void timers_init(){
     b20:	08 95       	ret

00000b22 <enter_powerSave>:
}


void enter_powerSave(){
	#ifdef USART2_START_COND_INTERRUPT
	UCSR2D |= (1<<SFDE) | (0<<RXSIE);			// Enable start condition detection with interrupt on RXCIE
     b22:	e3 ed       	ldi	r30, 0xD3	; 211
     b24:	f0 e0       	ldi	r31, 0x00	; 0
     b26:	80 81       	ld	r24, Z
     b28:	80 62       	ori	r24, 0x20	; 32
     b2a:	80 83       	st	Z, r24
	#endif
	set_sleep_mode(SLEEP_MODE_PWR_SAVE);
     b2c:	83 b7       	in	r24, 0x33	; 51
     b2e:	81 7f       	andi	r24, 0xF1	; 241
     b30:	86 60       	ori	r24, 0x06	; 6
     b32:	83 bf       	out	0x33, r24	; 51
	sleep_mode();
     b34:	83 b7       	in	r24, 0x33	; 51
     b36:	81 60       	ori	r24, 0x01	; 1
     b38:	83 bf       	out	0x33, r24	; 51
     b3a:	88 95       	sleep
     b3c:	83 b7       	in	r24, 0x33	; 51
     b3e:	8e 7f       	andi	r24, 0xFE	; 254
     b40:	83 bf       	out	0x33, r24	; 51
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b42:	2f e7       	ldi	r18, 0x7F	; 127
     b44:	85 eb       	ldi	r24, 0xB5	; 181
     b46:	91 e0       	ldi	r25, 0x01	; 1
     b48:	21 50       	subi	r18, 0x01	; 1
     b4a:	80 40       	sbci	r24, 0x00	; 0
     b4c:	90 40       	sbci	r25, 0x00	; 0
     b4e:	e1 f7       	brne	.-8      	; 0xb48 <enter_powerSave+0x26>
     b50:	00 c0       	rjmp	.+0      	; 0xb52 <enter_powerSave+0x30>
     b52:	00 00       	nop
	_delay_ms(70);
	UCSR2D &= ~(1<<SFDE);						// Disable start condition detection while awake.
     b54:	80 81       	ld	r24, Z
     b56:	8f 7d       	andi	r24, 0xDF	; 223
     b58:	80 83       	st	Z, r24
     b5a:	08 95       	ret

00000b5c <hex_encode>:

//				1  2  3  4  5  6  7  8  9 10 11 byte pair
//  MSG STYLE: xx xx xx xx xx xx xx xx xx xx xx
//  3-6: timestamp, 7: battery, 8+9: bus voltage, 10+11: current

char* hex_encode(board_t board){
     b5c:	cf 93       	push	r28
     b5e:	df 93       	push	r29
     b60:	cd b7       	in	r28, 0x3d	; 61
     b62:	de b7       	in	r29, 0x3e	; 62
	char *msg = "";
	sprintf(msg, "%02X%02X%08lX%02X%04X%04X", board.frame_counter, board.id, board.time_stamp, board.batteryLevel, board.ina219.bus_voltage, board.ina219.current);
     b64:	8f 85       	ldd	r24, Y+15	; 0x0f
     b66:	8f 93       	push	r24
     b68:	8e 85       	ldd	r24, Y+14	; 0x0e
     b6a:	8f 93       	push	r24
     b6c:	8d 85       	ldd	r24, Y+13	; 0x0d
     b6e:	8f 93       	push	r24
     b70:	8c 85       	ldd	r24, Y+12	; 0x0c
     b72:	8f 93       	push	r24
     b74:	8b 85       	ldd	r24, Y+11	; 0x0b
     b76:	1f 92       	push	r1
     b78:	8f 93       	push	r24
     b7a:	8a 85       	ldd	r24, Y+10	; 0x0a
     b7c:	8f 93       	push	r24
     b7e:	89 85       	ldd	r24, Y+9	; 0x09
     b80:	8f 93       	push	r24
     b82:	88 85       	ldd	r24, Y+8	; 0x08
     b84:	8f 93       	push	r24
     b86:	8f 81       	ldd	r24, Y+7	; 0x07
     b88:	8f 93       	push	r24
     b8a:	8d 81       	ldd	r24, Y+5	; 0x05
     b8c:	1f 92       	push	r1
     b8e:	8f 93       	push	r24
     b90:	8e 81       	ldd	r24, Y+6	; 0x06
     b92:	1f 92       	push	r1
     b94:	8f 93       	push	r24
     b96:	84 ee       	ldi	r24, 0xE4	; 228
     b98:	93 e0       	ldi	r25, 0x03	; 3
     b9a:	9f 93       	push	r25
     b9c:	8f 93       	push	r24
     b9e:	8b e7       	ldi	r24, 0x7B	; 123
     ba0:	92 e0       	ldi	r25, 0x02	; 2
     ba2:	9f 93       	push	r25
     ba4:	8f 93       	push	r24
     ba6:	0e 94 e1 0c 	call	0x19c2	; 0x19c2 <sprintf>
	return msg;
     baa:	0f b6       	in	r0, 0x3f	; 63
     bac:	f8 94       	cli
     bae:	de bf       	out	0x3e, r29	; 62
     bb0:	0f be       	out	0x3f, r0	; 63
     bb2:	cd bf       	out	0x3d, r28	; 61
}
     bb4:	8b e7       	ldi	r24, 0x7B	; 123
     bb6:	92 e0       	ldi	r25, 0x02	; 2
     bb8:	df 91       	pop	r29
     bba:	cf 91       	pop	r28
     bbc:	08 95       	ret

00000bbe <vfprintf>:
     bbe:	a0 e1       	ldi	r26, 0x10	; 16
     bc0:	b0 e0       	ldi	r27, 0x00	; 0
     bc2:	e5 ee       	ldi	r30, 0xE5	; 229
     bc4:	f5 e0       	ldi	r31, 0x05	; 5
     bc6:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__prologue_saves__>
     bca:	7c 01       	movw	r14, r24
     bcc:	1b 01       	movw	r2, r22
     bce:	6a 01       	movw	r12, r20
     bd0:	fc 01       	movw	r30, r24
     bd2:	17 82       	std	Z+7, r1	; 0x07
     bd4:	16 82       	std	Z+6, r1	; 0x06
     bd6:	83 81       	ldd	r24, Z+3	; 0x03
     bd8:	81 ff       	sbrs	r24, 1
     bda:	44 c3       	rjmp	.+1672   	; 0x1264 <vfprintf+0x6a6>
     bdc:	9e 01       	movw	r18, r28
     bde:	2f 5f       	subi	r18, 0xFF	; 255
     be0:	3f 4f       	sbci	r19, 0xFF	; 255
     be2:	39 01       	movw	r6, r18
     be4:	f7 01       	movw	r30, r14
     be6:	93 81       	ldd	r25, Z+3	; 0x03
     be8:	f1 01       	movw	r30, r2
     bea:	93 fd       	sbrc	r25, 3
     bec:	85 91       	lpm	r24, Z+
     bee:	93 ff       	sbrs	r25, 3
     bf0:	81 91       	ld	r24, Z+
     bf2:	1f 01       	movw	r2, r30
     bf4:	88 23       	and	r24, r24
     bf6:	09 f4       	brne	.+2      	; 0xbfa <vfprintf+0x3c>
     bf8:	31 c3       	rjmp	.+1634   	; 0x125c <vfprintf+0x69e>
     bfa:	85 32       	cpi	r24, 0x25	; 37
     bfc:	39 f4       	brne	.+14     	; 0xc0c <vfprintf+0x4e>
     bfe:	93 fd       	sbrc	r25, 3
     c00:	85 91       	lpm	r24, Z+
     c02:	93 ff       	sbrs	r25, 3
     c04:	81 91       	ld	r24, Z+
     c06:	1f 01       	movw	r2, r30
     c08:	85 32       	cpi	r24, 0x25	; 37
     c0a:	39 f4       	brne	.+14     	; 0xc1a <vfprintf+0x5c>
     c0c:	b7 01       	movw	r22, r14
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     c14:	56 01       	movw	r10, r12
     c16:	65 01       	movw	r12, r10
     c18:	e5 cf       	rjmp	.-54     	; 0xbe4 <vfprintf+0x26>
     c1a:	10 e0       	ldi	r17, 0x00	; 0
     c1c:	51 2c       	mov	r5, r1
     c1e:	91 2c       	mov	r9, r1
     c20:	ff e1       	ldi	r31, 0x1F	; 31
     c22:	f9 15       	cp	r31, r9
     c24:	d8 f0       	brcs	.+54     	; 0xc5c <vfprintf+0x9e>
     c26:	8b 32       	cpi	r24, 0x2B	; 43
     c28:	79 f0       	breq	.+30     	; 0xc48 <vfprintf+0x8a>
     c2a:	38 f4       	brcc	.+14     	; 0xc3a <vfprintf+0x7c>
     c2c:	80 32       	cpi	r24, 0x20	; 32
     c2e:	79 f0       	breq	.+30     	; 0xc4e <vfprintf+0x90>
     c30:	83 32       	cpi	r24, 0x23	; 35
     c32:	a1 f4       	brne	.+40     	; 0xc5c <vfprintf+0x9e>
     c34:	f9 2d       	mov	r31, r9
     c36:	f0 61       	ori	r31, 0x10	; 16
     c38:	2e c0       	rjmp	.+92     	; 0xc96 <vfprintf+0xd8>
     c3a:	8d 32       	cpi	r24, 0x2D	; 45
     c3c:	61 f0       	breq	.+24     	; 0xc56 <vfprintf+0x98>
     c3e:	80 33       	cpi	r24, 0x30	; 48
     c40:	69 f4       	brne	.+26     	; 0xc5c <vfprintf+0x9e>
     c42:	29 2d       	mov	r18, r9
     c44:	21 60       	ori	r18, 0x01	; 1
     c46:	2d c0       	rjmp	.+90     	; 0xca2 <vfprintf+0xe4>
     c48:	39 2d       	mov	r19, r9
     c4a:	32 60       	ori	r19, 0x02	; 2
     c4c:	93 2e       	mov	r9, r19
     c4e:	89 2d       	mov	r24, r9
     c50:	84 60       	ori	r24, 0x04	; 4
     c52:	98 2e       	mov	r9, r24
     c54:	2a c0       	rjmp	.+84     	; 0xcaa <vfprintf+0xec>
     c56:	e9 2d       	mov	r30, r9
     c58:	e8 60       	ori	r30, 0x08	; 8
     c5a:	15 c0       	rjmp	.+42     	; 0xc86 <vfprintf+0xc8>
     c5c:	97 fc       	sbrc	r9, 7
     c5e:	2d c0       	rjmp	.+90     	; 0xcba <vfprintf+0xfc>
     c60:	20 ed       	ldi	r18, 0xD0	; 208
     c62:	28 0f       	add	r18, r24
     c64:	2a 30       	cpi	r18, 0x0A	; 10
     c66:	88 f4       	brcc	.+34     	; 0xc8a <vfprintf+0xcc>
     c68:	96 fe       	sbrs	r9, 6
     c6a:	06 c0       	rjmp	.+12     	; 0xc78 <vfprintf+0xba>
     c6c:	3a e0       	ldi	r19, 0x0A	; 10
     c6e:	13 9f       	mul	r17, r19
     c70:	20 0d       	add	r18, r0
     c72:	11 24       	eor	r1, r1
     c74:	12 2f       	mov	r17, r18
     c76:	19 c0       	rjmp	.+50     	; 0xcaa <vfprintf+0xec>
     c78:	8a e0       	ldi	r24, 0x0A	; 10
     c7a:	58 9e       	mul	r5, r24
     c7c:	20 0d       	add	r18, r0
     c7e:	11 24       	eor	r1, r1
     c80:	52 2e       	mov	r5, r18
     c82:	e9 2d       	mov	r30, r9
     c84:	e0 62       	ori	r30, 0x20	; 32
     c86:	9e 2e       	mov	r9, r30
     c88:	10 c0       	rjmp	.+32     	; 0xcaa <vfprintf+0xec>
     c8a:	8e 32       	cpi	r24, 0x2E	; 46
     c8c:	31 f4       	brne	.+12     	; 0xc9a <vfprintf+0xdc>
     c8e:	96 fc       	sbrc	r9, 6
     c90:	e5 c2       	rjmp	.+1482   	; 0x125c <vfprintf+0x69e>
     c92:	f9 2d       	mov	r31, r9
     c94:	f0 64       	ori	r31, 0x40	; 64
     c96:	9f 2e       	mov	r9, r31
     c98:	08 c0       	rjmp	.+16     	; 0xcaa <vfprintf+0xec>
     c9a:	8c 36       	cpi	r24, 0x6C	; 108
     c9c:	21 f4       	brne	.+8      	; 0xca6 <vfprintf+0xe8>
     c9e:	29 2d       	mov	r18, r9
     ca0:	20 68       	ori	r18, 0x80	; 128
     ca2:	92 2e       	mov	r9, r18
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <vfprintf+0xec>
     ca6:	88 36       	cpi	r24, 0x68	; 104
     ca8:	41 f4       	brne	.+16     	; 0xcba <vfprintf+0xfc>
     caa:	f1 01       	movw	r30, r2
     cac:	93 fd       	sbrc	r25, 3
     cae:	85 91       	lpm	r24, Z+
     cb0:	93 ff       	sbrs	r25, 3
     cb2:	81 91       	ld	r24, Z+
     cb4:	1f 01       	movw	r2, r30
     cb6:	81 11       	cpse	r24, r1
     cb8:	b3 cf       	rjmp	.-154    	; 0xc20 <vfprintf+0x62>
     cba:	9b eb       	ldi	r25, 0xBB	; 187
     cbc:	98 0f       	add	r25, r24
     cbe:	93 30       	cpi	r25, 0x03	; 3
     cc0:	20 f4       	brcc	.+8      	; 0xcca <vfprintf+0x10c>
     cc2:	99 2d       	mov	r25, r9
     cc4:	90 61       	ori	r25, 0x10	; 16
     cc6:	80 5e       	subi	r24, 0xE0	; 224
     cc8:	07 c0       	rjmp	.+14     	; 0xcd8 <vfprintf+0x11a>
     cca:	9b e9       	ldi	r25, 0x9B	; 155
     ccc:	98 0f       	add	r25, r24
     cce:	93 30       	cpi	r25, 0x03	; 3
     cd0:	08 f0       	brcs	.+2      	; 0xcd4 <vfprintf+0x116>
     cd2:	66 c1       	rjmp	.+716    	; 0xfa0 <vfprintf+0x3e2>
     cd4:	99 2d       	mov	r25, r9
     cd6:	9f 7e       	andi	r25, 0xEF	; 239
     cd8:	96 ff       	sbrs	r25, 6
     cda:	16 e0       	ldi	r17, 0x06	; 6
     cdc:	9f 73       	andi	r25, 0x3F	; 63
     cde:	99 2e       	mov	r9, r25
     ce0:	85 36       	cpi	r24, 0x65	; 101
     ce2:	19 f4       	brne	.+6      	; 0xcea <vfprintf+0x12c>
     ce4:	90 64       	ori	r25, 0x40	; 64
     ce6:	99 2e       	mov	r9, r25
     ce8:	08 c0       	rjmp	.+16     	; 0xcfa <vfprintf+0x13c>
     cea:	86 36       	cpi	r24, 0x66	; 102
     cec:	21 f4       	brne	.+8      	; 0xcf6 <vfprintf+0x138>
     cee:	39 2f       	mov	r19, r25
     cf0:	30 68       	ori	r19, 0x80	; 128
     cf2:	93 2e       	mov	r9, r19
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0x13c>
     cf6:	11 11       	cpse	r17, r1
     cf8:	11 50       	subi	r17, 0x01	; 1
     cfa:	97 fe       	sbrs	r9, 7
     cfc:	07 c0       	rjmp	.+14     	; 0xd0c <vfprintf+0x14e>
     cfe:	1c 33       	cpi	r17, 0x3C	; 60
     d00:	50 f4       	brcc	.+20     	; 0xd16 <vfprintf+0x158>
     d02:	44 24       	eor	r4, r4
     d04:	43 94       	inc	r4
     d06:	41 0e       	add	r4, r17
     d08:	27 e0       	ldi	r18, 0x07	; 7
     d0a:	0b c0       	rjmp	.+22     	; 0xd22 <vfprintf+0x164>
     d0c:	18 30       	cpi	r17, 0x08	; 8
     d0e:	38 f0       	brcs	.+14     	; 0xd1e <vfprintf+0x160>
     d10:	27 e0       	ldi	r18, 0x07	; 7
     d12:	17 e0       	ldi	r17, 0x07	; 7
     d14:	05 c0       	rjmp	.+10     	; 0xd20 <vfprintf+0x162>
     d16:	27 e0       	ldi	r18, 0x07	; 7
     d18:	9c e3       	ldi	r25, 0x3C	; 60
     d1a:	49 2e       	mov	r4, r25
     d1c:	02 c0       	rjmp	.+4      	; 0xd22 <vfprintf+0x164>
     d1e:	21 2f       	mov	r18, r17
     d20:	41 2c       	mov	r4, r1
     d22:	56 01       	movw	r10, r12
     d24:	84 e0       	ldi	r24, 0x04	; 4
     d26:	a8 0e       	add	r10, r24
     d28:	b1 1c       	adc	r11, r1
     d2a:	f6 01       	movw	r30, r12
     d2c:	60 81       	ld	r22, Z
     d2e:	71 81       	ldd	r23, Z+1	; 0x01
     d30:	82 81       	ldd	r24, Z+2	; 0x02
     d32:	93 81       	ldd	r25, Z+3	; 0x03
     d34:	04 2d       	mov	r16, r4
     d36:	a3 01       	movw	r20, r6
     d38:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <__ftoa_engine>
     d3c:	6c 01       	movw	r12, r24
     d3e:	f9 81       	ldd	r31, Y+1	; 0x01
     d40:	fc 87       	std	Y+12, r31	; 0x0c
     d42:	f0 ff       	sbrs	r31, 0
     d44:	02 c0       	rjmp	.+4      	; 0xd4a <vfprintf+0x18c>
     d46:	f3 ff       	sbrs	r31, 3
     d48:	06 c0       	rjmp	.+12     	; 0xd56 <vfprintf+0x198>
     d4a:	91 fc       	sbrc	r9, 1
     d4c:	06 c0       	rjmp	.+12     	; 0xd5a <vfprintf+0x19c>
     d4e:	92 fe       	sbrs	r9, 2
     d50:	06 c0       	rjmp	.+12     	; 0xd5e <vfprintf+0x1a0>
     d52:	00 e2       	ldi	r16, 0x20	; 32
     d54:	05 c0       	rjmp	.+10     	; 0xd60 <vfprintf+0x1a2>
     d56:	0d e2       	ldi	r16, 0x2D	; 45
     d58:	03 c0       	rjmp	.+6      	; 0xd60 <vfprintf+0x1a2>
     d5a:	0b e2       	ldi	r16, 0x2B	; 43
     d5c:	01 c0       	rjmp	.+2      	; 0xd60 <vfprintf+0x1a2>
     d5e:	00 e0       	ldi	r16, 0x00	; 0
     d60:	8c 85       	ldd	r24, Y+12	; 0x0c
     d62:	8c 70       	andi	r24, 0x0C	; 12
     d64:	19 f0       	breq	.+6      	; 0xd6c <vfprintf+0x1ae>
     d66:	01 11       	cpse	r16, r1
     d68:	5a c2       	rjmp	.+1204   	; 0x121e <vfprintf+0x660>
     d6a:	9b c2       	rjmp	.+1334   	; 0x12a2 <vfprintf+0x6e4>
     d6c:	97 fe       	sbrs	r9, 7
     d6e:	10 c0       	rjmp	.+32     	; 0xd90 <vfprintf+0x1d2>
     d70:	4c 0c       	add	r4, r12
     d72:	fc 85       	ldd	r31, Y+12	; 0x0c
     d74:	f4 ff       	sbrs	r31, 4
     d76:	04 c0       	rjmp	.+8      	; 0xd80 <vfprintf+0x1c2>
     d78:	8a 81       	ldd	r24, Y+2	; 0x02
     d7a:	81 33       	cpi	r24, 0x31	; 49
     d7c:	09 f4       	brne	.+2      	; 0xd80 <vfprintf+0x1c2>
     d7e:	4a 94       	dec	r4
     d80:	14 14       	cp	r1, r4
     d82:	74 f5       	brge	.+92     	; 0xde0 <vfprintf+0x222>
     d84:	28 e0       	ldi	r18, 0x08	; 8
     d86:	24 15       	cp	r18, r4
     d88:	78 f5       	brcc	.+94     	; 0xde8 <vfprintf+0x22a>
     d8a:	88 e0       	ldi	r24, 0x08	; 8
     d8c:	48 2e       	mov	r4, r24
     d8e:	2c c0       	rjmp	.+88     	; 0xde8 <vfprintf+0x22a>
     d90:	96 fc       	sbrc	r9, 6
     d92:	2a c0       	rjmp	.+84     	; 0xde8 <vfprintf+0x22a>
     d94:	81 2f       	mov	r24, r17
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	8c 15       	cp	r24, r12
     d9a:	9d 05       	cpc	r25, r13
     d9c:	9c f0       	brlt	.+38     	; 0xdc4 <vfprintf+0x206>
     d9e:	3c ef       	ldi	r19, 0xFC	; 252
     da0:	c3 16       	cp	r12, r19
     da2:	3f ef       	ldi	r19, 0xFF	; 255
     da4:	d3 06       	cpc	r13, r19
     da6:	74 f0       	brlt	.+28     	; 0xdc4 <vfprintf+0x206>
     da8:	89 2d       	mov	r24, r9
     daa:	80 68       	ori	r24, 0x80	; 128
     dac:	98 2e       	mov	r9, r24
     dae:	0a c0       	rjmp	.+20     	; 0xdc4 <vfprintf+0x206>
     db0:	e2 e0       	ldi	r30, 0x02	; 2
     db2:	f0 e0       	ldi	r31, 0x00	; 0
     db4:	ec 0f       	add	r30, r28
     db6:	fd 1f       	adc	r31, r29
     db8:	e1 0f       	add	r30, r17
     dba:	f1 1d       	adc	r31, r1
     dbc:	80 81       	ld	r24, Z
     dbe:	80 33       	cpi	r24, 0x30	; 48
     dc0:	19 f4       	brne	.+6      	; 0xdc8 <vfprintf+0x20a>
     dc2:	11 50       	subi	r17, 0x01	; 1
     dc4:	11 11       	cpse	r17, r1
     dc6:	f4 cf       	rjmp	.-24     	; 0xdb0 <vfprintf+0x1f2>
     dc8:	97 fe       	sbrs	r9, 7
     dca:	0e c0       	rjmp	.+28     	; 0xde8 <vfprintf+0x22a>
     dcc:	44 24       	eor	r4, r4
     dce:	43 94       	inc	r4
     dd0:	41 0e       	add	r4, r17
     dd2:	81 2f       	mov	r24, r17
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	c8 16       	cp	r12, r24
     dd8:	d9 06       	cpc	r13, r25
     dda:	2c f4       	brge	.+10     	; 0xde6 <vfprintf+0x228>
     ddc:	1c 19       	sub	r17, r12
     dde:	04 c0       	rjmp	.+8      	; 0xde8 <vfprintf+0x22a>
     de0:	44 24       	eor	r4, r4
     de2:	43 94       	inc	r4
     de4:	01 c0       	rjmp	.+2      	; 0xde8 <vfprintf+0x22a>
     de6:	10 e0       	ldi	r17, 0x00	; 0
     de8:	97 fe       	sbrs	r9, 7
     dea:	06 c0       	rjmp	.+12     	; 0xdf8 <vfprintf+0x23a>
     dec:	1c 14       	cp	r1, r12
     dee:	1d 04       	cpc	r1, r13
     df0:	34 f4       	brge	.+12     	; 0xdfe <vfprintf+0x240>
     df2:	c6 01       	movw	r24, r12
     df4:	01 96       	adiw	r24, 0x01	; 1
     df6:	05 c0       	rjmp	.+10     	; 0xe02 <vfprintf+0x244>
     df8:	85 e0       	ldi	r24, 0x05	; 5
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 c0       	rjmp	.+4      	; 0xe02 <vfprintf+0x244>
     dfe:	81 e0       	ldi	r24, 0x01	; 1
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	01 11       	cpse	r16, r1
     e04:	01 96       	adiw	r24, 0x01	; 1
     e06:	11 23       	and	r17, r17
     e08:	31 f0       	breq	.+12     	; 0xe16 <vfprintf+0x258>
     e0a:	21 2f       	mov	r18, r17
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	2f 5f       	subi	r18, 0xFF	; 255
     e10:	3f 4f       	sbci	r19, 0xFF	; 255
     e12:	82 0f       	add	r24, r18
     e14:	93 1f       	adc	r25, r19
     e16:	25 2d       	mov	r18, r5
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	82 17       	cp	r24, r18
     e1c:	93 07       	cpc	r25, r19
     e1e:	14 f4       	brge	.+4      	; 0xe24 <vfprintf+0x266>
     e20:	58 1a       	sub	r5, r24
     e22:	01 c0       	rjmp	.+2      	; 0xe26 <vfprintf+0x268>
     e24:	51 2c       	mov	r5, r1
     e26:	89 2d       	mov	r24, r9
     e28:	89 70       	andi	r24, 0x09	; 9
     e2a:	49 f4       	brne	.+18     	; 0xe3e <vfprintf+0x280>
     e2c:	55 20       	and	r5, r5
     e2e:	39 f0       	breq	.+14     	; 0xe3e <vfprintf+0x280>
     e30:	b7 01       	movw	r22, r14
     e32:	80 e2       	ldi	r24, 0x20	; 32
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     e3a:	5a 94       	dec	r5
     e3c:	f7 cf       	rjmp	.-18     	; 0xe2c <vfprintf+0x26e>
     e3e:	00 23       	and	r16, r16
     e40:	29 f0       	breq	.+10     	; 0xe4c <vfprintf+0x28e>
     e42:	b7 01       	movw	r22, r14
     e44:	80 2f       	mov	r24, r16
     e46:	90 e0       	ldi	r25, 0x00	; 0
     e48:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     e4c:	93 fc       	sbrc	r9, 3
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <vfprintf+0x2a4>
     e50:	55 20       	and	r5, r5
     e52:	39 f0       	breq	.+14     	; 0xe62 <vfprintf+0x2a4>
     e54:	b7 01       	movw	r22, r14
     e56:	80 e3       	ldi	r24, 0x30	; 48
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     e5e:	5a 94       	dec	r5
     e60:	f7 cf       	rjmp	.-18     	; 0xe50 <vfprintf+0x292>
     e62:	97 fe       	sbrs	r9, 7
     e64:	4c c0       	rjmp	.+152    	; 0xefe <vfprintf+0x340>
     e66:	46 01       	movw	r8, r12
     e68:	d7 fe       	sbrs	r13, 7
     e6a:	02 c0       	rjmp	.+4      	; 0xe70 <vfprintf+0x2b2>
     e6c:	81 2c       	mov	r8, r1
     e6e:	91 2c       	mov	r9, r1
     e70:	c6 01       	movw	r24, r12
     e72:	88 19       	sub	r24, r8
     e74:	99 09       	sbc	r25, r9
     e76:	f3 01       	movw	r30, r6
     e78:	e8 0f       	add	r30, r24
     e7a:	f9 1f       	adc	r31, r25
     e7c:	fe 87       	std	Y+14, r31	; 0x0e
     e7e:	ed 87       	std	Y+13, r30	; 0x0d
     e80:	96 01       	movw	r18, r12
     e82:	24 19       	sub	r18, r4
     e84:	31 09       	sbc	r19, r1
     e86:	38 8b       	std	Y+16, r19	; 0x10
     e88:	2f 87       	std	Y+15, r18	; 0x0f
     e8a:	01 2f       	mov	r16, r17
     e8c:	10 e0       	ldi	r17, 0x00	; 0
     e8e:	11 95       	neg	r17
     e90:	01 95       	neg	r16
     e92:	11 09       	sbc	r17, r1
     e94:	3f ef       	ldi	r19, 0xFF	; 255
     e96:	83 16       	cp	r8, r19
     e98:	93 06       	cpc	r9, r19
     e9a:	29 f4       	brne	.+10     	; 0xea6 <vfprintf+0x2e8>
     e9c:	b7 01       	movw	r22, r14
     e9e:	8e e2       	ldi	r24, 0x2E	; 46
     ea0:	90 e0       	ldi	r25, 0x00	; 0
     ea2:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     ea6:	c8 14       	cp	r12, r8
     ea8:	d9 04       	cpc	r13, r9
     eaa:	4c f0       	brlt	.+18     	; 0xebe <vfprintf+0x300>
     eac:	8f 85       	ldd	r24, Y+15	; 0x0f
     eae:	98 89       	ldd	r25, Y+16	; 0x10
     eb0:	88 15       	cp	r24, r8
     eb2:	99 05       	cpc	r25, r9
     eb4:	24 f4       	brge	.+8      	; 0xebe <vfprintf+0x300>
     eb6:	ed 85       	ldd	r30, Y+13	; 0x0d
     eb8:	fe 85       	ldd	r31, Y+14	; 0x0e
     eba:	81 81       	ldd	r24, Z+1	; 0x01
     ebc:	01 c0       	rjmp	.+2      	; 0xec0 <vfprintf+0x302>
     ebe:	80 e3       	ldi	r24, 0x30	; 48
     ec0:	f1 e0       	ldi	r31, 0x01	; 1
     ec2:	8f 1a       	sub	r8, r31
     ec4:	91 08       	sbc	r9, r1
     ec6:	2d 85       	ldd	r18, Y+13	; 0x0d
     ec8:	3e 85       	ldd	r19, Y+14	; 0x0e
     eca:	2f 5f       	subi	r18, 0xFF	; 255
     ecc:	3f 4f       	sbci	r19, 0xFF	; 255
     ece:	3e 87       	std	Y+14, r19	; 0x0e
     ed0:	2d 87       	std	Y+13, r18	; 0x0d
     ed2:	80 16       	cp	r8, r16
     ed4:	91 06       	cpc	r9, r17
     ed6:	2c f0       	brlt	.+10     	; 0xee2 <vfprintf+0x324>
     ed8:	b7 01       	movw	r22, r14
     eda:	90 e0       	ldi	r25, 0x00	; 0
     edc:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     ee0:	d9 cf       	rjmp	.-78     	; 0xe94 <vfprintf+0x2d6>
     ee2:	c8 14       	cp	r12, r8
     ee4:	d9 04       	cpc	r13, r9
     ee6:	41 f4       	brne	.+16     	; 0xef8 <vfprintf+0x33a>
     ee8:	9a 81       	ldd	r25, Y+2	; 0x02
     eea:	96 33       	cpi	r25, 0x36	; 54
     eec:	20 f4       	brcc	.+8      	; 0xef6 <vfprintf+0x338>
     eee:	95 33       	cpi	r25, 0x35	; 53
     ef0:	19 f4       	brne	.+6      	; 0xef8 <vfprintf+0x33a>
     ef2:	3c 85       	ldd	r19, Y+12	; 0x0c
     ef4:	34 ff       	sbrs	r19, 4
     ef6:	81 e3       	ldi	r24, 0x31	; 49
     ef8:	b7 01       	movw	r22, r14
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	4e c0       	rjmp	.+156    	; 0xf9a <vfprintf+0x3dc>
     efe:	8a 81       	ldd	r24, Y+2	; 0x02
     f00:	81 33       	cpi	r24, 0x31	; 49
     f02:	19 f0       	breq	.+6      	; 0xf0a <vfprintf+0x34c>
     f04:	9c 85       	ldd	r25, Y+12	; 0x0c
     f06:	9f 7e       	andi	r25, 0xEF	; 239
     f08:	9c 87       	std	Y+12, r25	; 0x0c
     f0a:	b7 01       	movw	r22, r14
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f12:	11 11       	cpse	r17, r1
     f14:	05 c0       	rjmp	.+10     	; 0xf20 <vfprintf+0x362>
     f16:	94 fc       	sbrc	r9, 4
     f18:	18 c0       	rjmp	.+48     	; 0xf4a <vfprintf+0x38c>
     f1a:	85 e6       	ldi	r24, 0x65	; 101
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	17 c0       	rjmp	.+46     	; 0xf4e <vfprintf+0x390>
     f20:	b7 01       	movw	r22, r14
     f22:	8e e2       	ldi	r24, 0x2E	; 46
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f2a:	1e 5f       	subi	r17, 0xFE	; 254
     f2c:	82 e0       	ldi	r24, 0x02	; 2
     f2e:	01 e0       	ldi	r16, 0x01	; 1
     f30:	08 0f       	add	r16, r24
     f32:	f3 01       	movw	r30, r6
     f34:	e8 0f       	add	r30, r24
     f36:	f1 1d       	adc	r31, r1
     f38:	80 81       	ld	r24, Z
     f3a:	b7 01       	movw	r22, r14
     f3c:	90 e0       	ldi	r25, 0x00	; 0
     f3e:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f42:	80 2f       	mov	r24, r16
     f44:	01 13       	cpse	r16, r17
     f46:	f3 cf       	rjmp	.-26     	; 0xf2e <vfprintf+0x370>
     f48:	e6 cf       	rjmp	.-52     	; 0xf16 <vfprintf+0x358>
     f4a:	85 e4       	ldi	r24, 0x45	; 69
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	b7 01       	movw	r22, r14
     f50:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f54:	d7 fc       	sbrc	r13, 7
     f56:	06 c0       	rjmp	.+12     	; 0xf64 <vfprintf+0x3a6>
     f58:	c1 14       	cp	r12, r1
     f5a:	d1 04       	cpc	r13, r1
     f5c:	41 f4       	brne	.+16     	; 0xf6e <vfprintf+0x3b0>
     f5e:	ec 85       	ldd	r30, Y+12	; 0x0c
     f60:	e4 ff       	sbrs	r30, 4
     f62:	05 c0       	rjmp	.+10     	; 0xf6e <vfprintf+0x3b0>
     f64:	d1 94       	neg	r13
     f66:	c1 94       	neg	r12
     f68:	d1 08       	sbc	r13, r1
     f6a:	8d e2       	ldi	r24, 0x2D	; 45
     f6c:	01 c0       	rjmp	.+2      	; 0xf70 <vfprintf+0x3b2>
     f6e:	8b e2       	ldi	r24, 0x2B	; 43
     f70:	b7 01       	movw	r22, r14
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f78:	80 e3       	ldi	r24, 0x30	; 48
     f7a:	2a e0       	ldi	r18, 0x0A	; 10
     f7c:	c2 16       	cp	r12, r18
     f7e:	d1 04       	cpc	r13, r1
     f80:	2c f0       	brlt	.+10     	; 0xf8c <vfprintf+0x3ce>
     f82:	8f 5f       	subi	r24, 0xFF	; 255
     f84:	fa e0       	ldi	r31, 0x0A	; 10
     f86:	cf 1a       	sub	r12, r31
     f88:	d1 08       	sbc	r13, r1
     f8a:	f7 cf       	rjmp	.-18     	; 0xf7a <vfprintf+0x3bc>
     f8c:	b7 01       	movw	r22, r14
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f94:	b7 01       	movw	r22, r14
     f96:	c6 01       	movw	r24, r12
     f98:	c0 96       	adiw	r24, 0x30	; 48
     f9a:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
     f9e:	54 c1       	rjmp	.+680    	; 0x1248 <vfprintf+0x68a>
     fa0:	83 36       	cpi	r24, 0x63	; 99
     fa2:	31 f0       	breq	.+12     	; 0xfb0 <vfprintf+0x3f2>
     fa4:	83 37       	cpi	r24, 0x73	; 115
     fa6:	79 f0       	breq	.+30     	; 0xfc6 <vfprintf+0x408>
     fa8:	83 35       	cpi	r24, 0x53	; 83
     faa:	09 f0       	breq	.+2      	; 0xfae <vfprintf+0x3f0>
     fac:	56 c0       	rjmp	.+172    	; 0x105a <vfprintf+0x49c>
     fae:	20 c0       	rjmp	.+64     	; 0xff0 <vfprintf+0x432>
     fb0:	56 01       	movw	r10, r12
     fb2:	32 e0       	ldi	r19, 0x02	; 2
     fb4:	a3 0e       	add	r10, r19
     fb6:	b1 1c       	adc	r11, r1
     fb8:	f6 01       	movw	r30, r12
     fba:	80 81       	ld	r24, Z
     fbc:	89 83       	std	Y+1, r24	; 0x01
     fbe:	01 e0       	ldi	r16, 0x01	; 1
     fc0:	10 e0       	ldi	r17, 0x00	; 0
     fc2:	63 01       	movw	r12, r6
     fc4:	12 c0       	rjmp	.+36     	; 0xfea <vfprintf+0x42c>
     fc6:	56 01       	movw	r10, r12
     fc8:	f2 e0       	ldi	r31, 0x02	; 2
     fca:	af 0e       	add	r10, r31
     fcc:	b1 1c       	adc	r11, r1
     fce:	f6 01       	movw	r30, r12
     fd0:	c0 80       	ld	r12, Z
     fd2:	d1 80       	ldd	r13, Z+1	; 0x01
     fd4:	96 fe       	sbrs	r9, 6
     fd6:	03 c0       	rjmp	.+6      	; 0xfde <vfprintf+0x420>
     fd8:	61 2f       	mov	r22, r17
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	02 c0       	rjmp	.+4      	; 0xfe2 <vfprintf+0x424>
     fde:	6f ef       	ldi	r22, 0xFF	; 255
     fe0:	7f ef       	ldi	r23, 0xFF	; 255
     fe2:	c6 01       	movw	r24, r12
     fe4:	0e 94 54 0c 	call	0x18a8	; 0x18a8 <strnlen>
     fe8:	8c 01       	movw	r16, r24
     fea:	f9 2d       	mov	r31, r9
     fec:	ff 77       	andi	r31, 0x7F	; 127
     fee:	14 c0       	rjmp	.+40     	; 0x1018 <vfprintf+0x45a>
     ff0:	56 01       	movw	r10, r12
     ff2:	22 e0       	ldi	r18, 0x02	; 2
     ff4:	a2 0e       	add	r10, r18
     ff6:	b1 1c       	adc	r11, r1
     ff8:	f6 01       	movw	r30, r12
     ffa:	c0 80       	ld	r12, Z
     ffc:	d1 80       	ldd	r13, Z+1	; 0x01
     ffe:	96 fe       	sbrs	r9, 6
    1000:	03 c0       	rjmp	.+6      	; 0x1008 <vfprintf+0x44a>
    1002:	61 2f       	mov	r22, r17
    1004:	70 e0       	ldi	r23, 0x00	; 0
    1006:	02 c0       	rjmp	.+4      	; 0x100c <vfprintf+0x44e>
    1008:	6f ef       	ldi	r22, 0xFF	; 255
    100a:	7f ef       	ldi	r23, 0xFF	; 255
    100c:	c6 01       	movw	r24, r12
    100e:	0e 94 30 0c 	call	0x1860	; 0x1860 <strnlen_P>
    1012:	8c 01       	movw	r16, r24
    1014:	f9 2d       	mov	r31, r9
    1016:	f0 68       	ori	r31, 0x80	; 128
    1018:	9f 2e       	mov	r9, r31
    101a:	f3 fd       	sbrc	r31, 3
    101c:	1a c0       	rjmp	.+52     	; 0x1052 <vfprintf+0x494>
    101e:	85 2d       	mov	r24, r5
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	08 17       	cp	r16, r24
    1024:	19 07       	cpc	r17, r25
    1026:	a8 f4       	brcc	.+42     	; 0x1052 <vfprintf+0x494>
    1028:	b7 01       	movw	r22, r14
    102a:	80 e2       	ldi	r24, 0x20	; 32
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    1032:	5a 94       	dec	r5
    1034:	f4 cf       	rjmp	.-24     	; 0x101e <vfprintf+0x460>
    1036:	f6 01       	movw	r30, r12
    1038:	97 fc       	sbrc	r9, 7
    103a:	85 91       	lpm	r24, Z+
    103c:	97 fe       	sbrs	r9, 7
    103e:	81 91       	ld	r24, Z+
    1040:	6f 01       	movw	r12, r30
    1042:	b7 01       	movw	r22, r14
    1044:	90 e0       	ldi	r25, 0x00	; 0
    1046:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    104a:	51 10       	cpse	r5, r1
    104c:	5a 94       	dec	r5
    104e:	01 50       	subi	r16, 0x01	; 1
    1050:	11 09       	sbc	r17, r1
    1052:	01 15       	cp	r16, r1
    1054:	11 05       	cpc	r17, r1
    1056:	79 f7       	brne	.-34     	; 0x1036 <vfprintf+0x478>
    1058:	f7 c0       	rjmp	.+494    	; 0x1248 <vfprintf+0x68a>
    105a:	84 36       	cpi	r24, 0x64	; 100
    105c:	11 f0       	breq	.+4      	; 0x1062 <vfprintf+0x4a4>
    105e:	89 36       	cpi	r24, 0x69	; 105
    1060:	61 f5       	brne	.+88     	; 0x10ba <vfprintf+0x4fc>
    1062:	56 01       	movw	r10, r12
    1064:	97 fe       	sbrs	r9, 7
    1066:	09 c0       	rjmp	.+18     	; 0x107a <vfprintf+0x4bc>
    1068:	24 e0       	ldi	r18, 0x04	; 4
    106a:	a2 0e       	add	r10, r18
    106c:	b1 1c       	adc	r11, r1
    106e:	f6 01       	movw	r30, r12
    1070:	60 81       	ld	r22, Z
    1072:	71 81       	ldd	r23, Z+1	; 0x01
    1074:	82 81       	ldd	r24, Z+2	; 0x02
    1076:	93 81       	ldd	r25, Z+3	; 0x03
    1078:	0a c0       	rjmp	.+20     	; 0x108e <vfprintf+0x4d0>
    107a:	f2 e0       	ldi	r31, 0x02	; 2
    107c:	af 0e       	add	r10, r31
    107e:	b1 1c       	adc	r11, r1
    1080:	f6 01       	movw	r30, r12
    1082:	60 81       	ld	r22, Z
    1084:	71 81       	ldd	r23, Z+1	; 0x01
    1086:	07 2e       	mov	r0, r23
    1088:	00 0c       	add	r0, r0
    108a:	88 0b       	sbc	r24, r24
    108c:	99 0b       	sbc	r25, r25
    108e:	f9 2d       	mov	r31, r9
    1090:	ff 76       	andi	r31, 0x6F	; 111
    1092:	9f 2e       	mov	r9, r31
    1094:	97 ff       	sbrs	r25, 7
    1096:	09 c0       	rjmp	.+18     	; 0x10aa <vfprintf+0x4ec>
    1098:	90 95       	com	r25
    109a:	80 95       	com	r24
    109c:	70 95       	com	r23
    109e:	61 95       	neg	r22
    10a0:	7f 4f       	sbci	r23, 0xFF	; 255
    10a2:	8f 4f       	sbci	r24, 0xFF	; 255
    10a4:	9f 4f       	sbci	r25, 0xFF	; 255
    10a6:	f0 68       	ori	r31, 0x80	; 128
    10a8:	9f 2e       	mov	r9, r31
    10aa:	2a e0       	ldi	r18, 0x0A	; 10
    10ac:	30 e0       	ldi	r19, 0x00	; 0
    10ae:	a3 01       	movw	r20, r6
    10b0:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__ultoa_invert>
    10b4:	c8 2e       	mov	r12, r24
    10b6:	c6 18       	sub	r12, r6
    10b8:	3f c0       	rjmp	.+126    	; 0x1138 <vfprintf+0x57a>
    10ba:	09 2d       	mov	r16, r9
    10bc:	85 37       	cpi	r24, 0x75	; 117
    10be:	21 f4       	brne	.+8      	; 0x10c8 <vfprintf+0x50a>
    10c0:	0f 7e       	andi	r16, 0xEF	; 239
    10c2:	2a e0       	ldi	r18, 0x0A	; 10
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	1d c0       	rjmp	.+58     	; 0x1102 <vfprintf+0x544>
    10c8:	09 7f       	andi	r16, 0xF9	; 249
    10ca:	8f 36       	cpi	r24, 0x6F	; 111
    10cc:	91 f0       	breq	.+36     	; 0x10f2 <vfprintf+0x534>
    10ce:	18 f4       	brcc	.+6      	; 0x10d6 <vfprintf+0x518>
    10d0:	88 35       	cpi	r24, 0x58	; 88
    10d2:	59 f0       	breq	.+22     	; 0x10ea <vfprintf+0x52c>
    10d4:	c3 c0       	rjmp	.+390    	; 0x125c <vfprintf+0x69e>
    10d6:	80 37       	cpi	r24, 0x70	; 112
    10d8:	19 f0       	breq	.+6      	; 0x10e0 <vfprintf+0x522>
    10da:	88 37       	cpi	r24, 0x78	; 120
    10dc:	11 f0       	breq	.+4      	; 0x10e2 <vfprintf+0x524>
    10de:	be c0       	rjmp	.+380    	; 0x125c <vfprintf+0x69e>
    10e0:	00 61       	ori	r16, 0x10	; 16
    10e2:	04 ff       	sbrs	r16, 4
    10e4:	09 c0       	rjmp	.+18     	; 0x10f8 <vfprintf+0x53a>
    10e6:	04 60       	ori	r16, 0x04	; 4
    10e8:	07 c0       	rjmp	.+14     	; 0x10f8 <vfprintf+0x53a>
    10ea:	94 fe       	sbrs	r9, 4
    10ec:	08 c0       	rjmp	.+16     	; 0x10fe <vfprintf+0x540>
    10ee:	06 60       	ori	r16, 0x06	; 6
    10f0:	06 c0       	rjmp	.+12     	; 0x10fe <vfprintf+0x540>
    10f2:	28 e0       	ldi	r18, 0x08	; 8
    10f4:	30 e0       	ldi	r19, 0x00	; 0
    10f6:	05 c0       	rjmp	.+10     	; 0x1102 <vfprintf+0x544>
    10f8:	20 e1       	ldi	r18, 0x10	; 16
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <vfprintf+0x544>
    10fe:	20 e1       	ldi	r18, 0x10	; 16
    1100:	32 e0       	ldi	r19, 0x02	; 2
    1102:	56 01       	movw	r10, r12
    1104:	07 ff       	sbrs	r16, 7
    1106:	09 c0       	rjmp	.+18     	; 0x111a <vfprintf+0x55c>
    1108:	84 e0       	ldi	r24, 0x04	; 4
    110a:	a8 0e       	add	r10, r24
    110c:	b1 1c       	adc	r11, r1
    110e:	f6 01       	movw	r30, r12
    1110:	60 81       	ld	r22, Z
    1112:	71 81       	ldd	r23, Z+1	; 0x01
    1114:	82 81       	ldd	r24, Z+2	; 0x02
    1116:	93 81       	ldd	r25, Z+3	; 0x03
    1118:	08 c0       	rjmp	.+16     	; 0x112a <vfprintf+0x56c>
    111a:	f2 e0       	ldi	r31, 0x02	; 2
    111c:	af 0e       	add	r10, r31
    111e:	b1 1c       	adc	r11, r1
    1120:	f6 01       	movw	r30, r12
    1122:	60 81       	ld	r22, Z
    1124:	71 81       	ldd	r23, Z+1	; 0x01
    1126:	80 e0       	ldi	r24, 0x00	; 0
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	a3 01       	movw	r20, r6
    112c:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <__ultoa_invert>
    1130:	c8 2e       	mov	r12, r24
    1132:	c6 18       	sub	r12, r6
    1134:	0f 77       	andi	r16, 0x7F	; 127
    1136:	90 2e       	mov	r9, r16
    1138:	96 fe       	sbrs	r9, 6
    113a:	0b c0       	rjmp	.+22     	; 0x1152 <vfprintf+0x594>
    113c:	09 2d       	mov	r16, r9
    113e:	0e 7f       	andi	r16, 0xFE	; 254
    1140:	c1 16       	cp	r12, r17
    1142:	50 f4       	brcc	.+20     	; 0x1158 <vfprintf+0x59a>
    1144:	94 fe       	sbrs	r9, 4
    1146:	0a c0       	rjmp	.+20     	; 0x115c <vfprintf+0x59e>
    1148:	92 fc       	sbrc	r9, 2
    114a:	08 c0       	rjmp	.+16     	; 0x115c <vfprintf+0x59e>
    114c:	09 2d       	mov	r16, r9
    114e:	0e 7e       	andi	r16, 0xEE	; 238
    1150:	05 c0       	rjmp	.+10     	; 0x115c <vfprintf+0x59e>
    1152:	dc 2c       	mov	r13, r12
    1154:	09 2d       	mov	r16, r9
    1156:	03 c0       	rjmp	.+6      	; 0x115e <vfprintf+0x5a0>
    1158:	dc 2c       	mov	r13, r12
    115a:	01 c0       	rjmp	.+2      	; 0x115e <vfprintf+0x5a0>
    115c:	d1 2e       	mov	r13, r17
    115e:	04 ff       	sbrs	r16, 4
    1160:	0d c0       	rjmp	.+26     	; 0x117c <vfprintf+0x5be>
    1162:	fe 01       	movw	r30, r28
    1164:	ec 0d       	add	r30, r12
    1166:	f1 1d       	adc	r31, r1
    1168:	80 81       	ld	r24, Z
    116a:	80 33       	cpi	r24, 0x30	; 48
    116c:	11 f4       	brne	.+4      	; 0x1172 <vfprintf+0x5b4>
    116e:	09 7e       	andi	r16, 0xE9	; 233
    1170:	09 c0       	rjmp	.+18     	; 0x1184 <vfprintf+0x5c6>
    1172:	02 ff       	sbrs	r16, 2
    1174:	06 c0       	rjmp	.+12     	; 0x1182 <vfprintf+0x5c4>
    1176:	d3 94       	inc	r13
    1178:	d3 94       	inc	r13
    117a:	04 c0       	rjmp	.+8      	; 0x1184 <vfprintf+0x5c6>
    117c:	80 2f       	mov	r24, r16
    117e:	86 78       	andi	r24, 0x86	; 134
    1180:	09 f0       	breq	.+2      	; 0x1184 <vfprintf+0x5c6>
    1182:	d3 94       	inc	r13
    1184:	03 fd       	sbrc	r16, 3
    1186:	11 c0       	rjmp	.+34     	; 0x11aa <vfprintf+0x5ec>
    1188:	00 ff       	sbrs	r16, 0
    118a:	06 c0       	rjmp	.+12     	; 0x1198 <vfprintf+0x5da>
    118c:	1c 2d       	mov	r17, r12
    118e:	d5 14       	cp	r13, r5
    1190:	80 f4       	brcc	.+32     	; 0x11b2 <vfprintf+0x5f4>
    1192:	15 0d       	add	r17, r5
    1194:	1d 19       	sub	r17, r13
    1196:	0d c0       	rjmp	.+26     	; 0x11b2 <vfprintf+0x5f4>
    1198:	d5 14       	cp	r13, r5
    119a:	58 f4       	brcc	.+22     	; 0x11b2 <vfprintf+0x5f4>
    119c:	b7 01       	movw	r22, r14
    119e:	80 e2       	ldi	r24, 0x20	; 32
    11a0:	90 e0       	ldi	r25, 0x00	; 0
    11a2:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    11a6:	d3 94       	inc	r13
    11a8:	f7 cf       	rjmp	.-18     	; 0x1198 <vfprintf+0x5da>
    11aa:	d5 14       	cp	r13, r5
    11ac:	10 f4       	brcc	.+4      	; 0x11b2 <vfprintf+0x5f4>
    11ae:	5d 18       	sub	r5, r13
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <vfprintf+0x5f6>
    11b2:	51 2c       	mov	r5, r1
    11b4:	04 ff       	sbrs	r16, 4
    11b6:	10 c0       	rjmp	.+32     	; 0x11d8 <vfprintf+0x61a>
    11b8:	b7 01       	movw	r22, r14
    11ba:	80 e3       	ldi	r24, 0x30	; 48
    11bc:	90 e0       	ldi	r25, 0x00	; 0
    11be:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    11c2:	02 ff       	sbrs	r16, 2
    11c4:	17 c0       	rjmp	.+46     	; 0x11f4 <vfprintf+0x636>
    11c6:	01 fd       	sbrc	r16, 1
    11c8:	03 c0       	rjmp	.+6      	; 0x11d0 <vfprintf+0x612>
    11ca:	88 e7       	ldi	r24, 0x78	; 120
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <vfprintf+0x616>
    11d0:	88 e5       	ldi	r24, 0x58	; 88
    11d2:	90 e0       	ldi	r25, 0x00	; 0
    11d4:	b7 01       	movw	r22, r14
    11d6:	0c c0       	rjmp	.+24     	; 0x11f0 <vfprintf+0x632>
    11d8:	80 2f       	mov	r24, r16
    11da:	86 78       	andi	r24, 0x86	; 134
    11dc:	59 f0       	breq	.+22     	; 0x11f4 <vfprintf+0x636>
    11de:	01 ff       	sbrs	r16, 1
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <vfprintf+0x628>
    11e2:	8b e2       	ldi	r24, 0x2B	; 43
    11e4:	01 c0       	rjmp	.+2      	; 0x11e8 <vfprintf+0x62a>
    11e6:	80 e2       	ldi	r24, 0x20	; 32
    11e8:	07 fd       	sbrc	r16, 7
    11ea:	8d e2       	ldi	r24, 0x2D	; 45
    11ec:	b7 01       	movw	r22, r14
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    11f4:	c1 16       	cp	r12, r17
    11f6:	38 f4       	brcc	.+14     	; 0x1206 <vfprintf+0x648>
    11f8:	b7 01       	movw	r22, r14
    11fa:	80 e3       	ldi	r24, 0x30	; 48
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    1202:	11 50       	subi	r17, 0x01	; 1
    1204:	f7 cf       	rjmp	.-18     	; 0x11f4 <vfprintf+0x636>
    1206:	ca 94       	dec	r12
    1208:	f3 01       	movw	r30, r6
    120a:	ec 0d       	add	r30, r12
    120c:	f1 1d       	adc	r31, r1
    120e:	80 81       	ld	r24, Z
    1210:	b7 01       	movw	r22, r14
    1212:	90 e0       	ldi	r25, 0x00	; 0
    1214:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    1218:	c1 10       	cpse	r12, r1
    121a:	f5 cf       	rjmp	.-22     	; 0x1206 <vfprintf+0x648>
    121c:	15 c0       	rjmp	.+42     	; 0x1248 <vfprintf+0x68a>
    121e:	f4 e0       	ldi	r31, 0x04	; 4
    1220:	f5 15       	cp	r31, r5
    1222:	60 f5       	brcc	.+88     	; 0x127c <vfprintf+0x6be>
    1224:	84 e0       	ldi	r24, 0x04	; 4
    1226:	58 1a       	sub	r5, r24
    1228:	93 fe       	sbrs	r9, 3
    122a:	1f c0       	rjmp	.+62     	; 0x126a <vfprintf+0x6ac>
    122c:	01 11       	cpse	r16, r1
    122e:	27 c0       	rjmp	.+78     	; 0x127e <vfprintf+0x6c0>
    1230:	2c 85       	ldd	r18, Y+12	; 0x0c
    1232:	23 ff       	sbrs	r18, 3
    1234:	2a c0       	rjmp	.+84     	; 0x128a <vfprintf+0x6cc>
    1236:	0c ec       	ldi	r16, 0xCC	; 204
    1238:	10 e0       	ldi	r17, 0x00	; 0
    123a:	39 2d       	mov	r19, r9
    123c:	30 71       	andi	r19, 0x10	; 16
    123e:	93 2e       	mov	r9, r19
    1240:	f8 01       	movw	r30, r16
    1242:	84 91       	lpm	r24, Z
    1244:	81 11       	cpse	r24, r1
    1246:	24 c0       	rjmp	.+72     	; 0x1290 <vfprintf+0x6d2>
    1248:	55 20       	and	r5, r5
    124a:	09 f4       	brne	.+2      	; 0x124e <vfprintf+0x690>
    124c:	e4 cc       	rjmp	.-1592   	; 0xc16 <vfprintf+0x58>
    124e:	b7 01       	movw	r22, r14
    1250:	80 e2       	ldi	r24, 0x20	; 32
    1252:	90 e0       	ldi	r25, 0x00	; 0
    1254:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    1258:	5a 94       	dec	r5
    125a:	f6 cf       	rjmp	.-20     	; 0x1248 <vfprintf+0x68a>
    125c:	f7 01       	movw	r30, r14
    125e:	86 81       	ldd	r24, Z+6	; 0x06
    1260:	97 81       	ldd	r25, Z+7	; 0x07
    1262:	26 c0       	rjmp	.+76     	; 0x12b0 <vfprintf+0x6f2>
    1264:	8f ef       	ldi	r24, 0xFF	; 255
    1266:	9f ef       	ldi	r25, 0xFF	; 255
    1268:	23 c0       	rjmp	.+70     	; 0x12b0 <vfprintf+0x6f2>
    126a:	b7 01       	movw	r22, r14
    126c:	80 e2       	ldi	r24, 0x20	; 32
    126e:	90 e0       	ldi	r25, 0x00	; 0
    1270:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    1274:	5a 94       	dec	r5
    1276:	51 10       	cpse	r5, r1
    1278:	f8 cf       	rjmp	.-16     	; 0x126a <vfprintf+0x6ac>
    127a:	d8 cf       	rjmp	.-80     	; 0x122c <vfprintf+0x66e>
    127c:	51 2c       	mov	r5, r1
    127e:	b7 01       	movw	r22, r14
    1280:	80 2f       	mov	r24, r16
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    1288:	d3 cf       	rjmp	.-90     	; 0x1230 <vfprintf+0x672>
    128a:	00 ed       	ldi	r16, 0xD0	; 208
    128c:	10 e0       	ldi	r17, 0x00	; 0
    128e:	d5 cf       	rjmp	.-86     	; 0x123a <vfprintf+0x67c>
    1290:	91 10       	cpse	r9, r1
    1292:	80 52       	subi	r24, 0x20	; 32
    1294:	b7 01       	movw	r22, r14
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	0e 94 5f 0c 	call	0x18be	; 0x18be <fputc>
    129c:	0f 5f       	subi	r16, 0xFF	; 255
    129e:	1f 4f       	sbci	r17, 0xFF	; 255
    12a0:	cf cf       	rjmp	.-98     	; 0x1240 <vfprintf+0x682>
    12a2:	23 e0       	ldi	r18, 0x03	; 3
    12a4:	25 15       	cp	r18, r5
    12a6:	10 f4       	brcc	.+4      	; 0x12ac <vfprintf+0x6ee>
    12a8:	83 e0       	ldi	r24, 0x03	; 3
    12aa:	bd cf       	rjmp	.-134    	; 0x1226 <vfprintf+0x668>
    12ac:	51 2c       	mov	r5, r1
    12ae:	c0 cf       	rjmp	.-128    	; 0x1230 <vfprintf+0x672>
    12b0:	60 96       	adiw	r28, 0x10	; 16
    12b2:	e2 e1       	ldi	r30, 0x12	; 18
    12b4:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <__epilogue_restores__>

000012b8 <__udivmodsi4>:
    12b8:	a1 e2       	ldi	r26, 0x21	; 33
    12ba:	1a 2e       	mov	r1, r26
    12bc:	aa 1b       	sub	r26, r26
    12be:	bb 1b       	sub	r27, r27
    12c0:	fd 01       	movw	r30, r26
    12c2:	0d c0       	rjmp	.+26     	; 0x12de <__udivmodsi4_ep>

000012c4 <__udivmodsi4_loop>:
    12c4:	aa 1f       	adc	r26, r26
    12c6:	bb 1f       	adc	r27, r27
    12c8:	ee 1f       	adc	r30, r30
    12ca:	ff 1f       	adc	r31, r31
    12cc:	a2 17       	cp	r26, r18
    12ce:	b3 07       	cpc	r27, r19
    12d0:	e4 07       	cpc	r30, r20
    12d2:	f5 07       	cpc	r31, r21
    12d4:	20 f0       	brcs	.+8      	; 0x12de <__udivmodsi4_ep>
    12d6:	a2 1b       	sub	r26, r18
    12d8:	b3 0b       	sbc	r27, r19
    12da:	e4 0b       	sbc	r30, r20
    12dc:	f5 0b       	sbc	r31, r21

000012de <__udivmodsi4_ep>:
    12de:	66 1f       	adc	r22, r22
    12e0:	77 1f       	adc	r23, r23
    12e2:	88 1f       	adc	r24, r24
    12e4:	99 1f       	adc	r25, r25
    12e6:	1a 94       	dec	r1
    12e8:	69 f7       	brne	.-38     	; 0x12c4 <__udivmodsi4_loop>
    12ea:	60 95       	com	r22
    12ec:	70 95       	com	r23
    12ee:	80 95       	com	r24
    12f0:	90 95       	com	r25
    12f2:	9b 01       	movw	r18, r22
    12f4:	ac 01       	movw	r20, r24
    12f6:	bd 01       	movw	r22, r26
    12f8:	cf 01       	movw	r24, r30
    12fa:	08 95       	ret

000012fc <__prologue_saves__>:
    12fc:	2f 92       	push	r2
    12fe:	3f 92       	push	r3
    1300:	4f 92       	push	r4
    1302:	5f 92       	push	r5
    1304:	6f 92       	push	r6
    1306:	7f 92       	push	r7
    1308:	8f 92       	push	r8
    130a:	9f 92       	push	r9
    130c:	af 92       	push	r10
    130e:	bf 92       	push	r11
    1310:	cf 92       	push	r12
    1312:	df 92       	push	r13
    1314:	ef 92       	push	r14
    1316:	ff 92       	push	r15
    1318:	0f 93       	push	r16
    131a:	1f 93       	push	r17
    131c:	cf 93       	push	r28
    131e:	df 93       	push	r29
    1320:	cd b7       	in	r28, 0x3d	; 61
    1322:	de b7       	in	r29, 0x3e	; 62
    1324:	ca 1b       	sub	r28, r26
    1326:	db 0b       	sbc	r29, r27
    1328:	0f b6       	in	r0, 0x3f	; 63
    132a:	f8 94       	cli
    132c:	de bf       	out	0x3e, r29	; 62
    132e:	0f be       	out	0x3f, r0	; 63
    1330:	cd bf       	out	0x3d, r28	; 61
    1332:	09 94       	ijmp

00001334 <__epilogue_restores__>:
    1334:	2a 88       	ldd	r2, Y+18	; 0x12
    1336:	39 88       	ldd	r3, Y+17	; 0x11
    1338:	48 88       	ldd	r4, Y+16	; 0x10
    133a:	5f 84       	ldd	r5, Y+15	; 0x0f
    133c:	6e 84       	ldd	r6, Y+14	; 0x0e
    133e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1340:	8c 84       	ldd	r8, Y+12	; 0x0c
    1342:	9b 84       	ldd	r9, Y+11	; 0x0b
    1344:	aa 84       	ldd	r10, Y+10	; 0x0a
    1346:	b9 84       	ldd	r11, Y+9	; 0x09
    1348:	c8 84       	ldd	r12, Y+8	; 0x08
    134a:	df 80       	ldd	r13, Y+7	; 0x07
    134c:	ee 80       	ldd	r14, Y+6	; 0x06
    134e:	fd 80       	ldd	r15, Y+5	; 0x05
    1350:	0c 81       	ldd	r16, Y+4	; 0x04
    1352:	1b 81       	ldd	r17, Y+3	; 0x03
    1354:	aa 81       	ldd	r26, Y+2	; 0x02
    1356:	b9 81       	ldd	r27, Y+1	; 0x01
    1358:	ce 0f       	add	r28, r30
    135a:	d1 1d       	adc	r29, r1
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	f8 94       	cli
    1360:	de bf       	out	0x3e, r29	; 62
    1362:	0f be       	out	0x3f, r0	; 63
    1364:	cd bf       	out	0x3d, r28	; 61
    1366:	ed 01       	movw	r28, r26
    1368:	08 95       	ret

0000136a <__divsf3>:
    136a:	0e 94 c9 09 	call	0x1392	; 0x1392 <__divsf3x>
    136e:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__fp_round>
    1372:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__fp_pscB>
    1376:	58 f0       	brcs	.+22     	; 0x138e <__divsf3+0x24>
    1378:	0e 94 a3 0a 	call	0x1546	; 0x1546 <__fp_pscA>
    137c:	40 f0       	brcs	.+16     	; 0x138e <__divsf3+0x24>
    137e:	29 f4       	brne	.+10     	; 0x138a <__divsf3+0x20>
    1380:	5f 3f       	cpi	r21, 0xFF	; 255
    1382:	29 f0       	breq	.+10     	; 0x138e <__divsf3+0x24>
    1384:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_inf>
    1388:	51 11       	cpse	r21, r1
    138a:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__fp_szero>
    138e:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <__fp_nan>

00001392 <__divsf3x>:
    1392:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fp_split3>
    1396:	68 f3       	brcs	.-38     	; 0x1372 <__divsf3+0x8>

00001398 <__divsf3_pse>:
    1398:	99 23       	and	r25, r25
    139a:	b1 f3       	breq	.-20     	; 0x1388 <__divsf3+0x1e>
    139c:	55 23       	and	r21, r21
    139e:	91 f3       	breq	.-28     	; 0x1384 <__divsf3+0x1a>
    13a0:	95 1b       	sub	r25, r21
    13a2:	55 0b       	sbc	r21, r21
    13a4:	bb 27       	eor	r27, r27
    13a6:	aa 27       	eor	r26, r26
    13a8:	62 17       	cp	r22, r18
    13aa:	73 07       	cpc	r23, r19
    13ac:	84 07       	cpc	r24, r20
    13ae:	38 f0       	brcs	.+14     	; 0x13be <__divsf3_pse+0x26>
    13b0:	9f 5f       	subi	r25, 0xFF	; 255
    13b2:	5f 4f       	sbci	r21, 0xFF	; 255
    13b4:	22 0f       	add	r18, r18
    13b6:	33 1f       	adc	r19, r19
    13b8:	44 1f       	adc	r20, r20
    13ba:	aa 1f       	adc	r26, r26
    13bc:	a9 f3       	breq	.-22     	; 0x13a8 <__divsf3_pse+0x10>
    13be:	35 d0       	rcall	.+106    	; 0x142a <__divsf3_pse+0x92>
    13c0:	0e 2e       	mov	r0, r30
    13c2:	3a f0       	brmi	.+14     	; 0x13d2 <__divsf3_pse+0x3a>
    13c4:	e0 e8       	ldi	r30, 0x80	; 128
    13c6:	32 d0       	rcall	.+100    	; 0x142c <__divsf3_pse+0x94>
    13c8:	91 50       	subi	r25, 0x01	; 1
    13ca:	50 40       	sbci	r21, 0x00	; 0
    13cc:	e6 95       	lsr	r30
    13ce:	00 1c       	adc	r0, r0
    13d0:	ca f7       	brpl	.-14     	; 0x13c4 <__divsf3_pse+0x2c>
    13d2:	2b d0       	rcall	.+86     	; 0x142a <__divsf3_pse+0x92>
    13d4:	fe 2f       	mov	r31, r30
    13d6:	29 d0       	rcall	.+82     	; 0x142a <__divsf3_pse+0x92>
    13d8:	66 0f       	add	r22, r22
    13da:	77 1f       	adc	r23, r23
    13dc:	88 1f       	adc	r24, r24
    13de:	bb 1f       	adc	r27, r27
    13e0:	26 17       	cp	r18, r22
    13e2:	37 07       	cpc	r19, r23
    13e4:	48 07       	cpc	r20, r24
    13e6:	ab 07       	cpc	r26, r27
    13e8:	b0 e8       	ldi	r27, 0x80	; 128
    13ea:	09 f0       	breq	.+2      	; 0x13ee <__divsf3_pse+0x56>
    13ec:	bb 0b       	sbc	r27, r27
    13ee:	80 2d       	mov	r24, r0
    13f0:	bf 01       	movw	r22, r30
    13f2:	ff 27       	eor	r31, r31
    13f4:	93 58       	subi	r25, 0x83	; 131
    13f6:	5f 4f       	sbci	r21, 0xFF	; 255
    13f8:	3a f0       	brmi	.+14     	; 0x1408 <__divsf3_pse+0x70>
    13fa:	9e 3f       	cpi	r25, 0xFE	; 254
    13fc:	51 05       	cpc	r21, r1
    13fe:	78 f0       	brcs	.+30     	; 0x141e <__divsf3_pse+0x86>
    1400:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_inf>
    1404:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__fp_szero>
    1408:	5f 3f       	cpi	r21, 0xFF	; 255
    140a:	e4 f3       	brlt	.-8      	; 0x1404 <__divsf3_pse+0x6c>
    140c:	98 3e       	cpi	r25, 0xE8	; 232
    140e:	d4 f3       	brlt	.-12     	; 0x1404 <__divsf3_pse+0x6c>
    1410:	86 95       	lsr	r24
    1412:	77 95       	ror	r23
    1414:	67 95       	ror	r22
    1416:	b7 95       	ror	r27
    1418:	f7 95       	ror	r31
    141a:	9f 5f       	subi	r25, 0xFF	; 255
    141c:	c9 f7       	brne	.-14     	; 0x1410 <__divsf3_pse+0x78>
    141e:	88 0f       	add	r24, r24
    1420:	91 1d       	adc	r25, r1
    1422:	96 95       	lsr	r25
    1424:	87 95       	ror	r24
    1426:	97 f9       	bld	r25, 7
    1428:	08 95       	ret
    142a:	e1 e0       	ldi	r30, 0x01	; 1
    142c:	66 0f       	add	r22, r22
    142e:	77 1f       	adc	r23, r23
    1430:	88 1f       	adc	r24, r24
    1432:	bb 1f       	adc	r27, r27
    1434:	62 17       	cp	r22, r18
    1436:	73 07       	cpc	r23, r19
    1438:	84 07       	cpc	r24, r20
    143a:	ba 07       	cpc	r27, r26
    143c:	20 f0       	brcs	.+8      	; 0x1446 <__divsf3_pse+0xae>
    143e:	62 1b       	sub	r22, r18
    1440:	73 0b       	sbc	r23, r19
    1442:	84 0b       	sbc	r24, r20
    1444:	ba 0b       	sbc	r27, r26
    1446:	ee 1f       	adc	r30, r30
    1448:	88 f7       	brcc	.-30     	; 0x142c <__divsf3_pse+0x94>
    144a:	e0 95       	com	r30
    144c:	08 95       	ret

0000144e <__fixsfsi>:
    144e:	0e 94 2e 0a 	call	0x145c	; 0x145c <__fixunssfsi>
    1452:	68 94       	set
    1454:	b1 11       	cpse	r27, r1
    1456:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__fp_szero>
    145a:	08 95       	ret

0000145c <__fixunssfsi>:
    145c:	0e 94 ca 0a 	call	0x1594	; 0x1594 <__fp_splitA>
    1460:	88 f0       	brcs	.+34     	; 0x1484 <__fixunssfsi+0x28>
    1462:	9f 57       	subi	r25, 0x7F	; 127
    1464:	98 f0       	brcs	.+38     	; 0x148c <__fixunssfsi+0x30>
    1466:	b9 2f       	mov	r27, r25
    1468:	99 27       	eor	r25, r25
    146a:	b7 51       	subi	r27, 0x17	; 23
    146c:	b0 f0       	brcs	.+44     	; 0x149a <__fixunssfsi+0x3e>
    146e:	e1 f0       	breq	.+56     	; 0x14a8 <__fixunssfsi+0x4c>
    1470:	66 0f       	add	r22, r22
    1472:	77 1f       	adc	r23, r23
    1474:	88 1f       	adc	r24, r24
    1476:	99 1f       	adc	r25, r25
    1478:	1a f0       	brmi	.+6      	; 0x1480 <__fixunssfsi+0x24>
    147a:	ba 95       	dec	r27
    147c:	c9 f7       	brne	.-14     	; 0x1470 <__fixunssfsi+0x14>
    147e:	14 c0       	rjmp	.+40     	; 0x14a8 <__fixunssfsi+0x4c>
    1480:	b1 30       	cpi	r27, 0x01	; 1
    1482:	91 f0       	breq	.+36     	; 0x14a8 <__fixunssfsi+0x4c>
    1484:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <__fp_zero>
    1488:	b1 e0       	ldi	r27, 0x01	; 1
    148a:	08 95       	ret
    148c:	0c 94 e4 0a 	jmp	0x15c8	; 0x15c8 <__fp_zero>
    1490:	67 2f       	mov	r22, r23
    1492:	78 2f       	mov	r23, r24
    1494:	88 27       	eor	r24, r24
    1496:	b8 5f       	subi	r27, 0xF8	; 248
    1498:	39 f0       	breq	.+14     	; 0x14a8 <__fixunssfsi+0x4c>
    149a:	b9 3f       	cpi	r27, 0xF9	; 249
    149c:	cc f3       	brlt	.-14     	; 0x1490 <__fixunssfsi+0x34>
    149e:	86 95       	lsr	r24
    14a0:	77 95       	ror	r23
    14a2:	67 95       	ror	r22
    14a4:	b3 95       	inc	r27
    14a6:	d9 f7       	brne	.-10     	; 0x149e <__fixunssfsi+0x42>
    14a8:	3e f4       	brtc	.+14     	; 0x14b8 <__fixunssfsi+0x5c>
    14aa:	90 95       	com	r25
    14ac:	80 95       	com	r24
    14ae:	70 95       	com	r23
    14b0:	61 95       	neg	r22
    14b2:	7f 4f       	sbci	r23, 0xFF	; 255
    14b4:	8f 4f       	sbci	r24, 0xFF	; 255
    14b6:	9f 4f       	sbci	r25, 0xFF	; 255
    14b8:	08 95       	ret

000014ba <__floatunsisf>:
    14ba:	e8 94       	clt
    14bc:	09 c0       	rjmp	.+18     	; 0x14d0 <__floatsisf+0x12>

000014be <__floatsisf>:
    14be:	97 fb       	bst	r25, 7
    14c0:	3e f4       	brtc	.+14     	; 0x14d0 <__floatsisf+0x12>
    14c2:	90 95       	com	r25
    14c4:	80 95       	com	r24
    14c6:	70 95       	com	r23
    14c8:	61 95       	neg	r22
    14ca:	7f 4f       	sbci	r23, 0xFF	; 255
    14cc:	8f 4f       	sbci	r24, 0xFF	; 255
    14ce:	9f 4f       	sbci	r25, 0xFF	; 255
    14d0:	99 23       	and	r25, r25
    14d2:	a9 f0       	breq	.+42     	; 0x14fe <__floatsisf+0x40>
    14d4:	f9 2f       	mov	r31, r25
    14d6:	96 e9       	ldi	r25, 0x96	; 150
    14d8:	bb 27       	eor	r27, r27
    14da:	93 95       	inc	r25
    14dc:	f6 95       	lsr	r31
    14de:	87 95       	ror	r24
    14e0:	77 95       	ror	r23
    14e2:	67 95       	ror	r22
    14e4:	b7 95       	ror	r27
    14e6:	f1 11       	cpse	r31, r1
    14e8:	f8 cf       	rjmp	.-16     	; 0x14da <__floatsisf+0x1c>
    14ea:	fa f4       	brpl	.+62     	; 0x152a <__floatsisf+0x6c>
    14ec:	bb 0f       	add	r27, r27
    14ee:	11 f4       	brne	.+4      	; 0x14f4 <__floatsisf+0x36>
    14f0:	60 ff       	sbrs	r22, 0
    14f2:	1b c0       	rjmp	.+54     	; 0x152a <__floatsisf+0x6c>
    14f4:	6f 5f       	subi	r22, 0xFF	; 255
    14f6:	7f 4f       	sbci	r23, 0xFF	; 255
    14f8:	8f 4f       	sbci	r24, 0xFF	; 255
    14fa:	9f 4f       	sbci	r25, 0xFF	; 255
    14fc:	16 c0       	rjmp	.+44     	; 0x152a <__floatsisf+0x6c>
    14fe:	88 23       	and	r24, r24
    1500:	11 f0       	breq	.+4      	; 0x1506 <__floatsisf+0x48>
    1502:	96 e9       	ldi	r25, 0x96	; 150
    1504:	11 c0       	rjmp	.+34     	; 0x1528 <__floatsisf+0x6a>
    1506:	77 23       	and	r23, r23
    1508:	21 f0       	breq	.+8      	; 0x1512 <__floatsisf+0x54>
    150a:	9e e8       	ldi	r25, 0x8E	; 142
    150c:	87 2f       	mov	r24, r23
    150e:	76 2f       	mov	r23, r22
    1510:	05 c0       	rjmp	.+10     	; 0x151c <__floatsisf+0x5e>
    1512:	66 23       	and	r22, r22
    1514:	71 f0       	breq	.+28     	; 0x1532 <__floatsisf+0x74>
    1516:	96 e8       	ldi	r25, 0x86	; 134
    1518:	86 2f       	mov	r24, r22
    151a:	70 e0       	ldi	r23, 0x00	; 0
    151c:	60 e0       	ldi	r22, 0x00	; 0
    151e:	2a f0       	brmi	.+10     	; 0x152a <__floatsisf+0x6c>
    1520:	9a 95       	dec	r25
    1522:	66 0f       	add	r22, r22
    1524:	77 1f       	adc	r23, r23
    1526:	88 1f       	adc	r24, r24
    1528:	da f7       	brpl	.-10     	; 0x1520 <__floatsisf+0x62>
    152a:	88 0f       	add	r24, r24
    152c:	96 95       	lsr	r25
    152e:	87 95       	ror	r24
    1530:	97 f9       	bld	r25, 7
    1532:	08 95       	ret

00001534 <__fp_inf>:
    1534:	97 f9       	bld	r25, 7
    1536:	9f 67       	ori	r25, 0x7F	; 127
    1538:	80 e8       	ldi	r24, 0x80	; 128
    153a:	70 e0       	ldi	r23, 0x00	; 0
    153c:	60 e0       	ldi	r22, 0x00	; 0
    153e:	08 95       	ret

00001540 <__fp_nan>:
    1540:	9f ef       	ldi	r25, 0xFF	; 255
    1542:	80 ec       	ldi	r24, 0xC0	; 192
    1544:	08 95       	ret

00001546 <__fp_pscA>:
    1546:	00 24       	eor	r0, r0
    1548:	0a 94       	dec	r0
    154a:	16 16       	cp	r1, r22
    154c:	17 06       	cpc	r1, r23
    154e:	18 06       	cpc	r1, r24
    1550:	09 06       	cpc	r0, r25
    1552:	08 95       	ret

00001554 <__fp_pscB>:
    1554:	00 24       	eor	r0, r0
    1556:	0a 94       	dec	r0
    1558:	12 16       	cp	r1, r18
    155a:	13 06       	cpc	r1, r19
    155c:	14 06       	cpc	r1, r20
    155e:	05 06       	cpc	r0, r21
    1560:	08 95       	ret

00001562 <__fp_round>:
    1562:	09 2e       	mov	r0, r25
    1564:	03 94       	inc	r0
    1566:	00 0c       	add	r0, r0
    1568:	11 f4       	brne	.+4      	; 0x156e <__fp_round+0xc>
    156a:	88 23       	and	r24, r24
    156c:	52 f0       	brmi	.+20     	; 0x1582 <__fp_round+0x20>
    156e:	bb 0f       	add	r27, r27
    1570:	40 f4       	brcc	.+16     	; 0x1582 <__fp_round+0x20>
    1572:	bf 2b       	or	r27, r31
    1574:	11 f4       	brne	.+4      	; 0x157a <__fp_round+0x18>
    1576:	60 ff       	sbrs	r22, 0
    1578:	04 c0       	rjmp	.+8      	; 0x1582 <__fp_round+0x20>
    157a:	6f 5f       	subi	r22, 0xFF	; 255
    157c:	7f 4f       	sbci	r23, 0xFF	; 255
    157e:	8f 4f       	sbci	r24, 0xFF	; 255
    1580:	9f 4f       	sbci	r25, 0xFF	; 255
    1582:	08 95       	ret

00001584 <__fp_split3>:
    1584:	57 fd       	sbrc	r21, 7
    1586:	90 58       	subi	r25, 0x80	; 128
    1588:	44 0f       	add	r20, r20
    158a:	55 1f       	adc	r21, r21
    158c:	59 f0       	breq	.+22     	; 0x15a4 <__fp_splitA+0x10>
    158e:	5f 3f       	cpi	r21, 0xFF	; 255
    1590:	71 f0       	breq	.+28     	; 0x15ae <__fp_splitA+0x1a>
    1592:	47 95       	ror	r20

00001594 <__fp_splitA>:
    1594:	88 0f       	add	r24, r24
    1596:	97 fb       	bst	r25, 7
    1598:	99 1f       	adc	r25, r25
    159a:	61 f0       	breq	.+24     	; 0x15b4 <__fp_splitA+0x20>
    159c:	9f 3f       	cpi	r25, 0xFF	; 255
    159e:	79 f0       	breq	.+30     	; 0x15be <__fp_splitA+0x2a>
    15a0:	87 95       	ror	r24
    15a2:	08 95       	ret
    15a4:	12 16       	cp	r1, r18
    15a6:	13 06       	cpc	r1, r19
    15a8:	14 06       	cpc	r1, r20
    15aa:	55 1f       	adc	r21, r21
    15ac:	f2 cf       	rjmp	.-28     	; 0x1592 <__fp_split3+0xe>
    15ae:	46 95       	lsr	r20
    15b0:	f1 df       	rcall	.-30     	; 0x1594 <__fp_splitA>
    15b2:	08 c0       	rjmp	.+16     	; 0x15c4 <__fp_splitA+0x30>
    15b4:	16 16       	cp	r1, r22
    15b6:	17 06       	cpc	r1, r23
    15b8:	18 06       	cpc	r1, r24
    15ba:	99 1f       	adc	r25, r25
    15bc:	f1 cf       	rjmp	.-30     	; 0x15a0 <__fp_splitA+0xc>
    15be:	86 95       	lsr	r24
    15c0:	71 05       	cpc	r23, r1
    15c2:	61 05       	cpc	r22, r1
    15c4:	08 94       	sec
    15c6:	08 95       	ret

000015c8 <__fp_zero>:
    15c8:	e8 94       	clt

000015ca <__fp_szero>:
    15ca:	bb 27       	eor	r27, r27
    15cc:	66 27       	eor	r22, r22
    15ce:	77 27       	eor	r23, r23
    15d0:	cb 01       	movw	r24, r22
    15d2:	97 f9       	bld	r25, 7
    15d4:	08 95       	ret

000015d6 <__mulsf3>:
    15d6:	0e 94 fe 0a 	call	0x15fc	; 0x15fc <__mulsf3x>
    15da:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__fp_round>
    15de:	0e 94 a3 0a 	call	0x1546	; 0x1546 <__fp_pscA>
    15e2:	38 f0       	brcs	.+14     	; 0x15f2 <__mulsf3+0x1c>
    15e4:	0e 94 aa 0a 	call	0x1554	; 0x1554 <__fp_pscB>
    15e8:	20 f0       	brcs	.+8      	; 0x15f2 <__mulsf3+0x1c>
    15ea:	95 23       	and	r25, r21
    15ec:	11 f0       	breq	.+4      	; 0x15f2 <__mulsf3+0x1c>
    15ee:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_inf>
    15f2:	0c 94 a0 0a 	jmp	0x1540	; 0x1540 <__fp_nan>
    15f6:	11 24       	eor	r1, r1
    15f8:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__fp_szero>

000015fc <__mulsf3x>:
    15fc:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fp_split3>
    1600:	70 f3       	brcs	.-36     	; 0x15de <__mulsf3+0x8>

00001602 <__mulsf3_pse>:
    1602:	95 9f       	mul	r25, r21
    1604:	c1 f3       	breq	.-16     	; 0x15f6 <__mulsf3+0x20>
    1606:	95 0f       	add	r25, r21
    1608:	50 e0       	ldi	r21, 0x00	; 0
    160a:	55 1f       	adc	r21, r21
    160c:	62 9f       	mul	r22, r18
    160e:	f0 01       	movw	r30, r0
    1610:	72 9f       	mul	r23, r18
    1612:	bb 27       	eor	r27, r27
    1614:	f0 0d       	add	r31, r0
    1616:	b1 1d       	adc	r27, r1
    1618:	63 9f       	mul	r22, r19
    161a:	aa 27       	eor	r26, r26
    161c:	f0 0d       	add	r31, r0
    161e:	b1 1d       	adc	r27, r1
    1620:	aa 1f       	adc	r26, r26
    1622:	64 9f       	mul	r22, r20
    1624:	66 27       	eor	r22, r22
    1626:	b0 0d       	add	r27, r0
    1628:	a1 1d       	adc	r26, r1
    162a:	66 1f       	adc	r22, r22
    162c:	82 9f       	mul	r24, r18
    162e:	22 27       	eor	r18, r18
    1630:	b0 0d       	add	r27, r0
    1632:	a1 1d       	adc	r26, r1
    1634:	62 1f       	adc	r22, r18
    1636:	73 9f       	mul	r23, r19
    1638:	b0 0d       	add	r27, r0
    163a:	a1 1d       	adc	r26, r1
    163c:	62 1f       	adc	r22, r18
    163e:	83 9f       	mul	r24, r19
    1640:	a0 0d       	add	r26, r0
    1642:	61 1d       	adc	r22, r1
    1644:	22 1f       	adc	r18, r18
    1646:	74 9f       	mul	r23, r20
    1648:	33 27       	eor	r19, r19
    164a:	a0 0d       	add	r26, r0
    164c:	61 1d       	adc	r22, r1
    164e:	23 1f       	adc	r18, r19
    1650:	84 9f       	mul	r24, r20
    1652:	60 0d       	add	r22, r0
    1654:	21 1d       	adc	r18, r1
    1656:	82 2f       	mov	r24, r18
    1658:	76 2f       	mov	r23, r22
    165a:	6a 2f       	mov	r22, r26
    165c:	11 24       	eor	r1, r1
    165e:	9f 57       	subi	r25, 0x7F	; 127
    1660:	50 40       	sbci	r21, 0x00	; 0
    1662:	9a f0       	brmi	.+38     	; 0x168a <__mulsf3_pse+0x88>
    1664:	f1 f0       	breq	.+60     	; 0x16a2 <__mulsf3_pse+0xa0>
    1666:	88 23       	and	r24, r24
    1668:	4a f0       	brmi	.+18     	; 0x167c <__mulsf3_pse+0x7a>
    166a:	ee 0f       	add	r30, r30
    166c:	ff 1f       	adc	r31, r31
    166e:	bb 1f       	adc	r27, r27
    1670:	66 1f       	adc	r22, r22
    1672:	77 1f       	adc	r23, r23
    1674:	88 1f       	adc	r24, r24
    1676:	91 50       	subi	r25, 0x01	; 1
    1678:	50 40       	sbci	r21, 0x00	; 0
    167a:	a9 f7       	brne	.-22     	; 0x1666 <__mulsf3_pse+0x64>
    167c:	9e 3f       	cpi	r25, 0xFE	; 254
    167e:	51 05       	cpc	r21, r1
    1680:	80 f0       	brcs	.+32     	; 0x16a2 <__mulsf3_pse+0xa0>
    1682:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_inf>
    1686:	0c 94 e5 0a 	jmp	0x15ca	; 0x15ca <__fp_szero>
    168a:	5f 3f       	cpi	r21, 0xFF	; 255
    168c:	e4 f3       	brlt	.-8      	; 0x1686 <__mulsf3_pse+0x84>
    168e:	98 3e       	cpi	r25, 0xE8	; 232
    1690:	d4 f3       	brlt	.-12     	; 0x1686 <__mulsf3_pse+0x84>
    1692:	86 95       	lsr	r24
    1694:	77 95       	ror	r23
    1696:	67 95       	ror	r22
    1698:	b7 95       	ror	r27
    169a:	f7 95       	ror	r31
    169c:	e7 95       	ror	r30
    169e:	9f 5f       	subi	r25, 0xFF	; 255
    16a0:	c1 f7       	brne	.-16     	; 0x1692 <__mulsf3_pse+0x90>
    16a2:	fe 2b       	or	r31, r30
    16a4:	88 0f       	add	r24, r24
    16a6:	91 1d       	adc	r25, r1
    16a8:	96 95       	lsr	r25
    16aa:	87 95       	ror	r24
    16ac:	97 f9       	bld	r25, 7
    16ae:	08 95       	ret

000016b0 <__ftoa_engine>:
    16b0:	28 30       	cpi	r18, 0x08	; 8
    16b2:	08 f0       	brcs	.+2      	; 0x16b6 <__ftoa_engine+0x6>
    16b4:	27 e0       	ldi	r18, 0x07	; 7
    16b6:	33 27       	eor	r19, r19
    16b8:	da 01       	movw	r26, r20
    16ba:	99 0f       	add	r25, r25
    16bc:	31 1d       	adc	r19, r1
    16be:	87 fd       	sbrc	r24, 7
    16c0:	91 60       	ori	r25, 0x01	; 1
    16c2:	00 96       	adiw	r24, 0x00	; 0
    16c4:	61 05       	cpc	r22, r1
    16c6:	71 05       	cpc	r23, r1
    16c8:	39 f4       	brne	.+14     	; 0x16d8 <__ftoa_engine+0x28>
    16ca:	32 60       	ori	r19, 0x02	; 2
    16cc:	2e 5f       	subi	r18, 0xFE	; 254
    16ce:	3d 93       	st	X+, r19
    16d0:	30 e3       	ldi	r19, 0x30	; 48
    16d2:	2a 95       	dec	r18
    16d4:	e1 f7       	brne	.-8      	; 0x16ce <__ftoa_engine+0x1e>
    16d6:	08 95       	ret
    16d8:	9f 3f       	cpi	r25, 0xFF	; 255
    16da:	30 f0       	brcs	.+12     	; 0x16e8 <__ftoa_engine+0x38>
    16dc:	80 38       	cpi	r24, 0x80	; 128
    16de:	71 05       	cpc	r23, r1
    16e0:	61 05       	cpc	r22, r1
    16e2:	09 f0       	breq	.+2      	; 0x16e6 <__ftoa_engine+0x36>
    16e4:	3c 5f       	subi	r19, 0xFC	; 252
    16e6:	3c 5f       	subi	r19, 0xFC	; 252
    16e8:	3d 93       	st	X+, r19
    16ea:	91 30       	cpi	r25, 0x01	; 1
    16ec:	08 f0       	brcs	.+2      	; 0x16f0 <__ftoa_engine+0x40>
    16ee:	80 68       	ori	r24, 0x80	; 128
    16f0:	91 1d       	adc	r25, r1
    16f2:	df 93       	push	r29
    16f4:	cf 93       	push	r28
    16f6:	1f 93       	push	r17
    16f8:	0f 93       	push	r16
    16fa:	ff 92       	push	r15
    16fc:	ef 92       	push	r14
    16fe:	19 2f       	mov	r17, r25
    1700:	98 7f       	andi	r25, 0xF8	; 248
    1702:	96 95       	lsr	r25
    1704:	e9 2f       	mov	r30, r25
    1706:	96 95       	lsr	r25
    1708:	96 95       	lsr	r25
    170a:	e9 0f       	add	r30, r25
    170c:	ff 27       	eor	r31, r31
    170e:	e2 5d       	subi	r30, 0xD2	; 210
    1710:	fe 4f       	sbci	r31, 0xFE	; 254
    1712:	99 27       	eor	r25, r25
    1714:	33 27       	eor	r19, r19
    1716:	ee 24       	eor	r14, r14
    1718:	ff 24       	eor	r15, r15
    171a:	a7 01       	movw	r20, r14
    171c:	e7 01       	movw	r28, r14
    171e:	05 90       	lpm	r0, Z+
    1720:	08 94       	sec
    1722:	07 94       	ror	r0
    1724:	28 f4       	brcc	.+10     	; 0x1730 <__ftoa_engine+0x80>
    1726:	36 0f       	add	r19, r22
    1728:	e7 1e       	adc	r14, r23
    172a:	f8 1e       	adc	r15, r24
    172c:	49 1f       	adc	r20, r25
    172e:	51 1d       	adc	r21, r1
    1730:	66 0f       	add	r22, r22
    1732:	77 1f       	adc	r23, r23
    1734:	88 1f       	adc	r24, r24
    1736:	99 1f       	adc	r25, r25
    1738:	06 94       	lsr	r0
    173a:	a1 f7       	brne	.-24     	; 0x1724 <__ftoa_engine+0x74>
    173c:	05 90       	lpm	r0, Z+
    173e:	07 94       	ror	r0
    1740:	28 f4       	brcc	.+10     	; 0x174c <__ftoa_engine+0x9c>
    1742:	e7 0e       	add	r14, r23
    1744:	f8 1e       	adc	r15, r24
    1746:	49 1f       	adc	r20, r25
    1748:	56 1f       	adc	r21, r22
    174a:	c1 1d       	adc	r28, r1
    174c:	77 0f       	add	r23, r23
    174e:	88 1f       	adc	r24, r24
    1750:	99 1f       	adc	r25, r25
    1752:	66 1f       	adc	r22, r22
    1754:	06 94       	lsr	r0
    1756:	a1 f7       	brne	.-24     	; 0x1740 <__ftoa_engine+0x90>
    1758:	05 90       	lpm	r0, Z+
    175a:	07 94       	ror	r0
    175c:	28 f4       	brcc	.+10     	; 0x1768 <__ftoa_engine+0xb8>
    175e:	f8 0e       	add	r15, r24
    1760:	49 1f       	adc	r20, r25
    1762:	56 1f       	adc	r21, r22
    1764:	c7 1f       	adc	r28, r23
    1766:	d1 1d       	adc	r29, r1
    1768:	88 0f       	add	r24, r24
    176a:	99 1f       	adc	r25, r25
    176c:	66 1f       	adc	r22, r22
    176e:	77 1f       	adc	r23, r23
    1770:	06 94       	lsr	r0
    1772:	a1 f7       	brne	.-24     	; 0x175c <__ftoa_engine+0xac>
    1774:	05 90       	lpm	r0, Z+
    1776:	07 94       	ror	r0
    1778:	20 f4       	brcc	.+8      	; 0x1782 <__ftoa_engine+0xd2>
    177a:	49 0f       	add	r20, r25
    177c:	56 1f       	adc	r21, r22
    177e:	c7 1f       	adc	r28, r23
    1780:	d8 1f       	adc	r29, r24
    1782:	99 0f       	add	r25, r25
    1784:	66 1f       	adc	r22, r22
    1786:	77 1f       	adc	r23, r23
    1788:	88 1f       	adc	r24, r24
    178a:	06 94       	lsr	r0
    178c:	a9 f7       	brne	.-22     	; 0x1778 <__ftoa_engine+0xc8>
    178e:	84 91       	lpm	r24, Z
    1790:	10 95       	com	r17
    1792:	17 70       	andi	r17, 0x07	; 7
    1794:	41 f0       	breq	.+16     	; 0x17a6 <__ftoa_engine+0xf6>
    1796:	d6 95       	lsr	r29
    1798:	c7 95       	ror	r28
    179a:	57 95       	ror	r21
    179c:	47 95       	ror	r20
    179e:	f7 94       	ror	r15
    17a0:	e7 94       	ror	r14
    17a2:	1a 95       	dec	r17
    17a4:	c1 f7       	brne	.-16     	; 0x1796 <__ftoa_engine+0xe6>
    17a6:	e4 ed       	ldi	r30, 0xD4	; 212
    17a8:	f0 e0       	ldi	r31, 0x00	; 0
    17aa:	68 94       	set
    17ac:	15 90       	lpm	r1, Z+
    17ae:	15 91       	lpm	r17, Z+
    17b0:	35 91       	lpm	r19, Z+
    17b2:	65 91       	lpm	r22, Z+
    17b4:	95 91       	lpm	r25, Z+
    17b6:	05 90       	lpm	r0, Z+
    17b8:	7f e2       	ldi	r23, 0x2F	; 47
    17ba:	73 95       	inc	r23
    17bc:	e1 18       	sub	r14, r1
    17be:	f1 0a       	sbc	r15, r17
    17c0:	43 0b       	sbc	r20, r19
    17c2:	56 0b       	sbc	r21, r22
    17c4:	c9 0b       	sbc	r28, r25
    17c6:	d0 09       	sbc	r29, r0
    17c8:	c0 f7       	brcc	.-16     	; 0x17ba <__ftoa_engine+0x10a>
    17ca:	e1 0c       	add	r14, r1
    17cc:	f1 1e       	adc	r15, r17
    17ce:	43 1f       	adc	r20, r19
    17d0:	56 1f       	adc	r21, r22
    17d2:	c9 1f       	adc	r28, r25
    17d4:	d0 1d       	adc	r29, r0
    17d6:	7e f4       	brtc	.+30     	; 0x17f6 <__ftoa_engine+0x146>
    17d8:	70 33       	cpi	r23, 0x30	; 48
    17da:	11 f4       	brne	.+4      	; 0x17e0 <__ftoa_engine+0x130>
    17dc:	8a 95       	dec	r24
    17de:	e6 cf       	rjmp	.-52     	; 0x17ac <__ftoa_engine+0xfc>
    17e0:	e8 94       	clt
    17e2:	01 50       	subi	r16, 0x01	; 1
    17e4:	30 f0       	brcs	.+12     	; 0x17f2 <__ftoa_engine+0x142>
    17e6:	08 0f       	add	r16, r24
    17e8:	0a f4       	brpl	.+2      	; 0x17ec <__ftoa_engine+0x13c>
    17ea:	00 27       	eor	r16, r16
    17ec:	02 17       	cp	r16, r18
    17ee:	08 f4       	brcc	.+2      	; 0x17f2 <__ftoa_engine+0x142>
    17f0:	20 2f       	mov	r18, r16
    17f2:	23 95       	inc	r18
    17f4:	02 2f       	mov	r16, r18
    17f6:	7a 33       	cpi	r23, 0x3A	; 58
    17f8:	28 f0       	brcs	.+10     	; 0x1804 <__ftoa_engine+0x154>
    17fa:	79 e3       	ldi	r23, 0x39	; 57
    17fc:	7d 93       	st	X+, r23
    17fe:	2a 95       	dec	r18
    1800:	e9 f7       	brne	.-6      	; 0x17fc <__ftoa_engine+0x14c>
    1802:	10 c0       	rjmp	.+32     	; 0x1824 <__ftoa_engine+0x174>
    1804:	7d 93       	st	X+, r23
    1806:	2a 95       	dec	r18
    1808:	89 f6       	brne	.-94     	; 0x17ac <__ftoa_engine+0xfc>
    180a:	06 94       	lsr	r0
    180c:	97 95       	ror	r25
    180e:	67 95       	ror	r22
    1810:	37 95       	ror	r19
    1812:	17 95       	ror	r17
    1814:	17 94       	ror	r1
    1816:	e1 18       	sub	r14, r1
    1818:	f1 0a       	sbc	r15, r17
    181a:	43 0b       	sbc	r20, r19
    181c:	56 0b       	sbc	r21, r22
    181e:	c9 0b       	sbc	r28, r25
    1820:	d0 09       	sbc	r29, r0
    1822:	98 f0       	brcs	.+38     	; 0x184a <__ftoa_engine+0x19a>
    1824:	23 95       	inc	r18
    1826:	7e 91       	ld	r23, -X
    1828:	73 95       	inc	r23
    182a:	7a 33       	cpi	r23, 0x3A	; 58
    182c:	08 f0       	brcs	.+2      	; 0x1830 <__ftoa_engine+0x180>
    182e:	70 e3       	ldi	r23, 0x30	; 48
    1830:	7c 93       	st	X, r23
    1832:	20 13       	cpse	r18, r16
    1834:	b8 f7       	brcc	.-18     	; 0x1824 <__ftoa_engine+0x174>
    1836:	7e 91       	ld	r23, -X
    1838:	70 61       	ori	r23, 0x10	; 16
    183a:	7d 93       	st	X+, r23
    183c:	30 f0       	brcs	.+12     	; 0x184a <__ftoa_engine+0x19a>
    183e:	83 95       	inc	r24
    1840:	71 e3       	ldi	r23, 0x31	; 49
    1842:	7d 93       	st	X+, r23
    1844:	70 e3       	ldi	r23, 0x30	; 48
    1846:	2a 95       	dec	r18
    1848:	e1 f7       	brne	.-8      	; 0x1842 <__ftoa_engine+0x192>
    184a:	11 24       	eor	r1, r1
    184c:	ef 90       	pop	r14
    184e:	ff 90       	pop	r15
    1850:	0f 91       	pop	r16
    1852:	1f 91       	pop	r17
    1854:	cf 91       	pop	r28
    1856:	df 91       	pop	r29
    1858:	99 27       	eor	r25, r25
    185a:	87 fd       	sbrc	r24, 7
    185c:	90 95       	com	r25
    185e:	08 95       	ret

00001860 <strnlen_P>:
    1860:	fc 01       	movw	r30, r24
    1862:	05 90       	lpm	r0, Z+
    1864:	61 50       	subi	r22, 0x01	; 1
    1866:	70 40       	sbci	r23, 0x00	; 0
    1868:	01 10       	cpse	r0, r1
    186a:	d8 f7       	brcc	.-10     	; 0x1862 <strnlen_P+0x2>
    186c:	80 95       	com	r24
    186e:	90 95       	com	r25
    1870:	8e 0f       	add	r24, r30
    1872:	9f 1f       	adc	r25, r31
    1874:	08 95       	ret

00001876 <strcat>:
    1876:	fb 01       	movw	r30, r22
    1878:	dc 01       	movw	r26, r24
    187a:	0d 90       	ld	r0, X+
    187c:	00 20       	and	r0, r0
    187e:	e9 f7       	brne	.-6      	; 0x187a <strcat+0x4>
    1880:	11 97       	sbiw	r26, 0x01	; 1
    1882:	01 90       	ld	r0, Z+
    1884:	0d 92       	st	X+, r0
    1886:	00 20       	and	r0, r0
    1888:	e1 f7       	brne	.-8      	; 0x1882 <strcat+0xc>
    188a:	08 95       	ret

0000188c <strncmp>:
    188c:	fb 01       	movw	r30, r22
    188e:	dc 01       	movw	r26, r24
    1890:	41 50       	subi	r20, 0x01	; 1
    1892:	50 40       	sbci	r21, 0x00	; 0
    1894:	30 f0       	brcs	.+12     	; 0x18a2 <strncmp+0x16>
    1896:	8d 91       	ld	r24, X+
    1898:	01 90       	ld	r0, Z+
    189a:	80 19       	sub	r24, r0
    189c:	19 f4       	brne	.+6      	; 0x18a4 <strncmp+0x18>
    189e:	00 20       	and	r0, r0
    18a0:	b9 f7       	brne	.-18     	; 0x1890 <strncmp+0x4>
    18a2:	88 1b       	sub	r24, r24
    18a4:	99 0b       	sbc	r25, r25
    18a6:	08 95       	ret

000018a8 <strnlen>:
    18a8:	fc 01       	movw	r30, r24
    18aa:	61 50       	subi	r22, 0x01	; 1
    18ac:	70 40       	sbci	r23, 0x00	; 0
    18ae:	01 90       	ld	r0, Z+
    18b0:	01 10       	cpse	r0, r1
    18b2:	d8 f7       	brcc	.-10     	; 0x18aa <strnlen+0x2>
    18b4:	80 95       	com	r24
    18b6:	90 95       	com	r25
    18b8:	8e 0f       	add	r24, r30
    18ba:	9f 1f       	adc	r25, r31
    18bc:	08 95       	ret

000018be <fputc>:
    18be:	0f 93       	push	r16
    18c0:	1f 93       	push	r17
    18c2:	cf 93       	push	r28
    18c4:	df 93       	push	r29
    18c6:	fb 01       	movw	r30, r22
    18c8:	23 81       	ldd	r18, Z+3	; 0x03
    18ca:	21 fd       	sbrc	r18, 1
    18cc:	03 c0       	rjmp	.+6      	; 0x18d4 <fputc+0x16>
    18ce:	8f ef       	ldi	r24, 0xFF	; 255
    18d0:	9f ef       	ldi	r25, 0xFF	; 255
    18d2:	2c c0       	rjmp	.+88     	; 0x192c <fputc+0x6e>
    18d4:	22 ff       	sbrs	r18, 2
    18d6:	16 c0       	rjmp	.+44     	; 0x1904 <fputc+0x46>
    18d8:	46 81       	ldd	r20, Z+6	; 0x06
    18da:	57 81       	ldd	r21, Z+7	; 0x07
    18dc:	24 81       	ldd	r18, Z+4	; 0x04
    18de:	35 81       	ldd	r19, Z+5	; 0x05
    18e0:	42 17       	cp	r20, r18
    18e2:	53 07       	cpc	r21, r19
    18e4:	44 f4       	brge	.+16     	; 0x18f6 <fputc+0x38>
    18e6:	a0 81       	ld	r26, Z
    18e8:	b1 81       	ldd	r27, Z+1	; 0x01
    18ea:	9d 01       	movw	r18, r26
    18ec:	2f 5f       	subi	r18, 0xFF	; 255
    18ee:	3f 4f       	sbci	r19, 0xFF	; 255
    18f0:	31 83       	std	Z+1, r19	; 0x01
    18f2:	20 83       	st	Z, r18
    18f4:	8c 93       	st	X, r24
    18f6:	26 81       	ldd	r18, Z+6	; 0x06
    18f8:	37 81       	ldd	r19, Z+7	; 0x07
    18fa:	2f 5f       	subi	r18, 0xFF	; 255
    18fc:	3f 4f       	sbci	r19, 0xFF	; 255
    18fe:	37 83       	std	Z+7, r19	; 0x07
    1900:	26 83       	std	Z+6, r18	; 0x06
    1902:	14 c0       	rjmp	.+40     	; 0x192c <fputc+0x6e>
    1904:	8b 01       	movw	r16, r22
    1906:	ec 01       	movw	r28, r24
    1908:	fb 01       	movw	r30, r22
    190a:	00 84       	ldd	r0, Z+8	; 0x08
    190c:	f1 85       	ldd	r31, Z+9	; 0x09
    190e:	e0 2d       	mov	r30, r0
    1910:	09 95       	icall
    1912:	89 2b       	or	r24, r25
    1914:	e1 f6       	brne	.-72     	; 0x18ce <fputc+0x10>
    1916:	d8 01       	movw	r26, r16
    1918:	16 96       	adiw	r26, 0x06	; 6
    191a:	8d 91       	ld	r24, X+
    191c:	9c 91       	ld	r25, X
    191e:	17 97       	sbiw	r26, 0x07	; 7
    1920:	01 96       	adiw	r24, 0x01	; 1
    1922:	17 96       	adiw	r26, 0x07	; 7
    1924:	9c 93       	st	X, r25
    1926:	8e 93       	st	-X, r24
    1928:	16 97       	sbiw	r26, 0x06	; 6
    192a:	ce 01       	movw	r24, r28
    192c:	df 91       	pop	r29
    192e:	cf 91       	pop	r28
    1930:	1f 91       	pop	r17
    1932:	0f 91       	pop	r16
    1934:	08 95       	ret

00001936 <printf>:
    1936:	a0 e0       	ldi	r26, 0x00	; 0
    1938:	b0 e0       	ldi	r27, 0x00	; 0
    193a:	e1 ea       	ldi	r30, 0xA1	; 161
    193c:	fc e0       	ldi	r31, 0x0C	; 12
    193e:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__prologue_saves__+0x20>
    1942:	ae 01       	movw	r20, r28
    1944:	4b 5f       	subi	r20, 0xFB	; 251
    1946:	5f 4f       	sbci	r21, 0xFF	; 255
    1948:	fa 01       	movw	r30, r20
    194a:	61 91       	ld	r22, Z+
    194c:	71 91       	ld	r23, Z+
    194e:	af 01       	movw	r20, r30
    1950:	80 91 23 05 	lds	r24, 0x0523	; 0x800523 <__iob+0x2>
    1954:	90 91 24 05 	lds	r25, 0x0524	; 0x800524 <__iob+0x3>
    1958:	0e 94 df 05 	call	0xbbe	; 0xbbe <vfprintf>
    195c:	e2 e0       	ldi	r30, 0x02	; 2
    195e:	0c 94 aa 09 	jmp	0x1354	; 0x1354 <__epilogue_restores__+0x20>

00001962 <puts>:
    1962:	0f 93       	push	r16
    1964:	1f 93       	push	r17
    1966:	cf 93       	push	r28
    1968:	df 93       	push	r29
    196a:	e0 91 23 05 	lds	r30, 0x0523	; 0x800523 <__iob+0x2>
    196e:	f0 91 24 05 	lds	r31, 0x0524	; 0x800524 <__iob+0x3>
    1972:	23 81       	ldd	r18, Z+3	; 0x03
    1974:	21 ff       	sbrs	r18, 1
    1976:	1b c0       	rjmp	.+54     	; 0x19ae <puts+0x4c>
    1978:	8c 01       	movw	r16, r24
    197a:	d0 e0       	ldi	r29, 0x00	; 0
    197c:	c0 e0       	ldi	r28, 0x00	; 0
    197e:	f8 01       	movw	r30, r16
    1980:	81 91       	ld	r24, Z+
    1982:	8f 01       	movw	r16, r30
    1984:	60 91 23 05 	lds	r22, 0x0523	; 0x800523 <__iob+0x2>
    1988:	70 91 24 05 	lds	r23, 0x0524	; 0x800524 <__iob+0x3>
    198c:	db 01       	movw	r26, r22
    198e:	18 96       	adiw	r26, 0x08	; 8
    1990:	ed 91       	ld	r30, X+
    1992:	fc 91       	ld	r31, X
    1994:	19 97       	sbiw	r26, 0x09	; 9
    1996:	88 23       	and	r24, r24
    1998:	31 f0       	breq	.+12     	; 0x19a6 <puts+0x44>
    199a:	09 95       	icall
    199c:	89 2b       	or	r24, r25
    199e:	79 f3       	breq	.-34     	; 0x197e <puts+0x1c>
    19a0:	df ef       	ldi	r29, 0xFF	; 255
    19a2:	cf ef       	ldi	r28, 0xFF	; 255
    19a4:	ec cf       	rjmp	.-40     	; 0x197e <puts+0x1c>
    19a6:	8a e0       	ldi	r24, 0x0A	; 10
    19a8:	09 95       	icall
    19aa:	89 2b       	or	r24, r25
    19ac:	19 f0       	breq	.+6      	; 0x19b4 <puts+0x52>
    19ae:	8f ef       	ldi	r24, 0xFF	; 255
    19b0:	9f ef       	ldi	r25, 0xFF	; 255
    19b2:	02 c0       	rjmp	.+4      	; 0x19b8 <puts+0x56>
    19b4:	8d 2f       	mov	r24, r29
    19b6:	9c 2f       	mov	r25, r28
    19b8:	df 91       	pop	r29
    19ba:	cf 91       	pop	r28
    19bc:	1f 91       	pop	r17
    19be:	0f 91       	pop	r16
    19c0:	08 95       	ret

000019c2 <sprintf>:
    19c2:	ae e0       	ldi	r26, 0x0E	; 14
    19c4:	b0 e0       	ldi	r27, 0x00	; 0
    19c6:	e7 ee       	ldi	r30, 0xE7	; 231
    19c8:	fc e0       	ldi	r31, 0x0C	; 12
    19ca:	0c 94 8c 09 	jmp	0x1318	; 0x1318 <__prologue_saves__+0x1c>
    19ce:	0d 89       	ldd	r16, Y+21	; 0x15
    19d0:	1e 89       	ldd	r17, Y+22	; 0x16
    19d2:	86 e0       	ldi	r24, 0x06	; 6
    19d4:	8c 83       	std	Y+4, r24	; 0x04
    19d6:	1a 83       	std	Y+2, r17	; 0x02
    19d8:	09 83       	std	Y+1, r16	; 0x01
    19da:	8f ef       	ldi	r24, 0xFF	; 255
    19dc:	9f e7       	ldi	r25, 0x7F	; 127
    19de:	9e 83       	std	Y+6, r25	; 0x06
    19e0:	8d 83       	std	Y+5, r24	; 0x05
    19e2:	ae 01       	movw	r20, r28
    19e4:	47 5e       	subi	r20, 0xE7	; 231
    19e6:	5f 4f       	sbci	r21, 0xFF	; 255
    19e8:	6f 89       	ldd	r22, Y+23	; 0x17
    19ea:	78 8d       	ldd	r23, Y+24	; 0x18
    19ec:	ce 01       	movw	r24, r28
    19ee:	01 96       	adiw	r24, 0x01	; 1
    19f0:	0e 94 df 05 	call	0xbbe	; 0xbbe <vfprintf>
    19f4:	ef 81       	ldd	r30, Y+7	; 0x07
    19f6:	f8 85       	ldd	r31, Y+8	; 0x08
    19f8:	e0 0f       	add	r30, r16
    19fa:	f1 1f       	adc	r31, r17
    19fc:	10 82       	st	Z, r1
    19fe:	2e 96       	adiw	r28, 0x0e	; 14
    1a00:	e4 e0       	ldi	r30, 0x04	; 4
    1a02:	0c 94 a8 09 	jmp	0x1350	; 0x1350 <__epilogue_restores__+0x1c>

00001a06 <__ultoa_invert>:
    1a06:	fa 01       	movw	r30, r20
    1a08:	aa 27       	eor	r26, r26
    1a0a:	28 30       	cpi	r18, 0x08	; 8
    1a0c:	51 f1       	breq	.+84     	; 0x1a62 <__ultoa_invert+0x5c>
    1a0e:	20 31       	cpi	r18, 0x10	; 16
    1a10:	81 f1       	breq	.+96     	; 0x1a72 <__ultoa_invert+0x6c>
    1a12:	e8 94       	clt
    1a14:	6f 93       	push	r22
    1a16:	6e 7f       	andi	r22, 0xFE	; 254
    1a18:	6e 5f       	subi	r22, 0xFE	; 254
    1a1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1a1c:	8f 4f       	sbci	r24, 0xFF	; 255
    1a1e:	9f 4f       	sbci	r25, 0xFF	; 255
    1a20:	af 4f       	sbci	r26, 0xFF	; 255
    1a22:	b1 e0       	ldi	r27, 0x01	; 1
    1a24:	3e d0       	rcall	.+124    	; 0x1aa2 <__ultoa_invert+0x9c>
    1a26:	b4 e0       	ldi	r27, 0x04	; 4
    1a28:	3c d0       	rcall	.+120    	; 0x1aa2 <__ultoa_invert+0x9c>
    1a2a:	67 0f       	add	r22, r23
    1a2c:	78 1f       	adc	r23, r24
    1a2e:	89 1f       	adc	r24, r25
    1a30:	9a 1f       	adc	r25, r26
    1a32:	a1 1d       	adc	r26, r1
    1a34:	68 0f       	add	r22, r24
    1a36:	79 1f       	adc	r23, r25
    1a38:	8a 1f       	adc	r24, r26
    1a3a:	91 1d       	adc	r25, r1
    1a3c:	a1 1d       	adc	r26, r1
    1a3e:	6a 0f       	add	r22, r26
    1a40:	71 1d       	adc	r23, r1
    1a42:	81 1d       	adc	r24, r1
    1a44:	91 1d       	adc	r25, r1
    1a46:	a1 1d       	adc	r26, r1
    1a48:	20 d0       	rcall	.+64     	; 0x1a8a <__ultoa_invert+0x84>
    1a4a:	09 f4       	brne	.+2      	; 0x1a4e <__ultoa_invert+0x48>
    1a4c:	68 94       	set
    1a4e:	3f 91       	pop	r19
    1a50:	2a e0       	ldi	r18, 0x0A	; 10
    1a52:	26 9f       	mul	r18, r22
    1a54:	11 24       	eor	r1, r1
    1a56:	30 19       	sub	r19, r0
    1a58:	30 5d       	subi	r19, 0xD0	; 208
    1a5a:	31 93       	st	Z+, r19
    1a5c:	de f6       	brtc	.-74     	; 0x1a14 <__ultoa_invert+0xe>
    1a5e:	cf 01       	movw	r24, r30
    1a60:	08 95       	ret
    1a62:	46 2f       	mov	r20, r22
    1a64:	47 70       	andi	r20, 0x07	; 7
    1a66:	40 5d       	subi	r20, 0xD0	; 208
    1a68:	41 93       	st	Z+, r20
    1a6a:	b3 e0       	ldi	r27, 0x03	; 3
    1a6c:	0f d0       	rcall	.+30     	; 0x1a8c <__ultoa_invert+0x86>
    1a6e:	c9 f7       	brne	.-14     	; 0x1a62 <__ultoa_invert+0x5c>
    1a70:	f6 cf       	rjmp	.-20     	; 0x1a5e <__ultoa_invert+0x58>
    1a72:	46 2f       	mov	r20, r22
    1a74:	4f 70       	andi	r20, 0x0F	; 15
    1a76:	40 5d       	subi	r20, 0xD0	; 208
    1a78:	4a 33       	cpi	r20, 0x3A	; 58
    1a7a:	18 f0       	brcs	.+6      	; 0x1a82 <__ultoa_invert+0x7c>
    1a7c:	49 5d       	subi	r20, 0xD9	; 217
    1a7e:	31 fd       	sbrc	r19, 1
    1a80:	40 52       	subi	r20, 0x20	; 32
    1a82:	41 93       	st	Z+, r20
    1a84:	02 d0       	rcall	.+4      	; 0x1a8a <__ultoa_invert+0x84>
    1a86:	a9 f7       	brne	.-22     	; 0x1a72 <__ultoa_invert+0x6c>
    1a88:	ea cf       	rjmp	.-44     	; 0x1a5e <__ultoa_invert+0x58>
    1a8a:	b4 e0       	ldi	r27, 0x04	; 4
    1a8c:	a6 95       	lsr	r26
    1a8e:	97 95       	ror	r25
    1a90:	87 95       	ror	r24
    1a92:	77 95       	ror	r23
    1a94:	67 95       	ror	r22
    1a96:	ba 95       	dec	r27
    1a98:	c9 f7       	brne	.-14     	; 0x1a8c <__ultoa_invert+0x86>
    1a9a:	00 97       	sbiw	r24, 0x00	; 0
    1a9c:	61 05       	cpc	r22, r1
    1a9e:	71 05       	cpc	r23, r1
    1aa0:	08 95       	ret
    1aa2:	9b 01       	movw	r18, r22
    1aa4:	ac 01       	movw	r20, r24
    1aa6:	0a 2e       	mov	r0, r26
    1aa8:	06 94       	lsr	r0
    1aaa:	57 95       	ror	r21
    1aac:	47 95       	ror	r20
    1aae:	37 95       	ror	r19
    1ab0:	27 95       	ror	r18
    1ab2:	ba 95       	dec	r27
    1ab4:	c9 f7       	brne	.-14     	; 0x1aa8 <__ultoa_invert+0xa2>
    1ab6:	62 0f       	add	r22, r18
    1ab8:	73 1f       	adc	r23, r19
    1aba:	84 1f       	adc	r24, r20
    1abc:	95 1f       	adc	r25, r21
    1abe:	a0 1d       	adc	r26, r0
    1ac0:	08 95       	ret

00001ac2 <_exit>:
    1ac2:	f8 94       	cli

00001ac4 <__stop_program>:
    1ac4:	ff cf       	rjmp	.-2      	; 0x1ac4 <__stop_program>
