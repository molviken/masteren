
LoRa-node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a4  00800100  00001096  0000112a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001096  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  008001a4  008001a4  000011ce  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000122c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000168  00000000  00000000  0000126c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a06  00000000  00000000  000013d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000101b  00000000  00000000  00002dda  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000bf4  00000000  00000000  00003df5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000374  00000000  00000000  000049ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000c1a  00000000  00000000  00004d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a83  00000000  00000000  0000597a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000118  00000000  00000000  000063fd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e7 00 	jmp	0x1ce	; 0x1ce <__ctors_end>
       4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
       c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      10:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      14:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      18:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      1c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      20:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      24:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      28:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      2c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      30:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      34:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      38:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      3c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      40:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      44:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      48:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      4c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      50:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      54:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      58:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      5c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      60:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      64:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      68:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      6c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      70:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      74:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      78:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      7c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      80:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      84:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      88:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      8c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      90:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      94:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      98:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      9c:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      a8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      ac:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      b8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      bc:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c0:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c4:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>
      c8:	0c 94 04 01 	jmp	0x208	; 0x208 <__bad_interrupt>

000000cc <__trampolines_end>:
      cc:	6e 61       	ori	r22, 0x1E	; 30
      ce:	6e 00       	.word	0x006e	; ????

000000d0 <__c.2332>:
      d0:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      e0:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      f0:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     100:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     110:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     120:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     130:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     140:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     150:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     160:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     170:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     180:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     190:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1a0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1b0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1c0:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001ce <__ctors_end>:
     1ce:	11 24       	eor	r1, r1
     1d0:	1f be       	out	0x3f, r1	; 63
     1d2:	cf ef       	ldi	r28, 0xFF	; 255
     1d4:	d8 e0       	ldi	r29, 0x08	; 8
     1d6:	de bf       	out	0x3e, r29	; 62
     1d8:	cd bf       	out	0x3d, r28	; 61

000001da <__do_copy_data>:
     1da:	11 e0       	ldi	r17, 0x01	; 1
     1dc:	a0 e0       	ldi	r26, 0x00	; 0
     1de:	b1 e0       	ldi	r27, 0x01	; 1
     1e0:	e6 e9       	ldi	r30, 0x96	; 150
     1e2:	f0 e1       	ldi	r31, 0x10	; 16
     1e4:	02 c0       	rjmp	.+4      	; 0x1ea <__do_copy_data+0x10>
     1e6:	05 90       	lpm	r0, Z+
     1e8:	0d 92       	st	X+, r0
     1ea:	a4 3a       	cpi	r26, 0xA4	; 164
     1ec:	b1 07       	cpc	r27, r17
     1ee:	d9 f7       	brne	.-10     	; 0x1e6 <__do_copy_data+0xc>

000001f0 <__do_clear_bss>:
     1f0:	21 e0       	ldi	r18, 0x01	; 1
     1f2:	a4 ea       	ldi	r26, 0xA4	; 164
     1f4:	b1 e0       	ldi	r27, 0x01	; 1
     1f6:	01 c0       	rjmp	.+2      	; 0x1fa <.do_clear_bss_start>

000001f8 <.do_clear_bss_loop>:
     1f8:	1d 92       	st	X+, r1

000001fa <.do_clear_bss_start>:
     1fa:	ab 3a       	cpi	r26, 0xAB	; 171
     1fc:	b2 07       	cpc	r27, r18
     1fe:	e1 f7       	brne	.-8      	; 0x1f8 <.do_clear_bss_loop>
     200:	0e 94 06 01 	call	0x20c	; 0x20c <main>
     204:	0c 94 49 08 	jmp	0x1092	; 0x1092 <_exit>

00000208 <__bad_interrupt>:
     208:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000020c <main>:
#include <FSM.h>


int main(void){
	
	USART_init2();
     20c:	0e 94 9d 02 	call	0x53a	; 0x53a <USART_init2>
	printf("Hello world\n");
     210:	8e e0       	ldi	r24, 0x0E	; 14
     212:	91 e0       	ldi	r25, 0x01	; 1
     214:	0e 94 bb 07 	call	0xf76	; 0xf76 <puts>
	
	ina219 dev40;
	i2c_init();
     218:	0e 94 3a 01 	call	0x274	; 0x274 <i2c_init>
	INA219_init();
     21c:	0e 94 8a 02 	call	0x514	; 0x514 <INA219_init>
	float current = 0;
	float busVoltage;
	sei();
     220:	78 94       	sei
	
	FSM_run();
     222:	0e 94 16 01 	call	0x22c	; 0x22c <FSM_run>
	
	
}
     226:	80 e0       	ldi	r24, 0x00	; 0
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	08 95       	ret

0000022c <FSM_run>:
	
	while (1){
		switch (currentState){
			case ST_INIT:
				printf("init...\n");
				currentState = ST_IDLE;
     22c:	c1 e0       	ldi	r28, 0x01	; 1

void FSM_run(){
	if (FSM_init()) printf("Init failed, ending program...\n");
	
	while (1){
		switch (currentState){
     22e:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <__data_end>
     232:	88 23       	and	r24, r24
     234:	19 f0       	breq	.+6      	; 0x23c <FSM_run+0x10>
     236:	81 30       	cpi	r24, 0x01	; 1
     238:	41 f0       	breq	.+16     	; 0x24a <FSM_run+0x1e>
     23a:	0e c0       	rjmp	.+28     	; 0x258 <FSM_run+0x2c>
			case ST_INIT:
				printf("init...\n");
     23c:	8a e1       	ldi	r24, 0x1A	; 26
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	0e 94 bb 07 	call	0xf76	; 0xf76 <puts>
				currentState = ST_IDLE;
     244:	c0 93 a4 01 	sts	0x01A4, r28	; 0x8001a4 <__data_end>
				break;
     248:	0b c0       	rjmp	.+22     	; 0x260 <FSM_run+0x34>
			
			case ST_IDLE:
				printf("idle...\n");
     24a:	82 e2       	ldi	r24, 0x22	; 34
     24c:	91 e0       	ldi	r25, 0x01	; 1
     24e:	0e 94 bb 07 	call	0xf76	; 0xf76 <puts>
				currentState = ST_INIT;
     252:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <__data_end>
				break;
     256:	04 c0       	rjmp	.+8      	; 0x260 <FSM_run+0x34>
			default:
				printf("default...\n");
     258:	8a e2       	ldi	r24, 0x2A	; 42
     25a:	91 e0       	ldi	r25, 0x01	; 1
     25c:	0e 94 bb 07 	call	0xf76	; 0xf76 <puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     260:	2f ef       	ldi	r18, 0xFF	; 255
     262:	8d e3       	ldi	r24, 0x3D	; 61
     264:	99 e4       	ldi	r25, 0x49	; 73
     266:	21 50       	subi	r18, 0x01	; 1
     268:	80 40       	sbci	r24, 0x00	; 0
     26a:	90 40       	sbci	r25, 0x00	; 0
     26c:	e1 f7       	brne	.-8      	; 0x266 <FSM_run+0x3a>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <FSM_run+0x44>
     270:	00 00       	nop
     272:	dd cf       	rjmp	.-70     	; 0x22e <FSM_run+0x2>

00000274 <i2c_init>:
          1 failed to access device
*************************************************************************/
unsigned char i2c_rep_start(unsigned char address){
    return i2c_start( address );

}
     274:	10 92 d9 00 	sts	0x00D9, r1	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     278:	80 e2       	ldi	r24, 0x20	; 32
     27a:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__DATA_REGION_ORIGIN__+0x78>
     27e:	08 95       	ret

00000280 <i2c_sync>:
     280:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     284:	88 23       	and	r24, r24
     286:	bc f0       	brlt	.+46     	; 0x2b6 <i2c_sync+0x36>
     288:	24 e6       	ldi	r18, 0x64	; 100
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	ec ed       	ldi	r30, 0xDC	; 220
     28e:	f0 e0       	ldi	r31, 0x00	; 0
     290:	82 e0       	ldi	r24, 0x02	; 2
     292:	8a 95       	dec	r24
     294:	f1 f7       	brne	.-4      	; 0x292 <i2c_sync+0x12>
     296:	00 c0       	rjmp	.+0      	; 0x298 <i2c_sync+0x18>
     298:	21 50       	subi	r18, 0x01	; 1
     29a:	31 09       	sbc	r19, r1
     29c:	80 81       	ld	r24, Z
     29e:	88 23       	and	r24, r24
     2a0:	24 f0       	brlt	.+8      	; 0x2aa <i2c_sync+0x2a>
     2a2:	21 15       	cp	r18, r1
     2a4:	31 05       	cpc	r19, r1
     2a6:	a1 f7       	brne	.-24     	; 0x290 <i2c_sync+0x10>
     2a8:	03 c0       	rjmp	.+6      	; 0x2b0 <i2c_sync+0x30>
     2aa:	21 15       	cp	r18, r1
     2ac:	31 05       	cpc	r19, r1
     2ae:	29 f4       	brne	.+10     	; 0x2ba <i2c_sync+0x3a>
     2b0:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     2b4:	02 c0       	rjmp	.+4      	; 0x2ba <i2c_sync+0x3a>
     2b6:	24 e6       	ldi	r18, 0x64	; 100
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	23 2b       	or	r18, r19
     2be:	09 f4       	brne	.+2      	; 0x2c2 <i2c_sync+0x42>
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	08 95       	ret

000002c4 <i2c_waitStop>:
     2c4:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     2c8:	84 ff       	sbrs	r24, 4
     2ca:	17 c0       	rjmp	.+46     	; 0x2fa <i2c_waitStop+0x36>
     2cc:	24 e6       	ldi	r18, 0x64	; 100
     2ce:	30 e0       	ldi	r19, 0x00	; 0
     2d0:	ec ed       	ldi	r30, 0xDC	; 220
     2d2:	f0 e0       	ldi	r31, 0x00	; 0
     2d4:	82 e0       	ldi	r24, 0x02	; 2
     2d6:	8a 95       	dec	r24
     2d8:	f1 f7       	brne	.-4      	; 0x2d6 <i2c_waitStop+0x12>
     2da:	00 c0       	rjmp	.+0      	; 0x2dc <i2c_waitStop+0x18>
     2dc:	21 50       	subi	r18, 0x01	; 1
     2de:	31 09       	sbc	r19, r1
     2e0:	80 81       	ld	r24, Z
     2e2:	84 ff       	sbrs	r24, 4
     2e4:	04 c0       	rjmp	.+8      	; 0x2ee <i2c_waitStop+0x2a>
     2e6:	21 15       	cp	r18, r1
     2e8:	31 05       	cpc	r19, r1
     2ea:	a1 f7       	brne	.-24     	; 0x2d4 <i2c_waitStop+0x10>
     2ec:	03 c0       	rjmp	.+6      	; 0x2f4 <i2c_waitStop+0x30>
     2ee:	21 15       	cp	r18, r1
     2f0:	31 05       	cpc	r19, r1
     2f2:	29 f4       	brne	.+10     	; 0x2fe <i2c_waitStop+0x3a>
     2f4:	10 92 dc 00 	sts	0x00DC, r1	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     2f8:	02 c0       	rjmp	.+4      	; 0x2fe <i2c_waitStop+0x3a>
     2fa:	24 e6       	ldi	r18, 0x64	; 100
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	81 e0       	ldi	r24, 0x01	; 1
     300:	23 2b       	or	r18, r19
     302:	09 f4       	brne	.+2      	; 0x306 <i2c_waitStop+0x42>
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	08 95       	ret

00000308 <i2c_start>:
     308:	cf 93       	push	r28
     30a:	c8 2f       	mov	r28, r24
     30c:	84 ea       	ldi	r24, 0xA4	; 164
     30e:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     312:	0e 94 40 01 	call	0x280	; 0x280 <i2c_sync>
     316:	88 23       	and	r24, r24
     318:	e9 f0       	breq	.+58     	; 0x354 <i2c_start+0x4c>
     31a:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     31e:	88 7f       	andi	r24, 0xF8	; 248
     320:	88 30       	cpi	r24, 0x08	; 8
     322:	11 f0       	breq	.+4      	; 0x328 <i2c_start+0x20>
     324:	80 31       	cpi	r24, 0x10	; 16
     326:	99 f4       	brne	.+38     	; 0x34e <i2c_start+0x46>
     328:	c0 93 db 00 	sts	0x00DB, r28	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
     32c:	84 e8       	ldi	r24, 0x84	; 132
     32e:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
     332:	0e 94 40 01 	call	0x280	; 0x280 <i2c_sync>
     336:	88 23       	and	r24, r24
     338:	69 f0       	breq	.+26     	; 0x354 <i2c_start+0x4c>
     33a:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     33e:	98 7f       	andi	r25, 0xF8	; 248
     340:	98 31       	cpi	r25, 0x18	; 24
     342:	39 f0       	breq	.+14     	; 0x352 <i2c_start+0x4a>
     344:	81 e0       	ldi	r24, 0x01	; 1
     346:	90 34       	cpi	r25, 0x40	; 64
     348:	29 f4       	brne	.+10     	; 0x354 <i2c_start+0x4c>
     34a:	80 e0       	ldi	r24, 0x00	; 0
     34c:	03 c0       	rjmp	.+6      	; 0x354 <i2c_start+0x4c>
     34e:	81 e0       	ldi	r24, 0x01	; 1
     350:	01 c0       	rjmp	.+2      	; 0x354 <i2c_start+0x4c>
     352:	80 e0       	ldi	r24, 0x00	; 0
     354:	cf 91       	pop	r28
     356:	08 95       	ret

00000358 <i2c_stop>:
/*************************************************************************
 Terminates the data transfer and releases the I2C bus
*************************************************************************/
void i2c_stop(void){
    /* send stop condition */
	TWCR1 = (1<<TWINT) | (1<<TWEN) | (1<<TWSTO);
     358:	84 e9       	ldi	r24, 0x94	; 148
     35a:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
	
	// wait until stop condition is executed and bus released
	i2c_waitStop(); 
     35e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <i2c_waitStop>
     362:	08 95       	ret

00000364 <i2c_write>:
*************************************************************************/
unsigned char i2c_write( unsigned char data ){	
    uint8_t   twst;
    
	// send data to the previously addressed device
	TWDR1 = data;
     364:	80 93 db 00 	sts	0x00DB, r24	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
	TWCR1 = (1<<TWINT) | (1<<TWEN);
     368:	84 e8       	ldi	r24, 0x84	; 132
     36a:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>

	// wait until transmission completed
	i2c_sync();
     36e:	0e 94 40 01 	call	0x280	; 0x280 <i2c_sync>

	// check value of TWI Status Register. Mask prescaler bits
	twst = TW_STATUS & 0xF8;
     372:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <__DATA_REGION_ORIGIN__+0x79>
     376:	98 7f       	andi	r25, 0xF8	; 248
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	98 32       	cpi	r25, 0x28	; 40
     37c:	09 f4       	brne	.+2      	; 0x380 <i2c_write+0x1c>
     37e:	80 e0       	ldi	r24, 0x00	; 0
	if( twst != TW_MT_DATA_ACK) return 1;
	return 0;

}
     380:	08 95       	ret

00000382 <i2c_readAck>:
 Read one byte from the I2C device, request more data from device 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readAck(void){
	TWCR1 = (1<<TWINT) | (1<<TWEN) | (1<<TWEA);
     382:	84 ec       	ldi	r24, 0xC4	; 196
     384:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
	i2c_sync();    
     388:	0e 94 40 01 	call	0x280	; 0x280 <i2c_sync>
	return TWDR1;
     38c:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
}
     390:	08 95       	ret

00000392 <i2c_readNak>:
 Read one byte from the I2C device, read is followed by a stop condition 
 
 Return:  byte read from I2C device
*************************************************************************/
unsigned char i2c_readNak(void){
	TWCR1 = (1<<TWINT) | (1<<TWEN);
     392:	84 e8       	ldi	r24, 0x84	; 132
     394:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <__DATA_REGION_ORIGIN__+0x7c>
	i2c_sync(); 
     398:	0e 94 40 01 	call	0x280	; 0x280 <i2c_sync>
	return TWDR1;
     39c:	80 91 db 00 	lds	r24, 0x00DB	; 0x8000db <__DATA_REGION_ORIGIN__+0x7b>
}
     3a0:	08 95       	ret

000003a2 <i2c_read2ByteRegister>:
  
  Input:    device address, register address, buffer for storage
  Return:   0 write successful 
            1 write failed
*************************************************************************/
uint8_t i2c_read2ByteRegister(uint8_t adr, uint8_t regAddr, uint8_t *data){
     3a2:	ff 92       	push	r15
     3a4:	0f 93       	push	r16
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	d8 2f       	mov	r29, r24
     3ae:	f6 2e       	mov	r15, r22
     3b0:	8a 01       	movw	r16, r20
	uint8_t error = 0;
	error += i2c_start(adr | I2C_WRITE);
     3b2:	0e 94 84 01 	call	0x308	; 0x308 <i2c_start>
     3b6:	c8 2f       	mov	r28, r24
	error += i2c_write(regAddr);
     3b8:	8f 2d       	mov	r24, r15
     3ba:	0e 94 b2 01 	call	0x364	; 0x364 <i2c_write>
     3be:	c8 0f       	add	r28, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c0:	8a e1       	ldi	r24, 0x1A	; 26
     3c2:	8a 95       	dec	r24
     3c4:	f1 f7       	brne	.-4      	; 0x3c2 <i2c_read2ByteRegister+0x20>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <i2c_read2ByteRegister+0x26>
	_delay_us(10);
	//read data
	error += i2c_start(adr | I2C_READ);
     3c8:	8d 2f       	mov	r24, r29
     3ca:	81 60       	ori	r24, 0x01	; 1
     3cc:	0e 94 84 01 	call	0x308	; 0x308 <i2c_start>
     3d0:	c8 0f       	add	r28, r24
	data[1] = i2c_readAck();
     3d2:	0e 94 c1 01 	call	0x382	; 0x382 <i2c_readAck>
     3d6:	f8 01       	movw	r30, r16
     3d8:	81 83       	std	Z+1, r24	; 0x01
	data[0] = i2c_readNak();
     3da:	0e 94 c9 01 	call	0x392	; 0x392 <i2c_readNak>
     3de:	f8 01       	movw	r30, r16
     3e0:	80 83       	st	Z, r24
	i2c_stop();
     3e2:	0e 94 ac 01 	call	0x358	; 0x358 <i2c_stop>
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	c1 11       	cpse	r28, r1
     3ea:	01 c0       	rjmp	.+2      	; 0x3ee <i2c_read2ByteRegister+0x4c>
     3ec:	80 e0       	ldi	r24, 0x00	; 0
	
	if (error) return 1;
	else return 0;
}
     3ee:	df 91       	pop	r29
     3f0:	cf 91       	pop	r28
     3f2:	1f 91       	pop	r17
     3f4:	0f 91       	pop	r16
     3f6:	ff 90       	pop	r15
     3f8:	08 95       	ret

000003fa <i2c_write2ByteRegister>:
  
  Input:    device address, register address, bytes to be transfered 
  Return:   0 write successful
			1 write failed
*************************************************************************/
uint8_t i2c_write2ByteRegister(uint8_t adr, uint8_t regAddr, uint16_t data){
     3fa:	0f 93       	push	r16
     3fc:	1f 93       	push	r17
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	06 2f       	mov	r16, r22
     404:	d4 2f       	mov	r29, r20
     406:	15 2f       	mov	r17, r21
	uint8_t error = 0;
	error += i2c_start(adr | I2C_WRITE);
     408:	0e 94 84 01 	call	0x308	; 0x308 <i2c_start>
     40c:	c8 2f       	mov	r28, r24
	error += i2c_write(regAddr);
     40e:	80 2f       	mov	r24, r16
     410:	0e 94 b2 01 	call	0x364	; 0x364 <i2c_write>
     414:	c8 0f       	add	r28, r24
     416:	8a e1       	ldi	r24, 0x1A	; 26
     418:	8a 95       	dec	r24
     41a:	f1 f7       	brne	.-4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
     41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
	_delay_us(10);
	error += i2c_write((uint8_t)(data >> 8));
     41e:	81 2f       	mov	r24, r17
     420:	0e 94 b2 01 	call	0x364	; 0x364 <i2c_write>
     424:	c8 0f       	add	r28, r24
	error += i2c_write((uint8_t)(data & 0xFF));
     426:	8d 2f       	mov	r24, r29
     428:	0e 94 b2 01 	call	0x364	; 0x364 <i2c_write>
     42c:	c8 0f       	add	r28, r24
	i2c_stop();
     42e:	0e 94 ac 01 	call	0x358	; 0x358 <i2c_stop>
     432:	81 e0       	ldi	r24, 0x01	; 1
     434:	c1 11       	cpse	r28, r1
     436:	01 c0       	rjmp	.+2      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     438:	80 e0       	ldi	r24, 0x00	; 0
	if (error) return 1;
	else return 0;
     43a:	df 91       	pop	r29
     43c:	cf 91       	pop	r28
     43e:	1f 91       	pop	r17
     440:	0f 91       	pop	r16
     442:	08 95       	ret

00000444 <INA219_readCalibrationReg>:
	printf("ekte total: %u\n", total);
	printf("ekte total2: %u\n", total*11/1000);
	current = (float)total;
	printf("fake total: %f\n", current);
	return total;
}
     444:	1f 93       	push	r17
     446:	cf 93       	push	r28
     448:	df 93       	push	r29
     44a:	00 d0       	rcall	.+0      	; 0x44c <INA219_readCalibrationReg+0x8>
     44c:	cd b7       	in	r28, 0x3d	; 61
     44e:	de b7       	in	r29, 0x3e	; 62
     450:	ae 01       	movw	r20, r28
     452:	4f 5f       	subi	r20, 0xFF	; 255
     454:	5f 4f       	sbci	r21, 0xFF	; 255
     456:	65 e0       	ldi	r22, 0x05	; 5
     458:	80 e8       	ldi	r24, 0x80	; 128
     45a:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <i2c_read2ByteRegister>
     45e:	18 2f       	mov	r17, r24
     460:	8a 81       	ldd	r24, Y+2	; 0x02
     462:	90 e0       	ldi	r25, 0x00	; 0
     464:	98 2f       	mov	r25, r24
     466:	88 27       	eor	r24, r24
     468:	29 81       	ldd	r18, Y+1	; 0x01
     46a:	82 2b       	or	r24, r18
     46c:	9f 93       	push	r25
     46e:	8f 93       	push	r24
     470:	85 e3       	ldi	r24, 0x35	; 53
     472:	91 e0       	ldi	r25, 0x01	; 1
     474:	9f 93       	push	r25
     476:	8f 93       	push	r24
     478:	0e 94 a5 07 	call	0xf4a	; 0xf4a <printf>
     47c:	81 e0       	ldi	r24, 0x01	; 1
     47e:	0f 90       	pop	r0
     480:	0f 90       	pop	r0
     482:	0f 90       	pop	r0
     484:	0f 90       	pop	r0
     486:	11 11       	cpse	r17, r1
     488:	01 c0       	rjmp	.+2      	; 0x48c <INA219_readCalibrationReg+0x48>
     48a:	80 e0       	ldi	r24, 0x00	; 0
     48c:	0f 90       	pop	r0
     48e:	0f 90       	pop	r0
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	1f 91       	pop	r17
     496:	08 95       	ret

00000498 <INA219_readConfigReg>:
     498:	1f 93       	push	r17
     49a:	cf 93       	push	r28
     49c:	df 93       	push	r29
     49e:	00 d0       	rcall	.+0      	; 0x4a0 <INA219_readConfigReg+0x8>
     4a0:	cd b7       	in	r28, 0x3d	; 61
     4a2:	de b7       	in	r29, 0x3e	; 62
     4a4:	ae 01       	movw	r20, r28
     4a6:	4f 5f       	subi	r20, 0xFF	; 255
     4a8:	5f 4f       	sbci	r21, 0xFF	; 255
     4aa:	60 e0       	ldi	r22, 0x00	; 0
     4ac:	80 e8       	ldi	r24, 0x80	; 128
     4ae:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <i2c_read2ByteRegister>
     4b2:	18 2f       	mov	r17, r24
     4b4:	8a 81       	ldd	r24, Y+2	; 0x02
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	98 2f       	mov	r25, r24
     4ba:	88 27       	eor	r24, r24
     4bc:	29 81       	ldd	r18, Y+1	; 0x01
     4be:	82 2b       	or	r24, r18
     4c0:	9f 93       	push	r25
     4c2:	8f 93       	push	r24
     4c4:	84 e4       	ldi	r24, 0x44	; 68
     4c6:	91 e0       	ldi	r25, 0x01	; 1
     4c8:	9f 93       	push	r25
     4ca:	8f 93       	push	r24
     4cc:	0e 94 a5 07 	call	0xf4a	; 0xf4a <printf>
     4d0:	81 e0       	ldi	r24, 0x01	; 1
     4d2:	0f 90       	pop	r0
     4d4:	0f 90       	pop	r0
     4d6:	0f 90       	pop	r0
     4d8:	0f 90       	pop	r0
     4da:	11 11       	cpse	r17, r1
     4dc:	01 c0       	rjmp	.+2      	; 0x4e0 <INA219_readConfigReg+0x48>
     4de:	80 e0       	ldi	r24, 0x00	; 0
     4e0:	0f 90       	pop	r0
     4e2:	0f 90       	pop	r0
     4e4:	df 91       	pop	r29
     4e6:	cf 91       	pop	r28
     4e8:	1f 91       	pop	r17
     4ea:	08 95       	ret

000004ec <INA219_setCalibration_16V_400mA>:
     4ec:	cf 93       	push	r28
     4ee:	44 e7       	ldi	r20, 0x74	; 116
     4f0:	51 e9       	ldi	r21, 0x91	; 145
     4f2:	65 e0       	ldi	r22, 0x05	; 5
     4f4:	80 e8       	ldi	r24, 0x80	; 128
     4f6:	0e 94 fd 01 	call	0x3fa	; 0x3fa <i2c_write2ByteRegister>
     4fa:	c8 2f       	mov	r28, r24
     4fc:	4f e9       	ldi	r20, 0x9F	; 159
     4fe:	51 e0       	ldi	r21, 0x01	; 1
     500:	60 e0       	ldi	r22, 0x00	; 0
     502:	80 e8       	ldi	r24, 0x80	; 128
     504:	0e 94 fd 01 	call	0x3fa	; 0x3fa <i2c_write2ByteRegister>
     508:	c8 0f       	add	r28, r24
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	09 f4       	brne	.+2      	; 0x510 <INA219_setCalibration_16V_400mA+0x24>
     50e:	80 e0       	ldi	r24, 0x00	; 0
     510:	cf 91       	pop	r28
     512:	08 95       	ret

00000514 <INA219_init>:


uint8_t INA219_init(){
     514:	cf 93       	push	r28
	if (INA219_setCalibration_16V_400mA()) {
     516:	0e 94 76 02 	call	0x4ec	; 0x4ec <INA219_setCalibration_16V_400mA>
     51a:	c8 2f       	mov	r28, r24
     51c:	88 23       	and	r24, r24
     51e:	31 f0       	breq	.+12     	; 0x52c <INA219_init+0x18>
		printf("Setting calibration failed...\n");
     520:	85 e8       	ldi	r24, 0x85	; 133
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	0e 94 bb 07 	call	0xf76	; 0xf76 <puts>
		return 1;
     528:	c1 e0       	ldi	r28, 0x01	; 1
     52a:	04 c0       	rjmp	.+8      	; 0x534 <INA219_init+0x20>
	}
	else{
		INA219_readCalibrationReg();
     52c:	0e 94 22 02 	call	0x444	; 0x444 <INA219_readCalibrationReg>
		INA219_readConfigReg();
     530:	0e 94 4c 02 	call	0x498	; 0x498 <INA219_readConfigReg>
		return 0;
	}
     534:	8c 2f       	mov	r24, r28
     536:	cf 91       	pop	r28
     538:	08 95       	ret

0000053a <USART_init2>:
}
void USART_init2(){
	// Calculate ubbr:
	unsigned int ubrr =(F_CPU / (16*DEBUG_BAUD))-1U;
	/*Set baud rate */
	UBRR2H = (unsigned char)(ubrr>>8);
     53a:	10 92 d5 00 	sts	0x00D5, r1	; 0x8000d5 <__DATA_REGION_ORIGIN__+0x75>
	UBRR2L = (unsigned char)ubrr;
     53e:	83 e3       	ldi	r24, 0x33	; 51
     540:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <__DATA_REGION_ORIGIN__+0x74>
	/* Enable receiver and transmitter */
	UCSR2B = (1<<RXEN)|(1<<TXEN);
     544:	88 e1       	ldi	r24, 0x18	; 24
     546:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__DATA_REGION_ORIGIN__+0x71>
	UCSR2C |= (3<<UCSZ0);	/* Set frame format:  1stop bit, 8data*/
     54a:	e2 ed       	ldi	r30, 0xD2	; 210
     54c:	f0 e0       	ldi	r31, 0x00	; 0
     54e:	80 81       	ld	r24, Z
     550:	86 60       	ori	r24, 0x06	; 6
     552:	80 83       	st	Z, r24
	stdout = &mystdout;
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	91 e0       	ldi	r25, 0x01	; 1
     558:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <__iob+0x3>
     55c:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <__iob+0x2>
     560:	08 95       	ret

00000562 <USART_transmit2>:
}
void  USART_transmit2( uint8_t data ){
	/* Wait for empty transmit buffer:*/
	while ( !( UCSR2A & (1<<UDRE)));
     562:	e0 ed       	ldi	r30, 0xD0	; 208
     564:	f0 e0       	ldi	r31, 0x00	; 0
     566:	90 81       	ld	r25, Z
     568:	95 ff       	sbrs	r25, 5
     56a:	fd cf       	rjmp	.-6      	; 0x566 <USART_transmit2+0x4>
	/* Put data into buffer:*/
	UDR2 = data;
     56c:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__DATA_REGION_ORIGIN__+0x76>
     570:	08 95       	ret

00000572 <USART_TRANSMIT_printf>:
#endif
#ifndef DEBUG_BAUD
	#define DEBUG_BAUD 9600UL
#endif

int USART_TRANSMIT_printf(char var, FILE *stream) {
     572:	cf 93       	push	r28
     574:	c8 2f       	mov	r28, r24
	// translate \n to \r for br@y++ terminal
	if (var == '\n') USART_transmit2('\r');
     576:	8a 30       	cpi	r24, 0x0A	; 10
     578:	19 f4       	brne	.+6      	; 0x580 <USART_TRANSMIT_printf+0xe>
     57a:	8d e0       	ldi	r24, 0x0D	; 13
     57c:	0e 94 b1 02 	call	0x562	; 0x562 <USART_transmit2>
	USART_transmit2(var);
     580:	8c 2f       	mov	r24, r28
     582:	0e 94 b1 02 	call	0x562	; 0x562 <USART_transmit2>
	return 0;
}
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	cf 91       	pop	r28
     58c:	08 95       	ret

0000058e <vfprintf>:
     58e:	a0 e1       	ldi	r26, 0x10	; 16
     590:	b0 e0       	ldi	r27, 0x00	; 0
     592:	ed ec       	ldi	r30, 0xCD	; 205
     594:	f2 e0       	ldi	r31, 0x02	; 2
     596:	0c 94 44 06 	jmp	0xc88	; 0xc88 <__prologue_saves__>
     59a:	7c 01       	movw	r14, r24
     59c:	1b 01       	movw	r2, r22
     59e:	6a 01       	movw	r12, r20
     5a0:	fc 01       	movw	r30, r24
     5a2:	17 82       	std	Z+7, r1	; 0x07
     5a4:	16 82       	std	Z+6, r1	; 0x06
     5a6:	83 81       	ldd	r24, Z+3	; 0x03
     5a8:	81 ff       	sbrs	r24, 1
     5aa:	44 c3       	rjmp	.+1672   	; 0xc34 <__stack+0x335>
     5ac:	9e 01       	movw	r18, r28
     5ae:	2f 5f       	subi	r18, 0xFF	; 255
     5b0:	3f 4f       	sbci	r19, 0xFF	; 255
     5b2:	39 01       	movw	r6, r18
     5b4:	f7 01       	movw	r30, r14
     5b6:	93 81       	ldd	r25, Z+3	; 0x03
     5b8:	f1 01       	movw	r30, r2
     5ba:	93 fd       	sbrc	r25, 3
     5bc:	85 91       	lpm	r24, Z+
     5be:	93 ff       	sbrs	r25, 3
     5c0:	81 91       	ld	r24, Z+
     5c2:	1f 01       	movw	r2, r30
     5c4:	88 23       	and	r24, r24
     5c6:	09 f4       	brne	.+2      	; 0x5ca <vfprintf+0x3c>
     5c8:	31 c3       	rjmp	.+1634   	; 0xc2c <__stack+0x32d>
     5ca:	85 32       	cpi	r24, 0x25	; 37
     5cc:	39 f4       	brne	.+14     	; 0x5dc <vfprintf+0x4e>
     5ce:	93 fd       	sbrc	r25, 3
     5d0:	85 91       	lpm	r24, Z+
     5d2:	93 ff       	sbrs	r25, 3
     5d4:	81 91       	ld	r24, Z+
     5d6:	1f 01       	movw	r2, r30
     5d8:	85 32       	cpi	r24, 0x25	; 37
     5da:	39 f4       	brne	.+14     	; 0x5ea <vfprintf+0x5c>
     5dc:	b7 01       	movw	r22, r14
     5de:	90 e0       	ldi	r25, 0x00	; 0
     5e0:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     5e4:	56 01       	movw	r10, r12
     5e6:	65 01       	movw	r12, r10
     5e8:	e5 cf       	rjmp	.-54     	; 0x5b4 <vfprintf+0x26>
     5ea:	10 e0       	ldi	r17, 0x00	; 0
     5ec:	51 2c       	mov	r5, r1
     5ee:	91 2c       	mov	r9, r1
     5f0:	ff e1       	ldi	r31, 0x1F	; 31
     5f2:	f9 15       	cp	r31, r9
     5f4:	d8 f0       	brcs	.+54     	; 0x62c <vfprintf+0x9e>
     5f6:	8b 32       	cpi	r24, 0x2B	; 43
     5f8:	79 f0       	breq	.+30     	; 0x618 <vfprintf+0x8a>
     5fa:	38 f4       	brcc	.+14     	; 0x60a <vfprintf+0x7c>
     5fc:	80 32       	cpi	r24, 0x20	; 32
     5fe:	79 f0       	breq	.+30     	; 0x61e <vfprintf+0x90>
     600:	83 32       	cpi	r24, 0x23	; 35
     602:	a1 f4       	brne	.+40     	; 0x62c <vfprintf+0x9e>
     604:	f9 2d       	mov	r31, r9
     606:	f0 61       	ori	r31, 0x10	; 16
     608:	2e c0       	rjmp	.+92     	; 0x666 <vfprintf+0xd8>
     60a:	8d 32       	cpi	r24, 0x2D	; 45
     60c:	61 f0       	breq	.+24     	; 0x626 <vfprintf+0x98>
     60e:	80 33       	cpi	r24, 0x30	; 48
     610:	69 f4       	brne	.+26     	; 0x62c <vfprintf+0x9e>
     612:	29 2d       	mov	r18, r9
     614:	21 60       	ori	r18, 0x01	; 1
     616:	2d c0       	rjmp	.+90     	; 0x672 <vfprintf+0xe4>
     618:	39 2d       	mov	r19, r9
     61a:	32 60       	ori	r19, 0x02	; 2
     61c:	93 2e       	mov	r9, r19
     61e:	89 2d       	mov	r24, r9
     620:	84 60       	ori	r24, 0x04	; 4
     622:	98 2e       	mov	r9, r24
     624:	2a c0       	rjmp	.+84     	; 0x67a <vfprintf+0xec>
     626:	e9 2d       	mov	r30, r9
     628:	e8 60       	ori	r30, 0x08	; 8
     62a:	15 c0       	rjmp	.+42     	; 0x656 <vfprintf+0xc8>
     62c:	97 fc       	sbrc	r9, 7
     62e:	2d c0       	rjmp	.+90     	; 0x68a <vfprintf+0xfc>
     630:	20 ed       	ldi	r18, 0xD0	; 208
     632:	28 0f       	add	r18, r24
     634:	2a 30       	cpi	r18, 0x0A	; 10
     636:	88 f4       	brcc	.+34     	; 0x65a <vfprintf+0xcc>
     638:	96 fe       	sbrs	r9, 6
     63a:	06 c0       	rjmp	.+12     	; 0x648 <vfprintf+0xba>
     63c:	3a e0       	ldi	r19, 0x0A	; 10
     63e:	13 9f       	mul	r17, r19
     640:	20 0d       	add	r18, r0
     642:	11 24       	eor	r1, r1
     644:	12 2f       	mov	r17, r18
     646:	19 c0       	rjmp	.+50     	; 0x67a <vfprintf+0xec>
     648:	8a e0       	ldi	r24, 0x0A	; 10
     64a:	58 9e       	mul	r5, r24
     64c:	20 0d       	add	r18, r0
     64e:	11 24       	eor	r1, r1
     650:	52 2e       	mov	r5, r18
     652:	e9 2d       	mov	r30, r9
     654:	e0 62       	ori	r30, 0x20	; 32
     656:	9e 2e       	mov	r9, r30
     658:	10 c0       	rjmp	.+32     	; 0x67a <vfprintf+0xec>
     65a:	8e 32       	cpi	r24, 0x2E	; 46
     65c:	31 f4       	brne	.+12     	; 0x66a <vfprintf+0xdc>
     65e:	96 fc       	sbrc	r9, 6
     660:	e5 c2       	rjmp	.+1482   	; 0xc2c <__stack+0x32d>
     662:	f9 2d       	mov	r31, r9
     664:	f0 64       	ori	r31, 0x40	; 64
     666:	9f 2e       	mov	r9, r31
     668:	08 c0       	rjmp	.+16     	; 0x67a <vfprintf+0xec>
     66a:	8c 36       	cpi	r24, 0x6C	; 108
     66c:	21 f4       	brne	.+8      	; 0x676 <vfprintf+0xe8>
     66e:	29 2d       	mov	r18, r9
     670:	20 68       	ori	r18, 0x80	; 128
     672:	92 2e       	mov	r9, r18
     674:	02 c0       	rjmp	.+4      	; 0x67a <vfprintf+0xec>
     676:	88 36       	cpi	r24, 0x68	; 104
     678:	41 f4       	brne	.+16     	; 0x68a <vfprintf+0xfc>
     67a:	f1 01       	movw	r30, r2
     67c:	93 fd       	sbrc	r25, 3
     67e:	85 91       	lpm	r24, Z+
     680:	93 ff       	sbrs	r25, 3
     682:	81 91       	ld	r24, Z+
     684:	1f 01       	movw	r2, r30
     686:	81 11       	cpse	r24, r1
     688:	b3 cf       	rjmp	.-154    	; 0x5f0 <vfprintf+0x62>
     68a:	9b eb       	ldi	r25, 0xBB	; 187
     68c:	98 0f       	add	r25, r24
     68e:	93 30       	cpi	r25, 0x03	; 3
     690:	20 f4       	brcc	.+8      	; 0x69a <vfprintf+0x10c>
     692:	99 2d       	mov	r25, r9
     694:	90 61       	ori	r25, 0x10	; 16
     696:	80 5e       	subi	r24, 0xE0	; 224
     698:	07 c0       	rjmp	.+14     	; 0x6a8 <vfprintf+0x11a>
     69a:	9b e9       	ldi	r25, 0x9B	; 155
     69c:	98 0f       	add	r25, r24
     69e:	93 30       	cpi	r25, 0x03	; 3
     6a0:	08 f0       	brcs	.+2      	; 0x6a4 <vfprintf+0x116>
     6a2:	66 c1       	rjmp	.+716    	; 0x970 <__stack+0x71>
     6a4:	99 2d       	mov	r25, r9
     6a6:	9f 7e       	andi	r25, 0xEF	; 239
     6a8:	96 ff       	sbrs	r25, 6
     6aa:	16 e0       	ldi	r17, 0x06	; 6
     6ac:	9f 73       	andi	r25, 0x3F	; 63
     6ae:	99 2e       	mov	r9, r25
     6b0:	85 36       	cpi	r24, 0x65	; 101
     6b2:	19 f4       	brne	.+6      	; 0x6ba <vfprintf+0x12c>
     6b4:	90 64       	ori	r25, 0x40	; 64
     6b6:	99 2e       	mov	r9, r25
     6b8:	08 c0       	rjmp	.+16     	; 0x6ca <vfprintf+0x13c>
     6ba:	86 36       	cpi	r24, 0x66	; 102
     6bc:	21 f4       	brne	.+8      	; 0x6c6 <vfprintf+0x138>
     6be:	39 2f       	mov	r19, r25
     6c0:	30 68       	ori	r19, 0x80	; 128
     6c2:	93 2e       	mov	r9, r19
     6c4:	02 c0       	rjmp	.+4      	; 0x6ca <vfprintf+0x13c>
     6c6:	11 11       	cpse	r17, r1
     6c8:	11 50       	subi	r17, 0x01	; 1
     6ca:	97 fe       	sbrs	r9, 7
     6cc:	07 c0       	rjmp	.+14     	; 0x6dc <vfprintf+0x14e>
     6ce:	1c 33       	cpi	r17, 0x3C	; 60
     6d0:	50 f4       	brcc	.+20     	; 0x6e6 <vfprintf+0x158>
     6d2:	44 24       	eor	r4, r4
     6d4:	43 94       	inc	r4
     6d6:	41 0e       	add	r4, r17
     6d8:	27 e0       	ldi	r18, 0x07	; 7
     6da:	0b c0       	rjmp	.+22     	; 0x6f2 <vfprintf+0x164>
     6dc:	18 30       	cpi	r17, 0x08	; 8
     6de:	38 f0       	brcs	.+14     	; 0x6ee <vfprintf+0x160>
     6e0:	27 e0       	ldi	r18, 0x07	; 7
     6e2:	17 e0       	ldi	r17, 0x07	; 7
     6e4:	05 c0       	rjmp	.+10     	; 0x6f0 <vfprintf+0x162>
     6e6:	27 e0       	ldi	r18, 0x07	; 7
     6e8:	9c e3       	ldi	r25, 0x3C	; 60
     6ea:	49 2e       	mov	r4, r25
     6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <vfprintf+0x164>
     6ee:	21 2f       	mov	r18, r17
     6f0:	41 2c       	mov	r4, r1
     6f2:	56 01       	movw	r10, r12
     6f4:	84 e0       	ldi	r24, 0x04	; 4
     6f6:	a8 0e       	add	r10, r24
     6f8:	b1 1c       	adc	r11, r1
     6fa:	f6 01       	movw	r30, r12
     6fc:	60 81       	ld	r22, Z
     6fe:	71 81       	ldd	r23, Z+1	; 0x01
     700:	82 81       	ldd	r24, Z+2	; 0x02
     702:	93 81       	ldd	r25, Z+3	; 0x03
     704:	04 2d       	mov	r16, r4
     706:	a3 01       	movw	r20, r6
     708:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <__ftoa_engine>
     70c:	6c 01       	movw	r12, r24
     70e:	f9 81       	ldd	r31, Y+1	; 0x01
     710:	fc 87       	std	Y+12, r31	; 0x0c
     712:	f0 ff       	sbrs	r31, 0
     714:	02 c0       	rjmp	.+4      	; 0x71a <vfprintf+0x18c>
     716:	f3 ff       	sbrs	r31, 3
     718:	06 c0       	rjmp	.+12     	; 0x726 <vfprintf+0x198>
     71a:	91 fc       	sbrc	r9, 1
     71c:	06 c0       	rjmp	.+12     	; 0x72a <vfprintf+0x19c>
     71e:	92 fe       	sbrs	r9, 2
     720:	06 c0       	rjmp	.+12     	; 0x72e <vfprintf+0x1a0>
     722:	00 e2       	ldi	r16, 0x20	; 32
     724:	05 c0       	rjmp	.+10     	; 0x730 <vfprintf+0x1a2>
     726:	0d e2       	ldi	r16, 0x2D	; 45
     728:	03 c0       	rjmp	.+6      	; 0x730 <vfprintf+0x1a2>
     72a:	0b e2       	ldi	r16, 0x2B	; 43
     72c:	01 c0       	rjmp	.+2      	; 0x730 <vfprintf+0x1a2>
     72e:	00 e0       	ldi	r16, 0x00	; 0
     730:	8c 85       	ldd	r24, Y+12	; 0x0c
     732:	8c 70       	andi	r24, 0x0C	; 12
     734:	19 f0       	breq	.+6      	; 0x73c <vfprintf+0x1ae>
     736:	01 11       	cpse	r16, r1
     738:	5a c2       	rjmp	.+1204   	; 0xbee <__stack+0x2ef>
     73a:	9b c2       	rjmp	.+1334   	; 0xc72 <__stack+0x373>
     73c:	97 fe       	sbrs	r9, 7
     73e:	10 c0       	rjmp	.+32     	; 0x760 <vfprintf+0x1d2>
     740:	4c 0c       	add	r4, r12
     742:	fc 85       	ldd	r31, Y+12	; 0x0c
     744:	f4 ff       	sbrs	r31, 4
     746:	04 c0       	rjmp	.+8      	; 0x750 <vfprintf+0x1c2>
     748:	8a 81       	ldd	r24, Y+2	; 0x02
     74a:	81 33       	cpi	r24, 0x31	; 49
     74c:	09 f4       	brne	.+2      	; 0x750 <vfprintf+0x1c2>
     74e:	4a 94       	dec	r4
     750:	14 14       	cp	r1, r4
     752:	74 f5       	brge	.+92     	; 0x7b0 <vfprintf+0x222>
     754:	28 e0       	ldi	r18, 0x08	; 8
     756:	24 15       	cp	r18, r4
     758:	78 f5       	brcc	.+94     	; 0x7b8 <vfprintf+0x22a>
     75a:	88 e0       	ldi	r24, 0x08	; 8
     75c:	48 2e       	mov	r4, r24
     75e:	2c c0       	rjmp	.+88     	; 0x7b8 <vfprintf+0x22a>
     760:	96 fc       	sbrc	r9, 6
     762:	2a c0       	rjmp	.+84     	; 0x7b8 <vfprintf+0x22a>
     764:	81 2f       	mov	r24, r17
     766:	90 e0       	ldi	r25, 0x00	; 0
     768:	8c 15       	cp	r24, r12
     76a:	9d 05       	cpc	r25, r13
     76c:	9c f0       	brlt	.+38     	; 0x794 <vfprintf+0x206>
     76e:	3c ef       	ldi	r19, 0xFC	; 252
     770:	c3 16       	cp	r12, r19
     772:	3f ef       	ldi	r19, 0xFF	; 255
     774:	d3 06       	cpc	r13, r19
     776:	74 f0       	brlt	.+28     	; 0x794 <vfprintf+0x206>
     778:	89 2d       	mov	r24, r9
     77a:	80 68       	ori	r24, 0x80	; 128
     77c:	98 2e       	mov	r9, r24
     77e:	0a c0       	rjmp	.+20     	; 0x794 <vfprintf+0x206>
     780:	e2 e0       	ldi	r30, 0x02	; 2
     782:	f0 e0       	ldi	r31, 0x00	; 0
     784:	ec 0f       	add	r30, r28
     786:	fd 1f       	adc	r31, r29
     788:	e1 0f       	add	r30, r17
     78a:	f1 1d       	adc	r31, r1
     78c:	80 81       	ld	r24, Z
     78e:	80 33       	cpi	r24, 0x30	; 48
     790:	19 f4       	brne	.+6      	; 0x798 <vfprintf+0x20a>
     792:	11 50       	subi	r17, 0x01	; 1
     794:	11 11       	cpse	r17, r1
     796:	f4 cf       	rjmp	.-24     	; 0x780 <vfprintf+0x1f2>
     798:	97 fe       	sbrs	r9, 7
     79a:	0e c0       	rjmp	.+28     	; 0x7b8 <vfprintf+0x22a>
     79c:	44 24       	eor	r4, r4
     79e:	43 94       	inc	r4
     7a0:	41 0e       	add	r4, r17
     7a2:	81 2f       	mov	r24, r17
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	c8 16       	cp	r12, r24
     7a8:	d9 06       	cpc	r13, r25
     7aa:	2c f4       	brge	.+10     	; 0x7b6 <vfprintf+0x228>
     7ac:	1c 19       	sub	r17, r12
     7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <vfprintf+0x22a>
     7b0:	44 24       	eor	r4, r4
     7b2:	43 94       	inc	r4
     7b4:	01 c0       	rjmp	.+2      	; 0x7b8 <vfprintf+0x22a>
     7b6:	10 e0       	ldi	r17, 0x00	; 0
     7b8:	97 fe       	sbrs	r9, 7
     7ba:	06 c0       	rjmp	.+12     	; 0x7c8 <vfprintf+0x23a>
     7bc:	1c 14       	cp	r1, r12
     7be:	1d 04       	cpc	r1, r13
     7c0:	34 f4       	brge	.+12     	; 0x7ce <vfprintf+0x240>
     7c2:	c6 01       	movw	r24, r12
     7c4:	01 96       	adiw	r24, 0x01	; 1
     7c6:	05 c0       	rjmp	.+10     	; 0x7d2 <vfprintf+0x244>
     7c8:	85 e0       	ldi	r24, 0x05	; 5
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	02 c0       	rjmp	.+4      	; 0x7d2 <vfprintf+0x244>
     7ce:	81 e0       	ldi	r24, 0x01	; 1
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	01 11       	cpse	r16, r1
     7d4:	01 96       	adiw	r24, 0x01	; 1
     7d6:	11 23       	and	r17, r17
     7d8:	31 f0       	breq	.+12     	; 0x7e6 <vfprintf+0x258>
     7da:	21 2f       	mov	r18, r17
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	2f 5f       	subi	r18, 0xFF	; 255
     7e0:	3f 4f       	sbci	r19, 0xFF	; 255
     7e2:	82 0f       	add	r24, r18
     7e4:	93 1f       	adc	r25, r19
     7e6:	25 2d       	mov	r18, r5
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	82 17       	cp	r24, r18
     7ec:	93 07       	cpc	r25, r19
     7ee:	14 f4       	brge	.+4      	; 0x7f4 <vfprintf+0x266>
     7f0:	58 1a       	sub	r5, r24
     7f2:	01 c0       	rjmp	.+2      	; 0x7f6 <vfprintf+0x268>
     7f4:	51 2c       	mov	r5, r1
     7f6:	89 2d       	mov	r24, r9
     7f8:	89 70       	andi	r24, 0x09	; 9
     7fa:	49 f4       	brne	.+18     	; 0x80e <vfprintf+0x280>
     7fc:	55 20       	and	r5, r5
     7fe:	39 f0       	breq	.+14     	; 0x80e <vfprintf+0x280>
     800:	b7 01       	movw	r22, r14
     802:	80 e2       	ldi	r24, 0x20	; 32
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     80a:	5a 94       	dec	r5
     80c:	f7 cf       	rjmp	.-18     	; 0x7fc <vfprintf+0x26e>
     80e:	00 23       	and	r16, r16
     810:	29 f0       	breq	.+10     	; 0x81c <vfprintf+0x28e>
     812:	b7 01       	movw	r22, r14
     814:	80 2f       	mov	r24, r16
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     81c:	93 fc       	sbrc	r9, 3
     81e:	09 c0       	rjmp	.+18     	; 0x832 <vfprintf+0x2a4>
     820:	55 20       	and	r5, r5
     822:	39 f0       	breq	.+14     	; 0x832 <vfprintf+0x2a4>
     824:	b7 01       	movw	r22, r14
     826:	80 e3       	ldi	r24, 0x30	; 48
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     82e:	5a 94       	dec	r5
     830:	f7 cf       	rjmp	.-18     	; 0x820 <vfprintf+0x292>
     832:	97 fe       	sbrs	r9, 7
     834:	4c c0       	rjmp	.+152    	; 0x8ce <vfprintf+0x340>
     836:	46 01       	movw	r8, r12
     838:	d7 fe       	sbrs	r13, 7
     83a:	02 c0       	rjmp	.+4      	; 0x840 <vfprintf+0x2b2>
     83c:	81 2c       	mov	r8, r1
     83e:	91 2c       	mov	r9, r1
     840:	c6 01       	movw	r24, r12
     842:	88 19       	sub	r24, r8
     844:	99 09       	sbc	r25, r9
     846:	f3 01       	movw	r30, r6
     848:	e8 0f       	add	r30, r24
     84a:	f9 1f       	adc	r31, r25
     84c:	fe 87       	std	Y+14, r31	; 0x0e
     84e:	ed 87       	std	Y+13, r30	; 0x0d
     850:	96 01       	movw	r18, r12
     852:	24 19       	sub	r18, r4
     854:	31 09       	sbc	r19, r1
     856:	38 8b       	std	Y+16, r19	; 0x10
     858:	2f 87       	std	Y+15, r18	; 0x0f
     85a:	01 2f       	mov	r16, r17
     85c:	10 e0       	ldi	r17, 0x00	; 0
     85e:	11 95       	neg	r17
     860:	01 95       	neg	r16
     862:	11 09       	sbc	r17, r1
     864:	3f ef       	ldi	r19, 0xFF	; 255
     866:	83 16       	cp	r8, r19
     868:	93 06       	cpc	r9, r19
     86a:	29 f4       	brne	.+10     	; 0x876 <vfprintf+0x2e8>
     86c:	b7 01       	movw	r22, r14
     86e:	8e e2       	ldi	r24, 0x2E	; 46
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     876:	c8 14       	cp	r12, r8
     878:	d9 04       	cpc	r13, r9
     87a:	4c f0       	brlt	.+18     	; 0x88e <vfprintf+0x300>
     87c:	8f 85       	ldd	r24, Y+15	; 0x0f
     87e:	98 89       	ldd	r25, Y+16	; 0x10
     880:	88 15       	cp	r24, r8
     882:	99 05       	cpc	r25, r9
     884:	24 f4       	brge	.+8      	; 0x88e <vfprintf+0x300>
     886:	ed 85       	ldd	r30, Y+13	; 0x0d
     888:	fe 85       	ldd	r31, Y+14	; 0x0e
     88a:	81 81       	ldd	r24, Z+1	; 0x01
     88c:	01 c0       	rjmp	.+2      	; 0x890 <vfprintf+0x302>
     88e:	80 e3       	ldi	r24, 0x30	; 48
     890:	f1 e0       	ldi	r31, 0x01	; 1
     892:	8f 1a       	sub	r8, r31
     894:	91 08       	sbc	r9, r1
     896:	2d 85       	ldd	r18, Y+13	; 0x0d
     898:	3e 85       	ldd	r19, Y+14	; 0x0e
     89a:	2f 5f       	subi	r18, 0xFF	; 255
     89c:	3f 4f       	sbci	r19, 0xFF	; 255
     89e:	3e 87       	std	Y+14, r19	; 0x0e
     8a0:	2d 87       	std	Y+13, r18	; 0x0d
     8a2:	80 16       	cp	r8, r16
     8a4:	91 06       	cpc	r9, r17
     8a6:	2c f0       	brlt	.+10     	; 0x8b2 <vfprintf+0x324>
     8a8:	b7 01       	movw	r22, r14
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     8b0:	d9 cf       	rjmp	.-78     	; 0x864 <vfprintf+0x2d6>
     8b2:	c8 14       	cp	r12, r8
     8b4:	d9 04       	cpc	r13, r9
     8b6:	41 f4       	brne	.+16     	; 0x8c8 <vfprintf+0x33a>
     8b8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ba:	96 33       	cpi	r25, 0x36	; 54
     8bc:	20 f4       	brcc	.+8      	; 0x8c6 <vfprintf+0x338>
     8be:	95 33       	cpi	r25, 0x35	; 53
     8c0:	19 f4       	brne	.+6      	; 0x8c8 <vfprintf+0x33a>
     8c2:	3c 85       	ldd	r19, Y+12	; 0x0c
     8c4:	34 ff       	sbrs	r19, 4
     8c6:	81 e3       	ldi	r24, 0x31	; 49
     8c8:	b7 01       	movw	r22, r14
     8ca:	90 e0       	ldi	r25, 0x00	; 0
     8cc:	4e c0       	rjmp	.+156    	; 0x96a <__stack+0x6b>
     8ce:	8a 81       	ldd	r24, Y+2	; 0x02
     8d0:	81 33       	cpi	r24, 0x31	; 49
     8d2:	19 f0       	breq	.+6      	; 0x8da <vfprintf+0x34c>
     8d4:	9c 85       	ldd	r25, Y+12	; 0x0c
     8d6:	9f 7e       	andi	r25, 0xEF	; 239
     8d8:	9c 87       	std	Y+12, r25	; 0x0c
     8da:	b7 01       	movw	r22, r14
     8dc:	90 e0       	ldi	r25, 0x00	; 0
     8de:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     8e2:	11 11       	cpse	r17, r1
     8e4:	05 c0       	rjmp	.+10     	; 0x8f0 <vfprintf+0x362>
     8e6:	94 fc       	sbrc	r9, 4
     8e8:	18 c0       	rjmp	.+48     	; 0x91a <__stack+0x1b>
     8ea:	85 e6       	ldi	r24, 0x65	; 101
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	17 c0       	rjmp	.+46     	; 0x91e <__stack+0x1f>
     8f0:	b7 01       	movw	r22, r14
     8f2:	8e e2       	ldi	r24, 0x2E	; 46
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     8fa:	1e 5f       	subi	r17, 0xFE	; 254
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	01 e0       	ldi	r16, 0x01	; 1
     900:	08 0f       	add	r16, r24
     902:	f3 01       	movw	r30, r6
     904:	e8 0f       	add	r30, r24
     906:	f1 1d       	adc	r31, r1
     908:	80 81       	ld	r24, Z
     90a:	b7 01       	movw	r22, r14
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     912:	80 2f       	mov	r24, r16
     914:	01 13       	cpse	r16, r17
     916:	f3 cf       	rjmp	.-26     	; 0x8fe <vfprintf+0x370>
     918:	e6 cf       	rjmp	.-52     	; 0x8e6 <vfprintf+0x358>
     91a:	85 e4       	ldi	r24, 0x45	; 69
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	b7 01       	movw	r22, r14
     920:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     924:	d7 fc       	sbrc	r13, 7
     926:	06 c0       	rjmp	.+12     	; 0x934 <__stack+0x35>
     928:	c1 14       	cp	r12, r1
     92a:	d1 04       	cpc	r13, r1
     92c:	41 f4       	brne	.+16     	; 0x93e <__stack+0x3f>
     92e:	ec 85       	ldd	r30, Y+12	; 0x0c
     930:	e4 ff       	sbrs	r30, 4
     932:	05 c0       	rjmp	.+10     	; 0x93e <__stack+0x3f>
     934:	d1 94       	neg	r13
     936:	c1 94       	neg	r12
     938:	d1 08       	sbc	r13, r1
     93a:	8d e2       	ldi	r24, 0x2D	; 45
     93c:	01 c0       	rjmp	.+2      	; 0x940 <__stack+0x41>
     93e:	8b e2       	ldi	r24, 0x2B	; 43
     940:	b7 01       	movw	r22, r14
     942:	90 e0       	ldi	r25, 0x00	; 0
     944:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     948:	80 e3       	ldi	r24, 0x30	; 48
     94a:	2a e0       	ldi	r18, 0x0A	; 10
     94c:	c2 16       	cp	r12, r18
     94e:	d1 04       	cpc	r13, r1
     950:	2c f0       	brlt	.+10     	; 0x95c <__stack+0x5d>
     952:	8f 5f       	subi	r24, 0xFF	; 255
     954:	fa e0       	ldi	r31, 0x0A	; 10
     956:	cf 1a       	sub	r12, r31
     958:	d1 08       	sbc	r13, r1
     95a:	f7 cf       	rjmp	.-18     	; 0x94a <__stack+0x4b>
     95c:	b7 01       	movw	r22, r14
     95e:	90 e0       	ldi	r25, 0x00	; 0
     960:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     964:	b7 01       	movw	r22, r14
     966:	c6 01       	movw	r24, r12
     968:	c0 96       	adiw	r24, 0x30	; 48
     96a:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     96e:	54 c1       	rjmp	.+680    	; 0xc18 <__stack+0x319>
     970:	83 36       	cpi	r24, 0x63	; 99
     972:	31 f0       	breq	.+12     	; 0x980 <__stack+0x81>
     974:	83 37       	cpi	r24, 0x73	; 115
     976:	79 f0       	breq	.+30     	; 0x996 <__stack+0x97>
     978:	83 35       	cpi	r24, 0x53	; 83
     97a:	09 f0       	breq	.+2      	; 0x97e <__stack+0x7f>
     97c:	56 c0       	rjmp	.+172    	; 0xa2a <__stack+0x12b>
     97e:	20 c0       	rjmp	.+64     	; 0x9c0 <__stack+0xc1>
     980:	56 01       	movw	r10, r12
     982:	32 e0       	ldi	r19, 0x02	; 2
     984:	a3 0e       	add	r10, r19
     986:	b1 1c       	adc	r11, r1
     988:	f6 01       	movw	r30, r12
     98a:	80 81       	ld	r24, Z
     98c:	89 83       	std	Y+1, r24	; 0x01
     98e:	01 e0       	ldi	r16, 0x01	; 1
     990:	10 e0       	ldi	r17, 0x00	; 0
     992:	63 01       	movw	r12, r6
     994:	12 c0       	rjmp	.+36     	; 0x9ba <__stack+0xbb>
     996:	56 01       	movw	r10, r12
     998:	f2 e0       	ldi	r31, 0x02	; 2
     99a:	af 0e       	add	r10, r31
     99c:	b1 1c       	adc	r11, r1
     99e:	f6 01       	movw	r30, r12
     9a0:	c0 80       	ld	r12, Z
     9a2:	d1 80       	ldd	r13, Z+1	; 0x01
     9a4:	96 fe       	sbrs	r9, 6
     9a6:	03 c0       	rjmp	.+6      	; 0x9ae <__stack+0xaf>
     9a8:	61 2f       	mov	r22, r17
     9aa:	70 e0       	ldi	r23, 0x00	; 0
     9ac:	02 c0       	rjmp	.+4      	; 0x9b2 <__stack+0xb3>
     9ae:	6f ef       	ldi	r22, 0xFF	; 255
     9b0:	7f ef       	ldi	r23, 0xFF	; 255
     9b2:	c6 01       	movw	r24, r12
     9b4:	0e 94 5e 07 	call	0xebc	; 0xebc <strnlen>
     9b8:	8c 01       	movw	r16, r24
     9ba:	f9 2d       	mov	r31, r9
     9bc:	ff 77       	andi	r31, 0x7F	; 127
     9be:	14 c0       	rjmp	.+40     	; 0x9e8 <__stack+0xe9>
     9c0:	56 01       	movw	r10, r12
     9c2:	22 e0       	ldi	r18, 0x02	; 2
     9c4:	a2 0e       	add	r10, r18
     9c6:	b1 1c       	adc	r11, r1
     9c8:	f6 01       	movw	r30, r12
     9ca:	c0 80       	ld	r12, Z
     9cc:	d1 80       	ldd	r13, Z+1	; 0x01
     9ce:	96 fe       	sbrs	r9, 6
     9d0:	03 c0       	rjmp	.+6      	; 0x9d8 <__stack+0xd9>
     9d2:	61 2f       	mov	r22, r17
     9d4:	70 e0       	ldi	r23, 0x00	; 0
     9d6:	02 c0       	rjmp	.+4      	; 0x9dc <__stack+0xdd>
     9d8:	6f ef       	ldi	r22, 0xFF	; 255
     9da:	7f ef       	ldi	r23, 0xFF	; 255
     9dc:	c6 01       	movw	r24, r12
     9de:	0e 94 53 07 	call	0xea6	; 0xea6 <strnlen_P>
     9e2:	8c 01       	movw	r16, r24
     9e4:	f9 2d       	mov	r31, r9
     9e6:	f0 68       	ori	r31, 0x80	; 128
     9e8:	9f 2e       	mov	r9, r31
     9ea:	f3 fd       	sbrc	r31, 3
     9ec:	1a c0       	rjmp	.+52     	; 0xa22 <__stack+0x123>
     9ee:	85 2d       	mov	r24, r5
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	08 17       	cp	r16, r24
     9f4:	19 07       	cpc	r17, r25
     9f6:	a8 f4       	brcc	.+42     	; 0xa22 <__stack+0x123>
     9f8:	b7 01       	movw	r22, r14
     9fa:	80 e2       	ldi	r24, 0x20	; 32
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     a02:	5a 94       	dec	r5
     a04:	f4 cf       	rjmp	.-24     	; 0x9ee <__stack+0xef>
     a06:	f6 01       	movw	r30, r12
     a08:	97 fc       	sbrc	r9, 7
     a0a:	85 91       	lpm	r24, Z+
     a0c:	97 fe       	sbrs	r9, 7
     a0e:	81 91       	ld	r24, Z+
     a10:	6f 01       	movw	r12, r30
     a12:	b7 01       	movw	r22, r14
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     a1a:	51 10       	cpse	r5, r1
     a1c:	5a 94       	dec	r5
     a1e:	01 50       	subi	r16, 0x01	; 1
     a20:	11 09       	sbc	r17, r1
     a22:	01 15       	cp	r16, r1
     a24:	11 05       	cpc	r17, r1
     a26:	79 f7       	brne	.-34     	; 0xa06 <__stack+0x107>
     a28:	f7 c0       	rjmp	.+494    	; 0xc18 <__stack+0x319>
     a2a:	84 36       	cpi	r24, 0x64	; 100
     a2c:	11 f0       	breq	.+4      	; 0xa32 <__stack+0x133>
     a2e:	89 36       	cpi	r24, 0x69	; 105
     a30:	61 f5       	brne	.+88     	; 0xa8a <__stack+0x18b>
     a32:	56 01       	movw	r10, r12
     a34:	97 fe       	sbrs	r9, 7
     a36:	09 c0       	rjmp	.+18     	; 0xa4a <__stack+0x14b>
     a38:	24 e0       	ldi	r18, 0x04	; 4
     a3a:	a2 0e       	add	r10, r18
     a3c:	b1 1c       	adc	r11, r1
     a3e:	f6 01       	movw	r30, r12
     a40:	60 81       	ld	r22, Z
     a42:	71 81       	ldd	r23, Z+1	; 0x01
     a44:	82 81       	ldd	r24, Z+2	; 0x02
     a46:	93 81       	ldd	r25, Z+3	; 0x03
     a48:	0a c0       	rjmp	.+20     	; 0xa5e <__stack+0x15f>
     a4a:	f2 e0       	ldi	r31, 0x02	; 2
     a4c:	af 0e       	add	r10, r31
     a4e:	b1 1c       	adc	r11, r1
     a50:	f6 01       	movw	r30, r12
     a52:	60 81       	ld	r22, Z
     a54:	71 81       	ldd	r23, Z+1	; 0x01
     a56:	07 2e       	mov	r0, r23
     a58:	00 0c       	add	r0, r0
     a5a:	88 0b       	sbc	r24, r24
     a5c:	99 0b       	sbc	r25, r25
     a5e:	f9 2d       	mov	r31, r9
     a60:	ff 76       	andi	r31, 0x6F	; 111
     a62:	9f 2e       	mov	r9, r31
     a64:	97 ff       	sbrs	r25, 7
     a66:	09 c0       	rjmp	.+18     	; 0xa7a <__stack+0x17b>
     a68:	90 95       	com	r25
     a6a:	80 95       	com	r24
     a6c:	70 95       	com	r23
     a6e:	61 95       	neg	r22
     a70:	7f 4f       	sbci	r23, 0xFF	; 255
     a72:	8f 4f       	sbci	r24, 0xFF	; 255
     a74:	9f 4f       	sbci	r25, 0xFF	; 255
     a76:	f0 68       	ori	r31, 0x80	; 128
     a78:	9f 2e       	mov	r9, r31
     a7a:	2a e0       	ldi	r18, 0x0A	; 10
     a7c:	30 e0       	ldi	r19, 0x00	; 0
     a7e:	a3 01       	movw	r20, r6
     a80:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__ultoa_invert>
     a84:	c8 2e       	mov	r12, r24
     a86:	c6 18       	sub	r12, r6
     a88:	3f c0       	rjmp	.+126    	; 0xb08 <__stack+0x209>
     a8a:	09 2d       	mov	r16, r9
     a8c:	85 37       	cpi	r24, 0x75	; 117
     a8e:	21 f4       	brne	.+8      	; 0xa98 <__stack+0x199>
     a90:	0f 7e       	andi	r16, 0xEF	; 239
     a92:	2a e0       	ldi	r18, 0x0A	; 10
     a94:	30 e0       	ldi	r19, 0x00	; 0
     a96:	1d c0       	rjmp	.+58     	; 0xad2 <__stack+0x1d3>
     a98:	09 7f       	andi	r16, 0xF9	; 249
     a9a:	8f 36       	cpi	r24, 0x6F	; 111
     a9c:	91 f0       	breq	.+36     	; 0xac2 <__stack+0x1c3>
     a9e:	18 f4       	brcc	.+6      	; 0xaa6 <__stack+0x1a7>
     aa0:	88 35       	cpi	r24, 0x58	; 88
     aa2:	59 f0       	breq	.+22     	; 0xaba <__stack+0x1bb>
     aa4:	c3 c0       	rjmp	.+390    	; 0xc2c <__stack+0x32d>
     aa6:	80 37       	cpi	r24, 0x70	; 112
     aa8:	19 f0       	breq	.+6      	; 0xab0 <__stack+0x1b1>
     aaa:	88 37       	cpi	r24, 0x78	; 120
     aac:	11 f0       	breq	.+4      	; 0xab2 <__stack+0x1b3>
     aae:	be c0       	rjmp	.+380    	; 0xc2c <__stack+0x32d>
     ab0:	00 61       	ori	r16, 0x10	; 16
     ab2:	04 ff       	sbrs	r16, 4
     ab4:	09 c0       	rjmp	.+18     	; 0xac8 <__stack+0x1c9>
     ab6:	04 60       	ori	r16, 0x04	; 4
     ab8:	07 c0       	rjmp	.+14     	; 0xac8 <__stack+0x1c9>
     aba:	94 fe       	sbrs	r9, 4
     abc:	08 c0       	rjmp	.+16     	; 0xace <__stack+0x1cf>
     abe:	06 60       	ori	r16, 0x06	; 6
     ac0:	06 c0       	rjmp	.+12     	; 0xace <__stack+0x1cf>
     ac2:	28 e0       	ldi	r18, 0x08	; 8
     ac4:	30 e0       	ldi	r19, 0x00	; 0
     ac6:	05 c0       	rjmp	.+10     	; 0xad2 <__stack+0x1d3>
     ac8:	20 e1       	ldi	r18, 0x10	; 16
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	02 c0       	rjmp	.+4      	; 0xad2 <__stack+0x1d3>
     ace:	20 e1       	ldi	r18, 0x10	; 16
     ad0:	32 e0       	ldi	r19, 0x02	; 2
     ad2:	56 01       	movw	r10, r12
     ad4:	07 ff       	sbrs	r16, 7
     ad6:	09 c0       	rjmp	.+18     	; 0xaea <__stack+0x1eb>
     ad8:	84 e0       	ldi	r24, 0x04	; 4
     ada:	a8 0e       	add	r10, r24
     adc:	b1 1c       	adc	r11, r1
     ade:	f6 01       	movw	r30, r12
     ae0:	60 81       	ld	r22, Z
     ae2:	71 81       	ldd	r23, Z+1	; 0x01
     ae4:	82 81       	ldd	r24, Z+2	; 0x02
     ae6:	93 81       	ldd	r25, Z+3	; 0x03
     ae8:	08 c0       	rjmp	.+16     	; 0xafa <__stack+0x1fb>
     aea:	f2 e0       	ldi	r31, 0x02	; 2
     aec:	af 0e       	add	r10, r31
     aee:	b1 1c       	adc	r11, r1
     af0:	f6 01       	movw	r30, r12
     af2:	60 81       	ld	r22, Z
     af4:	71 81       	ldd	r23, Z+1	; 0x01
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	a3 01       	movw	r20, r6
     afc:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__ultoa_invert>
     b00:	c8 2e       	mov	r12, r24
     b02:	c6 18       	sub	r12, r6
     b04:	0f 77       	andi	r16, 0x7F	; 127
     b06:	90 2e       	mov	r9, r16
     b08:	96 fe       	sbrs	r9, 6
     b0a:	0b c0       	rjmp	.+22     	; 0xb22 <__stack+0x223>
     b0c:	09 2d       	mov	r16, r9
     b0e:	0e 7f       	andi	r16, 0xFE	; 254
     b10:	c1 16       	cp	r12, r17
     b12:	50 f4       	brcc	.+20     	; 0xb28 <__stack+0x229>
     b14:	94 fe       	sbrs	r9, 4
     b16:	0a c0       	rjmp	.+20     	; 0xb2c <__stack+0x22d>
     b18:	92 fc       	sbrc	r9, 2
     b1a:	08 c0       	rjmp	.+16     	; 0xb2c <__stack+0x22d>
     b1c:	09 2d       	mov	r16, r9
     b1e:	0e 7e       	andi	r16, 0xEE	; 238
     b20:	05 c0       	rjmp	.+10     	; 0xb2c <__stack+0x22d>
     b22:	dc 2c       	mov	r13, r12
     b24:	09 2d       	mov	r16, r9
     b26:	03 c0       	rjmp	.+6      	; 0xb2e <__stack+0x22f>
     b28:	dc 2c       	mov	r13, r12
     b2a:	01 c0       	rjmp	.+2      	; 0xb2e <__stack+0x22f>
     b2c:	d1 2e       	mov	r13, r17
     b2e:	04 ff       	sbrs	r16, 4
     b30:	0d c0       	rjmp	.+26     	; 0xb4c <__stack+0x24d>
     b32:	fe 01       	movw	r30, r28
     b34:	ec 0d       	add	r30, r12
     b36:	f1 1d       	adc	r31, r1
     b38:	80 81       	ld	r24, Z
     b3a:	80 33       	cpi	r24, 0x30	; 48
     b3c:	11 f4       	brne	.+4      	; 0xb42 <__stack+0x243>
     b3e:	09 7e       	andi	r16, 0xE9	; 233
     b40:	09 c0       	rjmp	.+18     	; 0xb54 <__stack+0x255>
     b42:	02 ff       	sbrs	r16, 2
     b44:	06 c0       	rjmp	.+12     	; 0xb52 <__stack+0x253>
     b46:	d3 94       	inc	r13
     b48:	d3 94       	inc	r13
     b4a:	04 c0       	rjmp	.+8      	; 0xb54 <__stack+0x255>
     b4c:	80 2f       	mov	r24, r16
     b4e:	86 78       	andi	r24, 0x86	; 134
     b50:	09 f0       	breq	.+2      	; 0xb54 <__stack+0x255>
     b52:	d3 94       	inc	r13
     b54:	03 fd       	sbrc	r16, 3
     b56:	11 c0       	rjmp	.+34     	; 0xb7a <__stack+0x27b>
     b58:	00 ff       	sbrs	r16, 0
     b5a:	06 c0       	rjmp	.+12     	; 0xb68 <__stack+0x269>
     b5c:	1c 2d       	mov	r17, r12
     b5e:	d5 14       	cp	r13, r5
     b60:	80 f4       	brcc	.+32     	; 0xb82 <__stack+0x283>
     b62:	15 0d       	add	r17, r5
     b64:	1d 19       	sub	r17, r13
     b66:	0d c0       	rjmp	.+26     	; 0xb82 <__stack+0x283>
     b68:	d5 14       	cp	r13, r5
     b6a:	58 f4       	brcc	.+22     	; 0xb82 <__stack+0x283>
     b6c:	b7 01       	movw	r22, r14
     b6e:	80 e2       	ldi	r24, 0x20	; 32
     b70:	90 e0       	ldi	r25, 0x00	; 0
     b72:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     b76:	d3 94       	inc	r13
     b78:	f7 cf       	rjmp	.-18     	; 0xb68 <__stack+0x269>
     b7a:	d5 14       	cp	r13, r5
     b7c:	10 f4       	brcc	.+4      	; 0xb82 <__stack+0x283>
     b7e:	5d 18       	sub	r5, r13
     b80:	01 c0       	rjmp	.+2      	; 0xb84 <__stack+0x285>
     b82:	51 2c       	mov	r5, r1
     b84:	04 ff       	sbrs	r16, 4
     b86:	10 c0       	rjmp	.+32     	; 0xba8 <__stack+0x2a9>
     b88:	b7 01       	movw	r22, r14
     b8a:	80 e3       	ldi	r24, 0x30	; 48
     b8c:	90 e0       	ldi	r25, 0x00	; 0
     b8e:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     b92:	02 ff       	sbrs	r16, 2
     b94:	17 c0       	rjmp	.+46     	; 0xbc4 <__stack+0x2c5>
     b96:	01 fd       	sbrc	r16, 1
     b98:	03 c0       	rjmp	.+6      	; 0xba0 <__stack+0x2a1>
     b9a:	88 e7       	ldi	r24, 0x78	; 120
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <__stack+0x2a5>
     ba0:	88 e5       	ldi	r24, 0x58	; 88
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	b7 01       	movw	r22, r14
     ba6:	0c c0       	rjmp	.+24     	; 0xbc0 <__stack+0x2c1>
     ba8:	80 2f       	mov	r24, r16
     baa:	86 78       	andi	r24, 0x86	; 134
     bac:	59 f0       	breq	.+22     	; 0xbc4 <__stack+0x2c5>
     bae:	01 ff       	sbrs	r16, 1
     bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <__stack+0x2b7>
     bb2:	8b e2       	ldi	r24, 0x2B	; 43
     bb4:	01 c0       	rjmp	.+2      	; 0xbb8 <__stack+0x2b9>
     bb6:	80 e2       	ldi	r24, 0x20	; 32
     bb8:	07 fd       	sbrc	r16, 7
     bba:	8d e2       	ldi	r24, 0x2D	; 45
     bbc:	b7 01       	movw	r22, r14
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     bc4:	c1 16       	cp	r12, r17
     bc6:	38 f4       	brcc	.+14     	; 0xbd6 <__stack+0x2d7>
     bc8:	b7 01       	movw	r22, r14
     bca:	80 e3       	ldi	r24, 0x30	; 48
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     bd2:	11 50       	subi	r17, 0x01	; 1
     bd4:	f7 cf       	rjmp	.-18     	; 0xbc4 <__stack+0x2c5>
     bd6:	ca 94       	dec	r12
     bd8:	f3 01       	movw	r30, r6
     bda:	ec 0d       	add	r30, r12
     bdc:	f1 1d       	adc	r31, r1
     bde:	80 81       	ld	r24, Z
     be0:	b7 01       	movw	r22, r14
     be2:	90 e0       	ldi	r25, 0x00	; 0
     be4:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     be8:	c1 10       	cpse	r12, r1
     bea:	f5 cf       	rjmp	.-22     	; 0xbd6 <__stack+0x2d7>
     bec:	15 c0       	rjmp	.+42     	; 0xc18 <__stack+0x319>
     bee:	f4 e0       	ldi	r31, 0x04	; 4
     bf0:	f5 15       	cp	r31, r5
     bf2:	60 f5       	brcc	.+88     	; 0xc4c <__stack+0x34d>
     bf4:	84 e0       	ldi	r24, 0x04	; 4
     bf6:	58 1a       	sub	r5, r24
     bf8:	93 fe       	sbrs	r9, 3
     bfa:	1f c0       	rjmp	.+62     	; 0xc3a <__stack+0x33b>
     bfc:	01 11       	cpse	r16, r1
     bfe:	27 c0       	rjmp	.+78     	; 0xc4e <__stack+0x34f>
     c00:	2c 85       	ldd	r18, Y+12	; 0x0c
     c02:	23 ff       	sbrs	r18, 3
     c04:	2a c0       	rjmp	.+84     	; 0xc5a <__stack+0x35b>
     c06:	0c ec       	ldi	r16, 0xCC	; 204
     c08:	10 e0       	ldi	r17, 0x00	; 0
     c0a:	39 2d       	mov	r19, r9
     c0c:	30 71       	andi	r19, 0x10	; 16
     c0e:	93 2e       	mov	r9, r19
     c10:	f8 01       	movw	r30, r16
     c12:	84 91       	lpm	r24, Z
     c14:	81 11       	cpse	r24, r1
     c16:	24 c0       	rjmp	.+72     	; 0xc60 <__stack+0x361>
     c18:	55 20       	and	r5, r5
     c1a:	09 f4       	brne	.+2      	; 0xc1e <__stack+0x31f>
     c1c:	e4 cc       	rjmp	.-1592   	; 0x5e6 <vfprintf+0x58>
     c1e:	b7 01       	movw	r22, r14
     c20:	80 e2       	ldi	r24, 0x20	; 32
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     c28:	5a 94       	dec	r5
     c2a:	f6 cf       	rjmp	.-20     	; 0xc18 <__stack+0x319>
     c2c:	f7 01       	movw	r30, r14
     c2e:	86 81       	ldd	r24, Z+6	; 0x06
     c30:	97 81       	ldd	r25, Z+7	; 0x07
     c32:	26 c0       	rjmp	.+76     	; 0xc80 <__stack+0x381>
     c34:	8f ef       	ldi	r24, 0xFF	; 255
     c36:	9f ef       	ldi	r25, 0xFF	; 255
     c38:	23 c0       	rjmp	.+70     	; 0xc80 <__stack+0x381>
     c3a:	b7 01       	movw	r22, r14
     c3c:	80 e2       	ldi	r24, 0x20	; 32
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     c44:	5a 94       	dec	r5
     c46:	51 10       	cpse	r5, r1
     c48:	f8 cf       	rjmp	.-16     	; 0xc3a <__stack+0x33b>
     c4a:	d8 cf       	rjmp	.-80     	; 0xbfc <__stack+0x2fd>
     c4c:	51 2c       	mov	r5, r1
     c4e:	b7 01       	movw	r22, r14
     c50:	80 2f       	mov	r24, r16
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     c58:	d3 cf       	rjmp	.-90     	; 0xc00 <__stack+0x301>
     c5a:	00 ed       	ldi	r16, 0xD0	; 208
     c5c:	10 e0       	ldi	r17, 0x00	; 0
     c5e:	d5 cf       	rjmp	.-86     	; 0xc0a <__stack+0x30b>
     c60:	91 10       	cpse	r9, r1
     c62:	80 52       	subi	r24, 0x20	; 32
     c64:	b7 01       	movw	r22, r14
     c66:	90 e0       	ldi	r25, 0x00	; 0
     c68:	0e 94 69 07 	call	0xed2	; 0xed2 <fputc>
     c6c:	0f 5f       	subi	r16, 0xFF	; 255
     c6e:	1f 4f       	sbci	r17, 0xFF	; 255
     c70:	cf cf       	rjmp	.-98     	; 0xc10 <__stack+0x311>
     c72:	23 e0       	ldi	r18, 0x03	; 3
     c74:	25 15       	cp	r18, r5
     c76:	10 f4       	brcc	.+4      	; 0xc7c <__stack+0x37d>
     c78:	83 e0       	ldi	r24, 0x03	; 3
     c7a:	bd cf       	rjmp	.-134    	; 0xbf6 <__stack+0x2f7>
     c7c:	51 2c       	mov	r5, r1
     c7e:	c0 cf       	rjmp	.-128    	; 0xc00 <__stack+0x301>
     c80:	60 96       	adiw	r28, 0x10	; 16
     c82:	e2 e1       	ldi	r30, 0x12	; 18
     c84:	0c 94 60 06 	jmp	0xcc0	; 0xcc0 <__epilogue_restores__>

00000c88 <__prologue_saves__>:
     c88:	2f 92       	push	r2
     c8a:	3f 92       	push	r3
     c8c:	4f 92       	push	r4
     c8e:	5f 92       	push	r5
     c90:	6f 92       	push	r6
     c92:	7f 92       	push	r7
     c94:	8f 92       	push	r8
     c96:	9f 92       	push	r9
     c98:	af 92       	push	r10
     c9a:	bf 92       	push	r11
     c9c:	cf 92       	push	r12
     c9e:	df 92       	push	r13
     ca0:	ef 92       	push	r14
     ca2:	ff 92       	push	r15
     ca4:	0f 93       	push	r16
     ca6:	1f 93       	push	r17
     ca8:	cf 93       	push	r28
     caa:	df 93       	push	r29
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	ca 1b       	sub	r28, r26
     cb2:	db 0b       	sbc	r29, r27
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	09 94       	ijmp

00000cc0 <__epilogue_restores__>:
     cc0:	2a 88       	ldd	r2, Y+18	; 0x12
     cc2:	39 88       	ldd	r3, Y+17	; 0x11
     cc4:	48 88       	ldd	r4, Y+16	; 0x10
     cc6:	5f 84       	ldd	r5, Y+15	; 0x0f
     cc8:	6e 84       	ldd	r6, Y+14	; 0x0e
     cca:	7d 84       	ldd	r7, Y+13	; 0x0d
     ccc:	8c 84       	ldd	r8, Y+12	; 0x0c
     cce:	9b 84       	ldd	r9, Y+11	; 0x0b
     cd0:	aa 84       	ldd	r10, Y+10	; 0x0a
     cd2:	b9 84       	ldd	r11, Y+9	; 0x09
     cd4:	c8 84       	ldd	r12, Y+8	; 0x08
     cd6:	df 80       	ldd	r13, Y+7	; 0x07
     cd8:	ee 80       	ldd	r14, Y+6	; 0x06
     cda:	fd 80       	ldd	r15, Y+5	; 0x05
     cdc:	0c 81       	ldd	r16, Y+4	; 0x04
     cde:	1b 81       	ldd	r17, Y+3	; 0x03
     ce0:	aa 81       	ldd	r26, Y+2	; 0x02
     ce2:	b9 81       	ldd	r27, Y+1	; 0x01
     ce4:	ce 0f       	add	r28, r30
     ce6:	d1 1d       	adc	r29, r1
     ce8:	0f b6       	in	r0, 0x3f	; 63
     cea:	f8 94       	cli
     cec:	de bf       	out	0x3e, r29	; 62
     cee:	0f be       	out	0x3f, r0	; 63
     cf0:	cd bf       	out	0x3d, r28	; 61
     cf2:	ed 01       	movw	r28, r26
     cf4:	08 95       	ret

00000cf6 <__ftoa_engine>:
     cf6:	28 30       	cpi	r18, 0x08	; 8
     cf8:	08 f0       	brcs	.+2      	; 0xcfc <__ftoa_engine+0x6>
     cfa:	27 e0       	ldi	r18, 0x07	; 7
     cfc:	33 27       	eor	r19, r19
     cfe:	da 01       	movw	r26, r20
     d00:	99 0f       	add	r25, r25
     d02:	31 1d       	adc	r19, r1
     d04:	87 fd       	sbrc	r24, 7
     d06:	91 60       	ori	r25, 0x01	; 1
     d08:	00 96       	adiw	r24, 0x00	; 0
     d0a:	61 05       	cpc	r22, r1
     d0c:	71 05       	cpc	r23, r1
     d0e:	39 f4       	brne	.+14     	; 0xd1e <__ftoa_engine+0x28>
     d10:	32 60       	ori	r19, 0x02	; 2
     d12:	2e 5f       	subi	r18, 0xFE	; 254
     d14:	3d 93       	st	X+, r19
     d16:	30 e3       	ldi	r19, 0x30	; 48
     d18:	2a 95       	dec	r18
     d1a:	e1 f7       	brne	.-8      	; 0xd14 <__ftoa_engine+0x1e>
     d1c:	08 95       	ret
     d1e:	9f 3f       	cpi	r25, 0xFF	; 255
     d20:	30 f0       	brcs	.+12     	; 0xd2e <__ftoa_engine+0x38>
     d22:	80 38       	cpi	r24, 0x80	; 128
     d24:	71 05       	cpc	r23, r1
     d26:	61 05       	cpc	r22, r1
     d28:	09 f0       	breq	.+2      	; 0xd2c <__ftoa_engine+0x36>
     d2a:	3c 5f       	subi	r19, 0xFC	; 252
     d2c:	3c 5f       	subi	r19, 0xFC	; 252
     d2e:	3d 93       	st	X+, r19
     d30:	91 30       	cpi	r25, 0x01	; 1
     d32:	08 f0       	brcs	.+2      	; 0xd36 <__ftoa_engine+0x40>
     d34:	80 68       	ori	r24, 0x80	; 128
     d36:	91 1d       	adc	r25, r1
     d38:	df 93       	push	r29
     d3a:	cf 93       	push	r28
     d3c:	1f 93       	push	r17
     d3e:	0f 93       	push	r16
     d40:	ff 92       	push	r15
     d42:	ef 92       	push	r14
     d44:	19 2f       	mov	r17, r25
     d46:	98 7f       	andi	r25, 0xF8	; 248
     d48:	96 95       	lsr	r25
     d4a:	e9 2f       	mov	r30, r25
     d4c:	96 95       	lsr	r25
     d4e:	96 95       	lsr	r25
     d50:	e9 0f       	add	r30, r25
     d52:	ff 27       	eor	r31, r31
     d54:	e2 5d       	subi	r30, 0xD2	; 210
     d56:	fe 4f       	sbci	r31, 0xFE	; 254
     d58:	99 27       	eor	r25, r25
     d5a:	33 27       	eor	r19, r19
     d5c:	ee 24       	eor	r14, r14
     d5e:	ff 24       	eor	r15, r15
     d60:	a7 01       	movw	r20, r14
     d62:	e7 01       	movw	r28, r14
     d64:	05 90       	lpm	r0, Z+
     d66:	08 94       	sec
     d68:	07 94       	ror	r0
     d6a:	28 f4       	brcc	.+10     	; 0xd76 <__ftoa_engine+0x80>
     d6c:	36 0f       	add	r19, r22
     d6e:	e7 1e       	adc	r14, r23
     d70:	f8 1e       	adc	r15, r24
     d72:	49 1f       	adc	r20, r25
     d74:	51 1d       	adc	r21, r1
     d76:	66 0f       	add	r22, r22
     d78:	77 1f       	adc	r23, r23
     d7a:	88 1f       	adc	r24, r24
     d7c:	99 1f       	adc	r25, r25
     d7e:	06 94       	lsr	r0
     d80:	a1 f7       	brne	.-24     	; 0xd6a <__ftoa_engine+0x74>
     d82:	05 90       	lpm	r0, Z+
     d84:	07 94       	ror	r0
     d86:	28 f4       	brcc	.+10     	; 0xd92 <__ftoa_engine+0x9c>
     d88:	e7 0e       	add	r14, r23
     d8a:	f8 1e       	adc	r15, r24
     d8c:	49 1f       	adc	r20, r25
     d8e:	56 1f       	adc	r21, r22
     d90:	c1 1d       	adc	r28, r1
     d92:	77 0f       	add	r23, r23
     d94:	88 1f       	adc	r24, r24
     d96:	99 1f       	adc	r25, r25
     d98:	66 1f       	adc	r22, r22
     d9a:	06 94       	lsr	r0
     d9c:	a1 f7       	brne	.-24     	; 0xd86 <__ftoa_engine+0x90>
     d9e:	05 90       	lpm	r0, Z+
     da0:	07 94       	ror	r0
     da2:	28 f4       	brcc	.+10     	; 0xdae <__ftoa_engine+0xb8>
     da4:	f8 0e       	add	r15, r24
     da6:	49 1f       	adc	r20, r25
     da8:	56 1f       	adc	r21, r22
     daa:	c7 1f       	adc	r28, r23
     dac:	d1 1d       	adc	r29, r1
     dae:	88 0f       	add	r24, r24
     db0:	99 1f       	adc	r25, r25
     db2:	66 1f       	adc	r22, r22
     db4:	77 1f       	adc	r23, r23
     db6:	06 94       	lsr	r0
     db8:	a1 f7       	brne	.-24     	; 0xda2 <__ftoa_engine+0xac>
     dba:	05 90       	lpm	r0, Z+
     dbc:	07 94       	ror	r0
     dbe:	20 f4       	brcc	.+8      	; 0xdc8 <__ftoa_engine+0xd2>
     dc0:	49 0f       	add	r20, r25
     dc2:	56 1f       	adc	r21, r22
     dc4:	c7 1f       	adc	r28, r23
     dc6:	d8 1f       	adc	r29, r24
     dc8:	99 0f       	add	r25, r25
     dca:	66 1f       	adc	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	88 1f       	adc	r24, r24
     dd0:	06 94       	lsr	r0
     dd2:	a9 f7       	brne	.-22     	; 0xdbe <__ftoa_engine+0xc8>
     dd4:	84 91       	lpm	r24, Z
     dd6:	10 95       	com	r17
     dd8:	17 70       	andi	r17, 0x07	; 7
     dda:	41 f0       	breq	.+16     	; 0xdec <__ftoa_engine+0xf6>
     ddc:	d6 95       	lsr	r29
     dde:	c7 95       	ror	r28
     de0:	57 95       	ror	r21
     de2:	47 95       	ror	r20
     de4:	f7 94       	ror	r15
     de6:	e7 94       	ror	r14
     de8:	1a 95       	dec	r17
     dea:	c1 f7       	brne	.-16     	; 0xddc <__ftoa_engine+0xe6>
     dec:	e4 ed       	ldi	r30, 0xD4	; 212
     dee:	f0 e0       	ldi	r31, 0x00	; 0
     df0:	68 94       	set
     df2:	15 90       	lpm	r1, Z+
     df4:	15 91       	lpm	r17, Z+
     df6:	35 91       	lpm	r19, Z+
     df8:	65 91       	lpm	r22, Z+
     dfa:	95 91       	lpm	r25, Z+
     dfc:	05 90       	lpm	r0, Z+
     dfe:	7f e2       	ldi	r23, 0x2F	; 47
     e00:	73 95       	inc	r23
     e02:	e1 18       	sub	r14, r1
     e04:	f1 0a       	sbc	r15, r17
     e06:	43 0b       	sbc	r20, r19
     e08:	56 0b       	sbc	r21, r22
     e0a:	c9 0b       	sbc	r28, r25
     e0c:	d0 09       	sbc	r29, r0
     e0e:	c0 f7       	brcc	.-16     	; 0xe00 <__ftoa_engine+0x10a>
     e10:	e1 0c       	add	r14, r1
     e12:	f1 1e       	adc	r15, r17
     e14:	43 1f       	adc	r20, r19
     e16:	56 1f       	adc	r21, r22
     e18:	c9 1f       	adc	r28, r25
     e1a:	d0 1d       	adc	r29, r0
     e1c:	7e f4       	brtc	.+30     	; 0xe3c <__ftoa_engine+0x146>
     e1e:	70 33       	cpi	r23, 0x30	; 48
     e20:	11 f4       	brne	.+4      	; 0xe26 <__ftoa_engine+0x130>
     e22:	8a 95       	dec	r24
     e24:	e6 cf       	rjmp	.-52     	; 0xdf2 <__ftoa_engine+0xfc>
     e26:	e8 94       	clt
     e28:	01 50       	subi	r16, 0x01	; 1
     e2a:	30 f0       	brcs	.+12     	; 0xe38 <__ftoa_engine+0x142>
     e2c:	08 0f       	add	r16, r24
     e2e:	0a f4       	brpl	.+2      	; 0xe32 <__ftoa_engine+0x13c>
     e30:	00 27       	eor	r16, r16
     e32:	02 17       	cp	r16, r18
     e34:	08 f4       	brcc	.+2      	; 0xe38 <__ftoa_engine+0x142>
     e36:	20 2f       	mov	r18, r16
     e38:	23 95       	inc	r18
     e3a:	02 2f       	mov	r16, r18
     e3c:	7a 33       	cpi	r23, 0x3A	; 58
     e3e:	28 f0       	brcs	.+10     	; 0xe4a <__ftoa_engine+0x154>
     e40:	79 e3       	ldi	r23, 0x39	; 57
     e42:	7d 93       	st	X+, r23
     e44:	2a 95       	dec	r18
     e46:	e9 f7       	brne	.-6      	; 0xe42 <__ftoa_engine+0x14c>
     e48:	10 c0       	rjmp	.+32     	; 0xe6a <__ftoa_engine+0x174>
     e4a:	7d 93       	st	X+, r23
     e4c:	2a 95       	dec	r18
     e4e:	89 f6       	brne	.-94     	; 0xdf2 <__ftoa_engine+0xfc>
     e50:	06 94       	lsr	r0
     e52:	97 95       	ror	r25
     e54:	67 95       	ror	r22
     e56:	37 95       	ror	r19
     e58:	17 95       	ror	r17
     e5a:	17 94       	ror	r1
     e5c:	e1 18       	sub	r14, r1
     e5e:	f1 0a       	sbc	r15, r17
     e60:	43 0b       	sbc	r20, r19
     e62:	56 0b       	sbc	r21, r22
     e64:	c9 0b       	sbc	r28, r25
     e66:	d0 09       	sbc	r29, r0
     e68:	98 f0       	brcs	.+38     	; 0xe90 <__ftoa_engine+0x19a>
     e6a:	23 95       	inc	r18
     e6c:	7e 91       	ld	r23, -X
     e6e:	73 95       	inc	r23
     e70:	7a 33       	cpi	r23, 0x3A	; 58
     e72:	08 f0       	brcs	.+2      	; 0xe76 <__ftoa_engine+0x180>
     e74:	70 e3       	ldi	r23, 0x30	; 48
     e76:	7c 93       	st	X, r23
     e78:	20 13       	cpse	r18, r16
     e7a:	b8 f7       	brcc	.-18     	; 0xe6a <__ftoa_engine+0x174>
     e7c:	7e 91       	ld	r23, -X
     e7e:	70 61       	ori	r23, 0x10	; 16
     e80:	7d 93       	st	X+, r23
     e82:	30 f0       	brcs	.+12     	; 0xe90 <__ftoa_engine+0x19a>
     e84:	83 95       	inc	r24
     e86:	71 e3       	ldi	r23, 0x31	; 49
     e88:	7d 93       	st	X+, r23
     e8a:	70 e3       	ldi	r23, 0x30	; 48
     e8c:	2a 95       	dec	r18
     e8e:	e1 f7       	brne	.-8      	; 0xe88 <__ftoa_engine+0x192>
     e90:	11 24       	eor	r1, r1
     e92:	ef 90       	pop	r14
     e94:	ff 90       	pop	r15
     e96:	0f 91       	pop	r16
     e98:	1f 91       	pop	r17
     e9a:	cf 91       	pop	r28
     e9c:	df 91       	pop	r29
     e9e:	99 27       	eor	r25, r25
     ea0:	87 fd       	sbrc	r24, 7
     ea2:	90 95       	com	r25
     ea4:	08 95       	ret

00000ea6 <strnlen_P>:
     ea6:	fc 01       	movw	r30, r24
     ea8:	05 90       	lpm	r0, Z+
     eaa:	61 50       	subi	r22, 0x01	; 1
     eac:	70 40       	sbci	r23, 0x00	; 0
     eae:	01 10       	cpse	r0, r1
     eb0:	d8 f7       	brcc	.-10     	; 0xea8 <strnlen_P+0x2>
     eb2:	80 95       	com	r24
     eb4:	90 95       	com	r25
     eb6:	8e 0f       	add	r24, r30
     eb8:	9f 1f       	adc	r25, r31
     eba:	08 95       	ret

00000ebc <strnlen>:
     ebc:	fc 01       	movw	r30, r24
     ebe:	61 50       	subi	r22, 0x01	; 1
     ec0:	70 40       	sbci	r23, 0x00	; 0
     ec2:	01 90       	ld	r0, Z+
     ec4:	01 10       	cpse	r0, r1
     ec6:	d8 f7       	brcc	.-10     	; 0xebe <strnlen+0x2>
     ec8:	80 95       	com	r24
     eca:	90 95       	com	r25
     ecc:	8e 0f       	add	r24, r30
     ece:	9f 1f       	adc	r25, r31
     ed0:	08 95       	ret

00000ed2 <fputc>:
     ed2:	0f 93       	push	r16
     ed4:	1f 93       	push	r17
     ed6:	cf 93       	push	r28
     ed8:	df 93       	push	r29
     eda:	fb 01       	movw	r30, r22
     edc:	23 81       	ldd	r18, Z+3	; 0x03
     ede:	21 fd       	sbrc	r18, 1
     ee0:	03 c0       	rjmp	.+6      	; 0xee8 <fputc+0x16>
     ee2:	8f ef       	ldi	r24, 0xFF	; 255
     ee4:	9f ef       	ldi	r25, 0xFF	; 255
     ee6:	2c c0       	rjmp	.+88     	; 0xf40 <fputc+0x6e>
     ee8:	22 ff       	sbrs	r18, 2
     eea:	16 c0       	rjmp	.+44     	; 0xf18 <fputc+0x46>
     eec:	46 81       	ldd	r20, Z+6	; 0x06
     eee:	57 81       	ldd	r21, Z+7	; 0x07
     ef0:	24 81       	ldd	r18, Z+4	; 0x04
     ef2:	35 81       	ldd	r19, Z+5	; 0x05
     ef4:	42 17       	cp	r20, r18
     ef6:	53 07       	cpc	r21, r19
     ef8:	44 f4       	brge	.+16     	; 0xf0a <fputc+0x38>
     efa:	a0 81       	ld	r26, Z
     efc:	b1 81       	ldd	r27, Z+1	; 0x01
     efe:	9d 01       	movw	r18, r26
     f00:	2f 5f       	subi	r18, 0xFF	; 255
     f02:	3f 4f       	sbci	r19, 0xFF	; 255
     f04:	31 83       	std	Z+1, r19	; 0x01
     f06:	20 83       	st	Z, r18
     f08:	8c 93       	st	X, r24
     f0a:	26 81       	ldd	r18, Z+6	; 0x06
     f0c:	37 81       	ldd	r19, Z+7	; 0x07
     f0e:	2f 5f       	subi	r18, 0xFF	; 255
     f10:	3f 4f       	sbci	r19, 0xFF	; 255
     f12:	37 83       	std	Z+7, r19	; 0x07
     f14:	26 83       	std	Z+6, r18	; 0x06
     f16:	14 c0       	rjmp	.+40     	; 0xf40 <fputc+0x6e>
     f18:	8b 01       	movw	r16, r22
     f1a:	ec 01       	movw	r28, r24
     f1c:	fb 01       	movw	r30, r22
     f1e:	00 84       	ldd	r0, Z+8	; 0x08
     f20:	f1 85       	ldd	r31, Z+9	; 0x09
     f22:	e0 2d       	mov	r30, r0
     f24:	09 95       	icall
     f26:	89 2b       	or	r24, r25
     f28:	e1 f6       	brne	.-72     	; 0xee2 <fputc+0x10>
     f2a:	d8 01       	movw	r26, r16
     f2c:	16 96       	adiw	r26, 0x06	; 6
     f2e:	8d 91       	ld	r24, X+
     f30:	9c 91       	ld	r25, X
     f32:	17 97       	sbiw	r26, 0x07	; 7
     f34:	01 96       	adiw	r24, 0x01	; 1
     f36:	17 96       	adiw	r26, 0x07	; 7
     f38:	9c 93       	st	X, r25
     f3a:	8e 93       	st	-X, r24
     f3c:	16 97       	sbiw	r26, 0x06	; 6
     f3e:	ce 01       	movw	r24, r28
     f40:	df 91       	pop	r29
     f42:	cf 91       	pop	r28
     f44:	1f 91       	pop	r17
     f46:	0f 91       	pop	r16
     f48:	08 95       	ret

00000f4a <printf>:
     f4a:	a0 e0       	ldi	r26, 0x00	; 0
     f4c:	b0 e0       	ldi	r27, 0x00	; 0
     f4e:	eb ea       	ldi	r30, 0xAB	; 171
     f50:	f7 e0       	ldi	r31, 0x07	; 7
     f52:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__prologue_saves__+0x20>
     f56:	ae 01       	movw	r20, r28
     f58:	4b 5f       	subi	r20, 0xFB	; 251
     f5a:	5f 4f       	sbci	r21, 0xFF	; 255
     f5c:	fa 01       	movw	r30, r20
     f5e:	61 91       	ld	r22, Z+
     f60:	71 91       	ld	r23, Z+
     f62:	af 01       	movw	r20, r30
     f64:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <__iob+0x2>
     f68:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <__iob+0x3>
     f6c:	0e 94 c7 02 	call	0x58e	; 0x58e <vfprintf>
     f70:	e2 e0       	ldi	r30, 0x02	; 2
     f72:	0c 94 70 06 	jmp	0xce0	; 0xce0 <__epilogue_restores__+0x20>

00000f76 <puts>:
     f76:	0f 93       	push	r16
     f78:	1f 93       	push	r17
     f7a:	cf 93       	push	r28
     f7c:	df 93       	push	r29
     f7e:	e0 91 a7 01 	lds	r30, 0x01A7	; 0x8001a7 <__iob+0x2>
     f82:	f0 91 a8 01 	lds	r31, 0x01A8	; 0x8001a8 <__iob+0x3>
     f86:	23 81       	ldd	r18, Z+3	; 0x03
     f88:	21 ff       	sbrs	r18, 1
     f8a:	1b c0       	rjmp	.+54     	; 0xfc2 <puts+0x4c>
     f8c:	8c 01       	movw	r16, r24
     f8e:	d0 e0       	ldi	r29, 0x00	; 0
     f90:	c0 e0       	ldi	r28, 0x00	; 0
     f92:	f8 01       	movw	r30, r16
     f94:	81 91       	ld	r24, Z+
     f96:	8f 01       	movw	r16, r30
     f98:	60 91 a7 01 	lds	r22, 0x01A7	; 0x8001a7 <__iob+0x2>
     f9c:	70 91 a8 01 	lds	r23, 0x01A8	; 0x8001a8 <__iob+0x3>
     fa0:	db 01       	movw	r26, r22
     fa2:	18 96       	adiw	r26, 0x08	; 8
     fa4:	ed 91       	ld	r30, X+
     fa6:	fc 91       	ld	r31, X
     fa8:	19 97       	sbiw	r26, 0x09	; 9
     faa:	88 23       	and	r24, r24
     fac:	31 f0       	breq	.+12     	; 0xfba <puts+0x44>
     fae:	09 95       	icall
     fb0:	89 2b       	or	r24, r25
     fb2:	79 f3       	breq	.-34     	; 0xf92 <puts+0x1c>
     fb4:	df ef       	ldi	r29, 0xFF	; 255
     fb6:	cf ef       	ldi	r28, 0xFF	; 255
     fb8:	ec cf       	rjmp	.-40     	; 0xf92 <puts+0x1c>
     fba:	8a e0       	ldi	r24, 0x0A	; 10
     fbc:	09 95       	icall
     fbe:	89 2b       	or	r24, r25
     fc0:	19 f0       	breq	.+6      	; 0xfc8 <puts+0x52>
     fc2:	8f ef       	ldi	r24, 0xFF	; 255
     fc4:	9f ef       	ldi	r25, 0xFF	; 255
     fc6:	02 c0       	rjmp	.+4      	; 0xfcc <puts+0x56>
     fc8:	8d 2f       	mov	r24, r29
     fca:	9c 2f       	mov	r25, r28
     fcc:	df 91       	pop	r29
     fce:	cf 91       	pop	r28
     fd0:	1f 91       	pop	r17
     fd2:	0f 91       	pop	r16
     fd4:	08 95       	ret

00000fd6 <__ultoa_invert>:
     fd6:	fa 01       	movw	r30, r20
     fd8:	aa 27       	eor	r26, r26
     fda:	28 30       	cpi	r18, 0x08	; 8
     fdc:	51 f1       	breq	.+84     	; 0x1032 <__ultoa_invert+0x5c>
     fde:	20 31       	cpi	r18, 0x10	; 16
     fe0:	81 f1       	breq	.+96     	; 0x1042 <__ultoa_invert+0x6c>
     fe2:	e8 94       	clt
     fe4:	6f 93       	push	r22
     fe6:	6e 7f       	andi	r22, 0xFE	; 254
     fe8:	6e 5f       	subi	r22, 0xFE	; 254
     fea:	7f 4f       	sbci	r23, 0xFF	; 255
     fec:	8f 4f       	sbci	r24, 0xFF	; 255
     fee:	9f 4f       	sbci	r25, 0xFF	; 255
     ff0:	af 4f       	sbci	r26, 0xFF	; 255
     ff2:	b1 e0       	ldi	r27, 0x01	; 1
     ff4:	3e d0       	rcall	.+124    	; 0x1072 <__ultoa_invert+0x9c>
     ff6:	b4 e0       	ldi	r27, 0x04	; 4
     ff8:	3c d0       	rcall	.+120    	; 0x1072 <__ultoa_invert+0x9c>
     ffa:	67 0f       	add	r22, r23
     ffc:	78 1f       	adc	r23, r24
     ffe:	89 1f       	adc	r24, r25
    1000:	9a 1f       	adc	r25, r26
    1002:	a1 1d       	adc	r26, r1
    1004:	68 0f       	add	r22, r24
    1006:	79 1f       	adc	r23, r25
    1008:	8a 1f       	adc	r24, r26
    100a:	91 1d       	adc	r25, r1
    100c:	a1 1d       	adc	r26, r1
    100e:	6a 0f       	add	r22, r26
    1010:	71 1d       	adc	r23, r1
    1012:	81 1d       	adc	r24, r1
    1014:	91 1d       	adc	r25, r1
    1016:	a1 1d       	adc	r26, r1
    1018:	20 d0       	rcall	.+64     	; 0x105a <__ultoa_invert+0x84>
    101a:	09 f4       	brne	.+2      	; 0x101e <__ultoa_invert+0x48>
    101c:	68 94       	set
    101e:	3f 91       	pop	r19
    1020:	2a e0       	ldi	r18, 0x0A	; 10
    1022:	26 9f       	mul	r18, r22
    1024:	11 24       	eor	r1, r1
    1026:	30 19       	sub	r19, r0
    1028:	30 5d       	subi	r19, 0xD0	; 208
    102a:	31 93       	st	Z+, r19
    102c:	de f6       	brtc	.-74     	; 0xfe4 <__ultoa_invert+0xe>
    102e:	cf 01       	movw	r24, r30
    1030:	08 95       	ret
    1032:	46 2f       	mov	r20, r22
    1034:	47 70       	andi	r20, 0x07	; 7
    1036:	40 5d       	subi	r20, 0xD0	; 208
    1038:	41 93       	st	Z+, r20
    103a:	b3 e0       	ldi	r27, 0x03	; 3
    103c:	0f d0       	rcall	.+30     	; 0x105c <__ultoa_invert+0x86>
    103e:	c9 f7       	brne	.-14     	; 0x1032 <__ultoa_invert+0x5c>
    1040:	f6 cf       	rjmp	.-20     	; 0x102e <__ultoa_invert+0x58>
    1042:	46 2f       	mov	r20, r22
    1044:	4f 70       	andi	r20, 0x0F	; 15
    1046:	40 5d       	subi	r20, 0xD0	; 208
    1048:	4a 33       	cpi	r20, 0x3A	; 58
    104a:	18 f0       	brcs	.+6      	; 0x1052 <__ultoa_invert+0x7c>
    104c:	49 5d       	subi	r20, 0xD9	; 217
    104e:	31 fd       	sbrc	r19, 1
    1050:	40 52       	subi	r20, 0x20	; 32
    1052:	41 93       	st	Z+, r20
    1054:	02 d0       	rcall	.+4      	; 0x105a <__ultoa_invert+0x84>
    1056:	a9 f7       	brne	.-22     	; 0x1042 <__ultoa_invert+0x6c>
    1058:	ea cf       	rjmp	.-44     	; 0x102e <__ultoa_invert+0x58>
    105a:	b4 e0       	ldi	r27, 0x04	; 4
    105c:	a6 95       	lsr	r26
    105e:	97 95       	ror	r25
    1060:	87 95       	ror	r24
    1062:	77 95       	ror	r23
    1064:	67 95       	ror	r22
    1066:	ba 95       	dec	r27
    1068:	c9 f7       	brne	.-14     	; 0x105c <__ultoa_invert+0x86>
    106a:	00 97       	sbiw	r24, 0x00	; 0
    106c:	61 05       	cpc	r22, r1
    106e:	71 05       	cpc	r23, r1
    1070:	08 95       	ret
    1072:	9b 01       	movw	r18, r22
    1074:	ac 01       	movw	r20, r24
    1076:	0a 2e       	mov	r0, r26
    1078:	06 94       	lsr	r0
    107a:	57 95       	ror	r21
    107c:	47 95       	ror	r20
    107e:	37 95       	ror	r19
    1080:	27 95       	ror	r18
    1082:	ba 95       	dec	r27
    1084:	c9 f7       	brne	.-14     	; 0x1078 <__ultoa_invert+0xa2>
    1086:	62 0f       	add	r22, r18
    1088:	73 1f       	adc	r23, r19
    108a:	84 1f       	adc	r24, r20
    108c:	95 1f       	adc	r25, r21
    108e:	a0 1d       	adc	r26, r0
    1090:	08 95       	ret

00001092 <_exit>:
    1092:	f8 94       	cli

00001094 <__stop_program>:
    1094:	ff cf       	rjmp	.-2      	; 0x1094 <__stop_program>
